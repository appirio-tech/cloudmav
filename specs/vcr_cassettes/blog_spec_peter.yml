--- 
- !ruby/struct:VCR::HTTPInteraction 
  request: !ruby/struct:VCR::Request 
    method: :get
    uri: http://feeds.feedburner.com:80/pseale
    body: 
    headers: 
  response: !ruby/struct:VCR::Response 
    status: !ruby/struct:VCR::ResponseStatus 
      code: 200
      message: OK
    headers: 
      content-type: 
      - text/xml; charset=UTF-8
      etag: 
      - Ryf+koXgmPdTFM2fkriTBrjargo
      last-modified: 
      - Thu, 26 May 2011 04:03:09 GMT
      date: 
      - Thu, 26 May 2011 04:59:00 GMT
      expires: 
      - Thu, 26 May 2011 04:59:00 GMT
      cache-control: 
      - private, max-age=0
      x-content-type-options: 
      - nosniff
      x-xss-protection: 
      - 1; mode=block
      server: 
      - GSE
      transfer-encoding: 
      - chunked
    body: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\
      <?xml-stylesheet type=\"text/xsl\" media=\"screen\" href=\"/~d/styles/atom10full.xsl\"?><?xml-stylesheet type=\"text/css\" media=\"screen\" href=\"http://feeds.feedburner.com/~d/styles/itemcontent.css\"?><feed xmlns=\"http://www.w3.org/2005/Atom\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xml:lang=\"en-us\">\r\n  <title>Peter Seale's weblog - SharePoint | PowerShell | Awesomeness</title>\r\n  <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/\" />\r\n  \r\n  <logo>http://www.pseale.com/favicon.ico</logo>\r\n  <icon>favicon.ico</icon>\r\n  <updated>2011-03-22T08:23:38.3226954-07:00</updated>\r\n  <author>\r\n    <name>Peter Seale</name>\r\n  </author>\r\n  <subtitle />\r\n  <id>http://www.pseale.com/blog/</id>\r\n  <generator uri=\"http://dasblog.info/\" version=\"2.2.8279.16125\">DasBlog</generator>\r\n  <atom10:link xmlns:atom10=\"http://www.w3.org/2005/Atom\" rel=\"self\" type=\"application/atom+xml\" href=\"http://feeds.feedburner.com/pseale\" /><feedburner:info xmlns:feedburner=\"http://rssnamespace.org/feedburner/ext/1.0\" uri=\"pseale\" /><atom10:link xmlns:atom10=\"http://www.w3.org/2005/Atom\" rel=\"hub\" href=\"http://pubsubhubbub.appspot.com/\" /><entry>\r\n    <title>The True Measure Of Productivity</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/TheTrueMeasureOfProductivity.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,34308fc8-3e63-406e-870f-b55a28c19685.aspx</id>\r\n    <published>2011-03-22T08:23:38.3226954-07:00</published>\r\n    <updated>2011-03-22T08:23:38.3226954-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <category term=\"Awesomeness\" label=\"Awesomeness\" scheme=\"http://www.pseale.com/blog/CategoryView,category,Awesomeness.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/The-True-Measure-Of-Productivity_915F/true-measure-of-productivity_2.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"true-measure-of-productivity\" border=\"0\" alt=\"true-measure-of-productivity\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/The-True-Measure-Of-Productivity_915F/true-measure-of-productivity_thumb.png\" width=\"409\" height=\"406\" />\r\n          </a>\r\n        </p>\r\n        <p>\r\n\
      This screenshot was taken in the wild by me, at my computer a while back.\r\n\
      </p>\r\n        <p>\r\n\
      Each Cassini tray icon roughly equals one standard unit of productivity. By this completely\r\n\
      unbiased, objective measure, I\xE2\x80\x99m about seven hundred times more productive than you.\r\n\
      Give or take.\r\n\
      </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Quotes From The Internet</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/QuotesFromTheInternet.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,c7656a65-4c3e-4ab7-92e6-b8519d97bda8.aspx</id>\r\n    <published>2011-03-18T11:54:18.9537557-07:00</published>\r\n    <updated>2011-03-18T11:54:18.9537557-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      I\xE2\x80\x99m just here today to pass along a few gems, both relating to OOP.\r\n\
      </p>\r\n        <p>\r\n          <a href=\"http://news.ycombinator.com/item?id=2340105\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"quote2\" border=\"0\" alt=\"quote2\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/97a716667d69_C08D/quote2_3.png\" width=\"661\" height=\"307\" />\r\n          </a>\r\n        </p>\r\n        <p>\r\n          <a href=\"http://news.ycombinator.com/item?id=2332418\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"quote1\" border=\"0\" alt=\"quote1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/97a716667d69_C08D/quote1_94ad99ad-98eb-45e8-8351-e7df965ca067.png\" width=\"662\" height=\"150\" />\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>TFS As Your Build/CI Server: Only Positive Takeaways 1 of 2</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/TFSAsYourBuildCIServerOnlyPositiveTakeaways1Of2.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,58295a52-afbf-42e2-ac82-bccf50ec806d.aspx</id>\r\n    <published>2011-02-08T22:00:00-08:00</published>\r\n    <updated>2011-02-03T17:10:03.9125169-08:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      This post is a grab bag of information, techniques, and landmines I wish someone had\r\n\
      told me when we first set out to run our build/deploy on top of TFS. What follows\r\n\
      is a short, all-positive compilation of everything I\xE2\x80\x99ve learned about TFS 2010. I\xE2\x80\x99ll\r\n\
      assume you work with TFS on a daily basis, and thus won\xE2\x80\x99t attempt to explain TFS concepts\r\n\
      (shelving, for example).\r\n\
      </p>\r\n        <h3>All positive\r\n\
      </h3>\r\n        <p>\r\n\
      All-positive means that <strong>I will not complain about TFS</strong>. I will not.\r\n\
      I\xE2\x80\x99ll <strong>only </strong>provide helpful workarounds I\xE2\x80\x99ve found. \r\n\
      </p>\r\n        <h3>Mini-review of TFS\xE2\x80\x99s continuous integration featureset\r\n\
      </h3>\r\n        <p>\r\n\
      Between TeamCity and TFS, having used both in two environments and having recently\r\n\
      used the newest versions of both, I\xE2\x80\x99d prefer TeamCity in a landslide. I can fire off\r\n\
      out a bulleted list of specific ways TeamCity is better, but in the interest of staying\r\n\
      positive, let\xE2\x80\x99s just move on.\r\n\
      </p>\r\n        <h3>Tips for working with TFS source control\r\n\
      </h3>\r\n        <h4>Merging\r\n\
      </h4>\r\n        <p>\r\n          <strong>If in doubt, don\xE2\x80\x99t automerge</strong>.<strong> If you are having problems\r\n\
      with TFS merges, you can solve all your problems by manually merging every file.</strong>\xC2\xA0\r\n\
      TFS 2005 was notoriously bad at auto-merging (i.e. performing server-side merges),\r\n\
      so the only way to win, was not to play. \r\n\
      </p>\r\n        <p>\r\n          <strong>In TFS 2010, I will 99% certify that automerging works.</strong> TFS 2010\r\n\
      has improved, and our team has had almost perfect success with automerging, though\r\n\
      there are hiccups here and there. We\xE2\x80\x99ve had merging issues, but I\xE2\x80\x99m not convinced\r\n\
      our merging issues are automerge issues. 99% is pretty good. Let me know in the comments\r\n\
      if you can definitely blame TFS 2010 automerge for a botched merge.\r\n\
      </p>\r\n        <p>\r\n          <strong>Replace your client-side merge tool with one you can trust.</strong> The built-in\r\n\
      VS2010 merge/compare tool works. However, I had \xE2\x80\x9Can incident.\xE2\x80\x9D \xE2\x80\x9CIncidents\xE2\x80\x9D are bad\r\n\
      when merging. What happened is, the VS merge tool mistakenly matched up two entirely\r\n\
      different methods and attempted to \xE2\x80\x9Cmerge\xE2\x80\x9D the changes. Merging the contents of method\r\n\
      A() into method B() is bad. It\xE2\x80\x99s bad enough to go looking for a replacement. So, <a href=\"http://www.richard-banks.org/2009/09/using-p4merge-with-visual-studio-2008.html\">following\r\n\
      these instructions, I replaced the built-in merge tool with Perforce\xE2\x80\x99s free P4Merge</a>.\r\n\
      </p>\r\n        <p>\r\n          <strong>Weird merge conflicts with renamed files? Accept the lesser victory and step\r\n\
      a) delete, then step b) re-create any files that cause weird merge issues.</strong> This\r\n\
      breaks the file\xE2\x80\x99s version history, but solves your bigger problem.\r\n\
      </p>\r\n        <h3>Workspace tips\r\n\
      </h3>\r\n        <p>\r\n\
      I know lots of you have problems with TFS and how it deals with files. I don\xE2\x80\x99t. I\r\n\
      don\xE2\x80\x99t know if I\xE2\x80\x99m just not exercising the tool enough, but I\xE2\x80\x99m not having problems, <em>now\r\n\
      that I know what not to do</em>. Specific advice follows:\r\n\
      </p>\r\n        <p>\r\n          <strong>Don\xE2\x80\x99t go offline. The consequences can be worse than you think.</strong> I\xE2\x80\x99ve\r\n\
      never had success with offline mode, and what\xE2\x80\x99s worse, until you go back online, the\r\n\
      Team Explorer hides your TFS server from the list. I\xE2\x80\x99ve had something of a <a href=\"http://www.neilpullinger.co.uk/2009/11/solution-is-offline-because-its.html\">traumatic\r\n\
      experience</a> with offline mode, so it\xE2\x80\x99s hard to stay positive or even fake sound\r\n\
      positive when describing offline mode. Just don\xE2\x80\x99t go offline unless you know how to\r\n\
      get back online. For the record, I\xE2\x80\x99m using the newest of the new with TFS 2010 and\r\n\
      Visual Studio 2010, and even so, even with the newest tools I\xE2\x80\x99m experiencing problems.\r\n\
      I\xE2\x80\x99ll give a blanket recommendation that you don\xE2\x80\x99t try it.\r\n\
      </p>\r\n        <p>\r\n          <strong>Do as much editing as possible inside Visual Studio Solutions or Projects.</strong> It\xE2\x80\x99s\r\n\
      easier to create, edit, move, and delete files inside Solutions or Projects (files\r\n\
      inside Solutions are automatically tracked in TFS). Treat Solutions ands Projects\r\n\
      as a rail rides: stay in the cart travelling slowly down the rails. Do not exit the\r\n\
      cart. In case of fire, follow emergency procedures (spelled out further below).\r\n\
      </p>\r\n        <p>\r\n\
      This goes against advice I\xE2\x80\x99ve heard. I\xE2\x80\x99ve heard that TFS source control is <strong>more\r\n\
      manageable from the command-line</strong> than via Visual Studio. But for me, I prefer\r\n\
      to let Visual Studio\xE2\x80\x99s integration automatically check out files for editing. So,\r\n\
      whenever possible I work underneath the protective umbrella of Solutions and Projects.\r\n\
      </p>\r\n        <p>\r\n          <strong>Remember TFS does not automatically track file changes, not even partially</strong> like\r\n\
      SVN or git. This means:\r\n\
      </p>\r\n        <p>\r\n          <strong>Explicitly rename or move files</strong> in Source Control Explorer.\r\n\
      </p>\r\n        <p>\r\n          <strong>Explicitly delete files</strong> from Source Control Explorer.\r\n\
      </p>\r\n        <p>\r\n          <strong>Explicitly add files</strong> from Source Control Explorer.\r\n\
      </p>\r\n        <p>\r\n          <strong>Check out files in Source Control Explorer to edit</strong>. Or, reworded:\r\n\
      </p>\r\n        <p>\r\n          <strong>Be sure to check out <u>first</u>, <u>before</u> editing files outside of\r\n\
      Visual Studio.</strong> This means when running any kind of code generation, generating\r\n\
      assembly info files, or even something as simple as editing PowerShell scripts with\r\n\
      the ISE\xE2\x80\x94in all cases, be sure to check out <strong>first</strong>. <strong>Then</strong> edit. <strong>Last, </strong>check\r\n\
      in (or undo). \r\n\
      </p>\r\n        <p>\r\n\
      If you don\xE2\x80\x99t follow these steps in order, you\xE2\x80\x99ll experience bad things. Notably, if\r\n\
      you try to check out <strong>after </strong>successfully editing a file, you\xE2\x80\x99re presented\r\n\
      with a merge conflict.\r\n\
      </p>\r\n        <p>\r\n          <strong>If something gets weird, destroy your entire folder (or entire Workspace)\r\n\
      and get latest+force override.</strong> Don\xE2\x80\x99t try to get too specific and get one\r\n\
      or two files. Delete the whole folder, then get latest+force override. It\xE2\x80\x99s quick,\r\n\
      just do it.\r\n\
      </p>\r\n        <p>\r\n          <strong>There\xE2\x80\x99s no good way to temporarily edit a file </strong>(e.g. temporarily\r\n\
      change the connection string in your app.config)<strong> without triggering a checkout.</strong> If\r\n\
      you ever need to temporarily edit a file but don\xE2\x80\x99t ever want to check in the change,\r\n\
      well\xE2\x80\xA6there\xE2\x80\x99s really no good way to go about it. In fact there are several not-good\r\n\
      ways to go about it:\r\n\
      </p>\r\n        <ol>\r\n        </ol>\r\n        <ol>\r\n          <li>\r\n\
      Just check out the file and edit it, and <strong>simply remember </strong>to undo\r\n\
      your changes later. \r\n\
      </li>\r\n          <li>\r\n\
      Cheat. Open the file via Windows Explorer, and unset its Read-Only flag. And, when\r\n\
      you want the file to go back to its original state, <strong>simply remember</strong> to\r\n\
      get the latest version of the file + force override. \r\n\
      </li>\r\n          <li>\r\n\
      Cheat. Open a prompt at the root of your workspace and run <font face=\"Courier New\">attrib\r\n\
      -r *.* /s</font>. This is the nuclear option, as TFS will now assume you\xE2\x80\x99ve edited\r\n\
      every single file in your workspace, and will treat any updates as merge conflicts.\r\n\
      Don\xE2\x80\x99t do this. I\xE2\x80\x99ve done it so I can tell you not to try it. \r\n\
      </li>\r\n        </ol>\r\n        <p>\r\n          <strong>Shelvesets work.</strong> Trust them. Use them. Use them frequently. Make\r\n\
      as many of them as you want. Give them dumb names if they contain trash (I have shelvesets\r\n\
      named \xE2\x80\x9Caaaaaaa\xE2\x80\x9D and \xE2\x80\x9Caaaaaaaaaaaa\xE2\x80\x9D, and of course, one named \xE2\x80\x9Chelp\xE2\x80\x9D). You can find\r\n\
      them later, just sort by date. Easy.\r\n\
      </p>\r\n        <p>\r\n          <strong>Always shelve from Source Control Explorer</strong> to keep things simple.\r\n\
      If you Shelve a Solution, you may miss files. I\xE2\x80\x99ve missed files when I shelved a Solution.\r\n\
      Don\xE2\x80\x99t be me.\r\n\
      </p>\r\n        <h3>MSTest tips (specifically: using MSTest for your unit and integration tests)\r\n\
      </h3>\r\n        <p>\r\n          <strong>Switching from NUnit is a cinch.</strong> All the attribute names are different,\r\n\
      but only slightly. In With the exception of one MSTest feature:\r\n\
      </p>\r\n        <p>\r\n          <strong>Learn about localtestrun.config and how it works.</strong> We\xE2\x80\x99ve started using\r\n\
      it, and while it\xE2\x80\x99s convenient, it\xE2\x80\x99s essentially a non-composable* way to copy files\r\n\
      you need for your tests. \r\n\
      <br /><font size=\"1\">* i.e. once you start using localtestrun.config, you can\xE2\x80\x99t just switch\r\n\
      to NUnit or XUnit without some pain. Alternately, if you had coded up manual file\r\n\
      copying, you wouldn\xE2\x80\x99t have any issues converting to or from NUnit/XUnit.Also, the\r\n\
      localtestrun.config may be responsible for our extremely slow test runs.</font></p>\r\n        <p>\r\n          <strong>The test runner is excellent\xE2\x80\xA6and slow.</strong> It\xE2\x80\x99s not entirely the test\r\n\
      runner\xE2\x80\x99s fault, as the Resharper test runner is equally slow (I\xE2\x80\x99ve tried). I gave\r\n\
      up using Resharper\xE2\x80\x99s test runner when I found out it was just as slow, <strong>and</strong> has\r\n\
      imperfect (broken) localtestrun.config support. Note, tests are slower by a large\r\n\
      factor if you\xE2\x80\x99re running code coverage.\r\n\
      </p>\r\n        <p>\r\n\
      If not for the slowness and the occasional bug and some wonky behavior during debug\r\n\
      sessions, I\xE2\x80\x99d say the VS test runner is as good as Resharper\xE2\x80\x99s test runner or TestDriven.NET.\r\n\
      Short note about TestDriven.NET: like VirtualBox, it\xE2\x80\x99s not free for corporate use.\r\n\
      Read the EULA.\r\n\
      </p>\r\n        <p>\r\n          <strong>IntelliTrace sounds nice, but crashes test runs.</strong> We turned it off\r\n\
      so it stopped crashing our test runs.\r\n\
      </p>\r\n        <p>\r\n          <strong>Learn the keystrokes for running tests.</strong> CTRL+R, t. CTRL+R, a. Similar\r\n\
      key chords to run tests with the debugger attached. If you forget the keystrokes,\r\n\
      go to the Test-&gt;Run menu and they\xE2\x80\x99re listed there. Just memorize them.\r\n\
      </p>\r\n        <p>\r\n          <strong>Ignore most of the Visual Studio testing features. They do not help you write\r\n\
      unit or integration tests.</strong> Specifically:\r\n\
      </p>\r\n        <ul>\r\n          <li>\r\n\
      All \xE2\x80\x9CTest\xE2\x80\x9Ds available from the right-click-&gt;Add menu are a bad idea. Add a \xE2\x80\x9CClass\xE2\x80\x9D\r\n\
      instead. Diagram: \r\n\
      </li>\r\n        </ul>\r\n        <p>\r\n          <img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"mstest1\" border=\"0\" alt=\"mstest1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/TFS-As-Your-CI-Server-Only-Positive-Take_DC45/mstest1_3.png\" width=\"704\" height=\"689\" />\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <strong>Create Unit Test (</strong>\xE2\x80\x9CUnit Test\xE2\x80\xA6\xE2\x80\x9D as seen in the screenshot above<strong>)\r\n\
      in particular will only mislead you.</strong> The other tests (e.g. Coded UI Tests)\r\n\
      are useful in other contexts, but I can\xE2\x80\x99t think of any situation for which the \xE2\x80\x9CCreate\r\n\
      Unit Test\xE2\x80\x9D dialog is useful. \r\n\
      </li>\r\n        </ul>\r\n        <p>\r\n          <strong>Start from an empty class when writing new unit tests.</strong> While the\r\n\
      \xE2\x80\x9CBasic Unit Test\xE2\x80\x9D template works (and is an excellent tool to help you learn the MSTest\r\n\
      attributes), a clean file is better.\xC2\xA0 Apply YAGNI. You don\xE2\x80\x99t need a TestInitialize\r\n\
      or ClassInitialize method yet, so don\xE2\x80\x99t add them. You can add either of them later,\r\n\
      if you need them. For now, leave them out. YAGNI. This is what one of my new test\r\n\
      classes look like:\r\n\
      </p>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/TFS-As-Your-CI-Server-Only-Positive-Take_DC45/mstest2_2.png\">\r\n            <img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"mstest2\" border=\"0\" alt=\"mstest2\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/TFS-As-Your-CI-Server-Only-Positive-Take_DC45/mstest2_thumb.png\" width=\"704\" height=\"232\" />\r\n          </a>\r\n          <br />\r\n          <font size=\"1\">*note: I am using this naming convention presently. It\xE2\x80\x99s not so bad.\r\n\
      We add the class name prefix to the method name (UrlHelper_) so test results can be\r\n\
      sorted and understood and so there aren\xE2\x80\x99t hundreds of \xE2\x80\x9CWhen_etc\xE2\x80\x9D names in a row. And\r\n\
      yes, I\xE2\x80\x99m aware that you can add columns, specifically the test class\xE2\x80\x99s full name,\r\n\
      to the test results display, but it\xE2\x80\x99s not a first-class citizen and doesn\xE2\x80\x99t help when\r\n\
      running tests in the build. <strong>Stay on the rails</strong> and just embed the\r\n\
      class name in your test method. Side note: sometimes I need to split out my test classes\r\n\
      to support more than one test fixture (context) per class-under-test, and I do so.\r\n\
      Read up on test fixtures and class-per-fixture if you\xE2\x80\x99re intrigued as to why I\xE2\x80\x99d want\r\n\
      such a thing.</font>\r\n        </p>\r\n        <p>\r\n          <strong>If you have a bad test portfolio (i.e. \xE2\x80\x9Cour tests suck\xE2\x80\x9D), it\xE2\x80\x99s not MSTest\xE2\x80\x99s\r\n\
      fault</strong>. Using NUnit, XUnit, MSpec, or any of the (literally 20 or so) .NET\r\n\
      BDD frameworks will not help you if you don\xE2\x80\x99t have the basics. MSTest is indeed limiting\r\n\
      in some ways, but I\xE2\x80\x99m far more limited by my coding/design knowledge than MSTest itself.\r\n\
      With not much extra effort, you can be successful with MSTest. So, now that we\xE2\x80\x99re\r\n\
      not blaming MSTest, how do we improve our bad tests?\r\n\
      </p>\r\n        <p>\r\n          <strong>Learn</strong> about unit testing, integration testing, acceptance testing,\r\n\
      ATDD, BDD, design by example, context/specification, behavior testing, UI testing,\r\n\
      \xE2\x80\x9Csubcutaneous\xE2\x80\x9D UI testing, functional testing, end-to-end tests, fast/slow tests,\r\n\
      design tests, outside-in tests, mocks, stubs, fakes, doubles, what to test, what not\r\n\
      to test, when to delete tests, when to apply DRY to your tests and when not, how much\r\n\
      to maintain your tests, how to organize your tests, the misrepresentation of test\r\n\
      fixtures as TestClasses, using automocking tools, using IoC with tests, using object\r\n\
      mothers, using test builders. Dealing with threading. Using SQLite in-memory with\r\n\
      your ORM to speed up your integration tests. I can\xE2\x80\x99t tell you how to write your tests\r\n\
      or why today. Everyone else (\xE2\x80\x9Cthe entire internet combined\xE2\x80\x9D) can.\r\n\
      </p>\r\n        <p>\r\n          <strong>Troubleshooting: if a test just flat-out isn\xE2\x80\x99t running, find it in the test\r\n\
      list (Test-&gt;Windows-&gt;Test List Editor) and ensure it is enabled.</strong> Disabled\r\n\
      tests just don\xE2\x80\x99t run. MSTest allows you to disable tests via the test lists view,\r\n\
      presumably because \xE2\x80\xA6 I don\xE2\x80\x99t know why. But it can be done, and it\xE2\x80\x99s really weird when\r\n\
      someone does it and I can\xE2\x80\x99t run a test and I don\xE2\x80\x99t know why.\r\n\
      </p>\r\n        <p>\r\n          <strong>I don\xE2\x80\x99t know what to do with the .vsmdi file either.</strong> Check it in\r\n\
      and try to pretend it doesn\xE2\x80\x99t exist. It stores such things as the mysterious \xE2\x80\x9CTest\r\n\
      Is Enabled\xE2\x80\x9D flag, and details for any test lists you may have, and all of these wonderful\r\n\
      things. If you accidentally break the vsmdi file after checking it in, use the power\r\n\
      and magic of source control and revert changes.\r\n\
      </p>\r\n        <p>\r\n          <strong>Related: If you need to disable a test, use the [Ignore] attribute like every\r\n\
      other framework.</strong> Don\xE2\x80\x99t argue, just do it.\r\n\
      </p>\r\n        <p>\r\n          <strong>Related: I haven\xE2\x80\x99t found a use for test lists.</strong> I\xE2\x80\x99m applying YAGNI\r\n\
      and ignoring them until I can figure out how to use them. Don\xE2\x80\x99t use test lists unless\r\n\
      you know why you should.\r\n\
      </p>\r\n        <h3>TFS as a continuous integration server\r\n\
      </h3>\r\n        <p>\r\n\
      First, let me define <strong>build machine</strong> as the computer on which your\r\n\
      TFS build agent runs. Bueno. Let\xE2\x80\x99s get rolling.\r\n\
      </p>\r\n        <p>\r\n          <strong>Turn off code coverage?</strong> According to several blog posts (<a href=\"http://bartwullems.blogspot.com/2010/02/code-coverage-issues-with-team-build.html\">here\xE2\x80\x99s\r\n\
      one</a>), if your build fails because \xE2\x80\x9C<em>The process cannot access the file \xE2\x80\x98data.coverage'\r\n\
      because it is being used by another process.</em>\xE2\x80\x9D, then you need to turn off code\r\n\
      coverage.\r\n\
      </p>\r\n        <p>\r\n          <strong>On your build machine, restart the build agent every evening to prevent slowness\r\n\
      caused by memory leaks.</strong> Don\xE2\x80\x99t argue, just do it, particularly if you notice\r\n\
      your builds slow down after a while. If you\xE2\x80\x99re horrified by the thought of restarting\r\n\
      services as a rule, you should look into the wealth of options IIS provides to restart\r\n\
      unhealthy app pools. You\xE2\x80\x99re not alone. According to Unix guys, It\xE2\x80\x99s the Windows way.\r\n\
      Give in and just run the following script as a Windows Scheduled Task every night:\r\n\
      </p>\r\n        <p>\r\n          <font size=\"2\" face=\"Courier New\">REM BEGIN BATCH FILE SWEETNESS \r\n\
      <br /></font>\r\n          <font size=\"2\" face=\"Courier New\">REM \xE2\x80\x93=-=-=-=-=-=-=-=-\xE2\x80\x93=-=-=-=-=-=-=-=-\xE2\x80\x93=-=-=-=-=-=-=-=- \r\n\
      <br /></font>\r\n          <font size=\"2\" face=\"Courier New\">net stop TFSBuildServiceHost \r\n\
      <br /></font>\r\n          <font size=\"2\" face=\"Courier New\">net start TFSBuildServiceHost \r\n\
      <br /></font>\r\n          <font size=\"2\" face=\"Courier New\">REM \xE2\x80\x93=-=-=-=-=-=-=-=-\xE2\x80\x93=-=-=-=-=-=-=-=-\xE2\x80\x93=-=-=-=-=-=-=-=- \r\n\
      <br /></font>\r\n          <font size=\"2\" face=\"Courier New\">REM END BATCH FILE SWEETNESS</font>\r\n        </p>\r\n        <p>\r\n          <strong>Run only one build agent at a time, per build machine if you\xE2\x80\x99re running MSTest.</strong> If\r\n\
      you have one build machine, one build. Two machines, two builds. One per machine.\r\n\
      Why, you ask? MSTest aborts test runs if you run two MSTest runs simultaneously. I\r\n\
      don\xE2\x80\x99t know why. If you run NUnit or just skip unit tests altogether, you can run more\r\n\
      simultaneous builds. But to avoid phantom build failures, don\xE2\x80\x99t cheat and just run\r\n\
      one build at a time.\r\n\
      </p>\r\n        <p>\r\n          <strong>Similarly, don\xE2\x80\x99t log into or log out of the build machine while MSTest is\r\n\
      running, as it will abort any running MSTest test run.</strong> Seriously. I have\r\n\
      a theory as to why this is so, but it doesn\xE2\x80\x99t really matter why. Just know that, if\r\n\
      you\xE2\x80\x99re running tests, don\xE2\x80\x99t log in or out.\r\n\
      </p>\r\n        <p>\r\n          <strong>TFS has a tray app called \xE2\x80\x9CBuild Notifications\xE2\x80\x9D. Use it.</strong> It works\r\n\
      for notifications, which arrive within a few minutes of build completion. One caveat:\r\n\
      unlike TeamCity, you are not notified when a test run <strong>begins</strong> to fail,\r\n\
      but when the test run <strong>completes</strong>.\r\n\
      </p>\r\n        <p>\r\n          <strong>The tray app\xE2\x80\x99s build status screen cannot be trusted </strong>to be accurate,\r\n\
      so leave the tray app alone and just use Visual Studio/Team Explorer to look at your\r\n\
      builds. In other words, use the TFS tray app only for the alerts.\r\n\
      </p>\r\n        <p>\r\n          <img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"buildnotifications1\" border=\"0\" alt=\"buildnotifications1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/TFS-As-Your-CI-Server-Only-Positive-Take_DC45/buildnotifications1_3.png\" width=\"277\" height=\"520\" />\r\n        </p>\r\n        <p>\r\n          <strong>Refresh doesn\xE2\x80\x99t work on the build status screen in Visual Studio.</strong> It\xE2\x80\x99s\r\n\
      buggy and doesn\xE2\x80\x99t properly refresh all the time, sometimes misplacing running or completed\r\n\
      builds. To work around this behavior and truly refresh, close and reopen the window.\r\n\
      </p>\r\n        <h3>Work in progress \xE2\x80\x93 part 2 to come\r\n\
      </h3>\r\n        <p>\r\n\
      Hello everybody! If I\xE2\x80\x99m ignorant of something that would solve any of the problems\r\n\
      I\xE2\x80\x99ve experienced above (notably, speeding up test runs would be GREAT), let me know.\r\n\
      </p>\r\n        <p>\r\n\
      Assuming I get up the gumption, I\xE2\x80\x99m also going to write a second post covering:\r\n\
      </p>\r\n        <ul>\r\n          <li>\r\n\
      2 second template chooser workflow \r\n\
      </li>\r\n          <li>\r\n\
      JFHCI, which has poisoned me against workflow foundation forever and which informs\r\n\
      my \xE2\x80\xA6 am I allowed to use the word <em>philosophy</em> when describing build systems?\r\n\
      Let\xE2\x80\x99s go with it: \xE2\x80\xA6informs my build system philosophy. \r\n\
      <ul><li>\r\n\
      Preferring a malleable (i.e., code-based, not XML or XAML) build script, \r\n\
      </li><li>\r\n\
      Hardcoding developer configuration the smart way in my C# project, i.e. where it\xE2\x80\x99s\r\n\
      easiest to change \r\n\
      </li><li>\r\n\
      Minimizing premature configuration and thus, minimizing web.config/app.config file\r\n\
      sizes and the nightmare that is XML transforms \r\n\
      </li><li>\r\n\
      However, using WF where it works: adding build \xE2\x80\x9Carguments\xE2\x80\x9D for things that you actually\r\n\
      do change from build to build. E.g. changing the drop folder, turning off automated\r\n\
      deployment to a dev environment. \r\n\
      </li></ul></li>\r\n          <li>\r\n\
      Jailbreak from XAML prison: \r\n\
      <ul><li>\r\n\
      Calling out to MSBuild \r\n\
      </li><li>\r\n\
      Calling out to PowerShell \r\n\
      </li><li>\r\n\
      Calling out to custom Activities in C# (and why) \r\n\
      </li></ul></li>\r\n        </ul>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Pretend You\xE2\x80\x99re On The Domain With Runas /NetOnly</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/PretendYoureOnTheDomainWithRunasNetOnly.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,22d7823f-6b6b-4ebc-99c5-6e7656e20108.aspx</id>\r\n    <published>2011-02-01T22:00:00-08:00</published>\r\n    <updated>2011-01-29T13:37:38.947321-08:00</updated>\r\n    <category term=\"Awesomeness\" label=\"Awesomeness\" scheme=\"http://www.pseale.com/blog/CategoryView,category,Awesomeness.aspx\" />\r\n    <content type=\"html\">&lt;h3&gt;Bullet point summary, for the skimmers\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      Your attention is already waning, so I\xE2\x80\x99ll get with the bullet points:\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; is useful in surprising ways, including troubleshooting\r\n\
      build breakages, security testing, and running as your service account. This is the\r\n\
      old, boring runas. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; features the &lt;font size=\"3\" face=\"Courier New\"&gt;/netonly&lt;/font&gt; switch,\r\n\
      which &lt;strong&gt;makes the impossible possible&lt;/strong&gt; on VMs and off-domain machines.\r\n\
      I\xE2\x80\x99ll save some of the thunder for later. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;h3&gt;Introduction\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;a href=\"http://www.youtube.com/results?search_query=nick+burns\"&gt;&lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: right; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"Nick Burns\" border=\"0\" alt=\"You&amp;#39;re welcome!\" align=\"right\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/nick_burns_3.jpg\" width=\"240\" height=\"180\" /&gt;&lt;/a&gt;I\r\n\
      feel sorry for everyone who is forced to do their day-to-day work on a corporate machine.\r\n\
      It seems that in the last few years, virus scanners have dug their filthy, performance-sapping\r\n\
      claws into your network connection, your email, and your (Internet Explorer) browser.\r\n\
      All this added to the \xE2\x80\x9Cscan every file before it\xE2\x80\x99s accessed\xE2\x80\x9D behavior we\xE2\x80\x99ve all come\r\n\
      to know and love.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      On behalf of corporate IT everywhere: &lt;em&gt;&lt;strong&gt;you\xE2\x80\x99re welcome&lt;/strong&gt;&lt;/em&gt;.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      It\xE2\x80\x99s brutal out there for those of us beholden to the dreaded corporate desktop image.\r\n\
      Oops\xE2\x80\x94did I say us? I mean you. You\xE2\x80\x94you\xE2\x80\x99re beholden to whatever IT gives you. I\xE2\x80\x99m living\r\n\
      the high life*. \r\n\
      &lt;br /&gt;\r\n\
      &lt;font size=\"1\"&gt;* this is a metaphor&lt;/font&gt;&amp;#160;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      At work we\xE2\x80\x99ve run some tests (literally\xE2\x80\x94we routinely run a pile of integration tests),\r\n\
      and my old, busted laptop* is somewhere in the area of&lt;strong&gt; five times faster&lt;/strong&gt; than\r\n\
      the new hotness desktops running the corporate Windows XP image. But let\xE2\x80\x99s not belabor\r\n\
      the point. \r\n\
      &lt;br /&gt;\r\n\
      &lt;font size=\"1\"&gt;* \xE2\x80\x9CWhat a piece of junk!\xE2\x80\x9D \xE2\x80\x9CShe'll make point five past lightspeed.\r\n\
      She may not look like much, but she's got it where it counts, kid. I've made a lot\r\n\
      of special modifications myself.\xE2\x80\x9D&lt;/font&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      For those of you reading this on a corporate desktop, thanks for getting this far,\r\n\
      but the following blog post probably won\xE2\x80\x99t help you. You\xE2\x80\x99re already on the domain,\r\n\
      so you will rarely (if ever) need this trick! Enjoy running Windows XP for another\r\n\
      five-to-ten years!\r\n\
      &lt;/p&gt;\r\n\
      &lt;h3&gt;Now that we\xE2\x80\x99ve gotten rid of the losers\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      \xE2\x80\xA6let\xE2\x80\x99s get on with it. &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; allows you to impersonate\r\n\
      another user while running most any Windows app.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      For server admins, this means you can run with an unprivileged account for your day-to-day\r\n\
      tasks (like waiting patiently while Outlook runs &lt;font face=\"Courier New\"&gt;chkdsk&lt;/font&gt; on\r\n\
      your 4GB PST file) and perform your catastrophic admin mistakes (like accidentally\r\n\
      promote a domain controller) inside a management console or command shell running\r\n\
      as a Domain Admin. You still make catastrophic mistakes, but not catastrophic mistakes\r\n\
      specifically because you\xE2\x80\x99re running a Windows account with full administrative privileges\r\n\
      all the time. There\xE2\x80\x99s a whole world of catastrophic mistakes for you to discover and\r\n\
      experience as an admin. Moving along.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      This &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; behavor is the plain, vanilla &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; ,\r\n\
      and you can get this behavior by&lt;font face=\"Courier New\"&gt; SHIFT+RIGHTCLICKing&lt;/font&gt; on\r\n\
      pretty much anything in Windows. To make things easier, you can also create shortcuts\r\n\
      on your desktop to always prompt you to log in as someone else (AKA \xE2\x80\x9Crun as\xE2\x80\x9D someone\r\n\
      else).\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      For developers, this means you can run SQL Server Management Studio as your app\xE2\x80\x99s\r\n\
      service account so you can talk to your test database\xE2\x80\xA6your app\xE2\x80\x99s &lt;strong&gt;test&lt;/strong&gt; service\r\n\
      account, I\xE2\x80\x99m sure.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Also for developers, you can also launch a browser window as another Windows user.\r\n\
      This is a great trick for testing out security on web apps that use Integrated Windows\r\n\
      Authentication.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Also also for developers, you can impersonate your build service account to run your\r\n\
      build so that your prompt runs &lt;strong&gt;100.0% precisely the way TFS/TeamCity/Whatever\r\n\
      runs it&lt;/strong&gt;, in order to troubleshoot any weird problem with your build. &lt;strong&gt;&lt;font color=\"#ff0000\"&gt;&amp;lt;==THIS\r\n\
      IS A LIFESAVER&lt;/font&gt;&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      For SP admins, you can launch browser windows as your farm account or whatever admin\r\n\
      account you have, or of course, completely unprivileged accounts to test security\r\n\
      trimming.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Let\xE2\x80\x99s see this in action:\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"runas8\" border=\"0\" alt=\"runas8\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas8_3.png\" width=\"572\" height=\"367\" /&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Let\xE2\x80\x99s break down what just happened:&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ol&gt;\r\n\
      &lt;li&gt;\r\n\
      I ran PowerShell as myself (username \xE2\x80\x9CP\xE2\x80\x9D). This is evidenced when I interrogate the\r\n\
      USERNAME environment variable. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      From PowerShell, I perform a &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; &lt;font face=\"Courier New\"&gt;cmd.exe&lt;/font&gt;.\r\n\
      This launches the cmd.exe shell.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      From the impersonated cmd.exe shell, I interrogate the USERNAME environment variable.\r\n\
      This shell is running as svc-sql. &lt;em&gt;So smooth&lt;/em&gt;.&lt;/li&gt;\r\n\
      &lt;/ol&gt;\r\n\
      &lt;p&gt;\r\n\
      And yes, I give the SQL instance running on my laptop its own service account\xE2\x80\xA6what\r\n\
      of it. I\xE2\x80\x99m &lt;strong&gt;not crazy&lt;/strong&gt;&lt;!&amp;#8212;EndFragment&amp;#8212;&gt;.\r\n\
      &lt;/p&gt;\r\n\
      &lt;h3&gt;But I knew all that already\xE2\x80\x94what if I\xE2\x80\x99m not on the domain?\r\n\
      &lt;/h3&gt;\r\n\
      &lt;blockquote&gt; \r\n\
      &lt;p&gt;\r\n\
      I\xE2\x80\x99ll &lt;a href=\"http://twitter.com/#!/pseale/status/12632534634463232\"&gt;bring the thunder&lt;/a&gt;,\r\n\
      I promise.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      First of all, a slight technicality. Wherever I say \xE2\x80\x9Cdomain\xE2\x80\x9D in this blog post, I\r\n\
      mean \xE2\x80\x9CAD forest\xE2\x80\x9D. Sometimes being precise with your vocabulary isn\xE2\x80\x99t helpful.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      So. There are two major scenarios wherein you need (absolutely NEED) to run as a user\r\n\
      on a different domain.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      ONE: you\xE2\x80\x99re running a virtual machine running in its own little virtual world on its\r\n\
      own virtual domain, and &lt;strong&gt;NEED&lt;/strong&gt; to talk to the real domain, so that\r\n\
      you can connect to the test database server and run some queries.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      TWO: you\xE2\x80\x99re running on a non-domain laptop running its own brand of non-corporate-imaged\r\n\
      bliss, and &lt;strong&gt;NEED&lt;/strong&gt; to talk to the real domain, so that you can connect\r\n\
      to the test database server and run some queries. Maybe accidentally DROP some databases\r\n\
      while your users are testing.\r\n\
      &lt;/p&gt;\r\n\
      &lt;/blockquote&gt; \r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;NEED. This is the face of NEED.&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Also, more rarely, if you NEED to connect Microsoft Excel directly to your database\r\n\
      server to run a query, but must authenticate with Integrated authentication as another\r\n\
      user? And you\xE2\x80\x99re running off-domain? Don\xE2\x80\x99t puke: pivot tables are really, really beautiful,\r\n\
      and I mean that sincerely. My love for pivot tables is pure as the driven snow. Anyway,\r\n\
      I\xE2\x80\x99m not here to defend my Excel+SQL abomination, I\xE2\x80\x99m here to bring the thunder.\r\n\
      &lt;/p&gt;\r\n\
      &lt;h3&gt;Enter the /netonly switch\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      Using &lt;font face=\"Courier New\"&gt;runas /netonly&lt;/font&gt; allows you to run your app locally\r\n\
      as you (in my case, the user named \xE2\x80\x9CP\xE2\x80\x9D), while authenticating over a network with\r\n\
      another user. It\xE2\x80\x99s like a rare kind of magic, like a hornless unicorn.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Also like rare magic, I have no idea how &lt;font face=\"Courier New\"&gt;runas /netonly&lt;/font&gt; works.\r\n\
      There\xE2\x80\x99s probably somebody who knows how it works (&lt;a href=\"http://blogs.msdn.com/b/oldnewthing/archive/2004/11/29/271551.aspx\"&gt;someone\r\n\
      who has gazed into Win32, and Win32 has gazed back into them&lt;/a&gt;), but not me. It\xE2\x80\x99s\r\n\
      good enough for me to know that &lt;font face=\"Courier New\"&gt;runas &lt;/font&gt;works\xE2\x80\xA6somehow.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"runas1\" border=\"0\" alt=\"runas1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas1_3.png\" width=\"704\" height=\"251\" /&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Let me try to break down what just happened in the screenshot above (and note the\r\n\
      differences with between vanilla &lt;font face=\"Courier New\"&gt;runas &lt;/font&gt;and &lt;font face=\"Courier New\"&gt;runas\r\n\
      /netonly&lt;/font&gt;):\r\n\
      &lt;/p&gt;\r\n\
      &lt;ol&gt;\r\n\
      &lt;li&gt;\r\n\
      I ran PowerShell as myself (username \xE2\x80\x9CP\xE2\x80\x9D). This is evidenced when I interrogate the\r\n\
      USERNAME environment variable. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      From PowerShell, I perform a &lt;font face=\"Courier New\"&gt;runas /netonly cmd.exe&lt;/font&gt;.\r\n\
      This launches the cmd.exe shell.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      From the cmd.exe shell, I interrogate the USERNAME environment variable. The impersonated\r\n\
      shell is still running as \xE2\x80\x9CP\xE2\x80\x9D. &lt;strong&gt;However&lt;/strong&gt;, were I to authenticate with\r\n\
      resources on another domain, Windows would send the credentials for \xE2\x80\x9COnTheINTERNET\\NobodyKnowsYoureADOG\xE2\x80\x9D.&lt;/li&gt;\r\n\
      &lt;ol&gt;\r\n\
      &lt;li&gt;\r\n\
      This is the point where I should try to prove that, as far as authenticating over\r\n\
      the network, your program behaves as if it\xE2\x80\x99s the impersonated user. Unfortunately\r\n\
      I just tried to connect to CodePlex\xE2\x80\x99s TFS as my example, and the work involved connecting\r\n\
      to CodePlex via TFS depressed me, so, I won\xE2\x80\x99t be attempting this today. Just try out\r\n\
      one of my sample scripts for yourself; it will take all of 10 seconds to verify. Side\r\n\
      note: THANK YOU, CodePlex team, for first funding SVNBridge, THEN including direct\r\n\
      SVN support, then providing direct Mercurial support.&lt;/li&gt;\r\n\
      &lt;/ol&gt;\r\n\
      &gt;\r\n\
      &lt;h4&gt;Bringing the thunder: SQL 2005 management studio\r\n\
      &lt;/h4&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;font size=\"3\" face=\"Courier New\"&gt;REM the following script assumes a 64-bit system, \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM and assumes you installed SQL 2005 in\r\n\
      the default folder \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM change the parts below in &lt;font color=\"#ff0000\"&gt;RED&lt;/font&gt; \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;runas /netonly /user:&lt;font color=\"#ff0000\"&gt;REALDOMAIN&lt;/font&gt;\\&lt;font color=\"#ff0000\"&gt;YOURDOMAINUSERNAME&lt;/font&gt; &amp;quot;C:\\Program\r\n\
      Files (x86)\\Microsoft SQL Server\\90\\Tools\\Binn\\VSShell\\Common7\\IDE\\SqlWb.exe&amp;quot;&lt;/font&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"runas2\" border=\"0\" alt=\"runas2\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas2_3.png\" width=\"681\" height=\"346\" /&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;h4&gt;Bringing the thunder: SQL 2008 (&lt;font color=\"#ff0000\"&gt;eight&lt;/font&gt;) management\r\n\
      studio\r\n\
      &lt;/h4&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;font size=\"3\" face=\"Courier New\"&gt;REM the following script assumes a 64-bit system, \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM and assumes you installed SQL 2008 in\r\n\
      the default folder \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM change the parts below in &lt;font color=\"#ff0000\"&gt;RED&lt;/font&gt; \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;runas /netonly /user:&lt;font color=\"#ff0000\"&gt;REALDOMAIN&lt;/font&gt;\\&lt;font color=\"#ff0000\"&gt;YOURDOMAINUSERNAME&lt;/font&gt; &amp;quot;C:\\Program\r\n\
      Files (x86)\\Microsoft SQL Server\\100\\Tools\\Binn\\VSShell\\Common7\\IDE\\ssms.exe&amp;quot;&lt;/font&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"runas3\" border=\"0\" alt=\"runas3\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas3_3.png\" width=\"681\" height=\"346\" /&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;h4&gt;Bringing the thunder: Excel 2007\r\n\
      &lt;/h4&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;font size=\"3\" face=\"Courier New\"&gt;REM the following script assumes a 64-bit system, \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM and assumes you installed Office in the\r\n\
      default folder \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM change the parts below in &lt;font color=\"#ff0000\"&gt;RED&lt;/font&gt; \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;runas /netonly /user:&lt;font color=\"#ff0000\"&gt;REALDOMAIN&lt;/font&gt;\\&lt;font color=\"#ff0000\"&gt;YOURDOMAINUSERNAME&lt;/font&gt; &amp;quot;C:\\Program\r\n\
      Files (x86)\\Microsoft Office\\Office12\\EXCEL.EXE&amp;quot;&lt;/font&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"runas4\" border=\"0\" alt=\"runas4\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas4_3.png\" width=\"681\" height=\"346\" /&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;h3&gt;Still not perfect\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      There are a few scenarios where this still doesn\xE2\x80\x99t work:\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      TFS command-line client running from inside a cmd.exe prompt. To be fair to the TFS\r\n\
      command-line client, it goes out of its way to let you type in credentials at runtime.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Remote debugging off-domain in Visual Studio is still a challenge. I just tried to\r\n\
      set it up on my laptop this last week, and &lt;strong&gt;failed&lt;/strong&gt;. Note remote debugging\r\n\
      requires some firewall tweaking as well, so maybe this is a PEBKAC-type problem and\r\n\
      not a &lt;font face=\"Courier New\"&gt;runas /netonly&lt;/font&gt; problem.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;h3&gt;You\xE2\x80\x99re welcome\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      The pattern is simple: give &lt;font face=\"Courier New\"&gt;runas&lt;/font&gt; your name, full\r\n\
      path to the exe, and type in your password when prompted. If you have NEED to run\r\n\
      the command frequently, create a batch file and quickly make a &lt;a href=\"http://www.pseale.com/blog/SlickrunProtips.aspx\"&gt;SlickRun&lt;/a&gt; MagicWord. \r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Or, let\xE2\x80\x99s be honest, just drag a shortcut of your newly-created batch file to the\r\n\
      Windows 7 start menu and be done with it. Searching for items in the Start Menu is\r\n\
      almost as good as SlickRun\xE2\x80\x94a good enough experience such that program launchers aren\xE2\x80\x99t\r\n\
      necessary anymore.\r\n\
      &lt;/p&gt;\r\n\
      &lt;h3&gt;Credit where due\xE2\x80\xA6thanks, TWITTER! (and I guess, Ryan)\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;a href=\"http://twitter.com/#!/ryanmcintyre\"&gt;&lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"runas5\" border=\"0\" alt=\"runas5\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas5_3.png\" width=\"761\" height=\"624\" /&gt;&lt;/a&gt;\r\n\
      &lt;/p&gt;</content>\r\n  </entry>\r\n  <entry>\r\n    <title>Use The PowerShell Host As A Better Shell</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/UseThePowerShellHostAsABetterShell.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,b7d666be-a22c-46c1-bed1-9efa99402aab.aspx</id>\r\n    <published>2011-01-17T08:00:00-08:00</published>\r\n    <updated>2011-01-14T20:29:01.471696-08:00</updated>\r\n    <category term=\"Awesomeness\" label=\"Awesomeness\" scheme=\"http://www.pseale.com/blog/CategoryView,category,Awesomeness.aspx\" />\r\n    <category term=\"PowerShell\" label=\"PowerShell\" scheme=\"http://www.pseale.com/blog/CategoryView,category,PowerShell.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      Welcome to 2011. It smells terrific here!\r\n\
      </p>\r\n        <h3>The problem\r\n\
      </h3>\r\n        <p>\r\n\
      You may not know it, but you have a problem. You\xE2\x80\x99re using the standard Windows command\r\n\
      shell. This is a problem.\r\n\
      </p>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/image_2.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/image_thumb.png\" width=\"681\" height=\"346\" />\r\n          </a>\r\n        </p>\r\n        <p>\r\n\
      The problems are manyfold and boring, so I\xE2\x80\x99ll briefly summarize:\r\n\
      </p>\r\n        <ul>\r\n          <li>\r\n\
      Cutting and pasting is a problem.</li>\r\n          <li>\r\n\
      The cmd shell\xE2\x80\x99s default history is 100 lines. This is a problem.</li>\r\n          <li>\r\n\
      DOS\xE2\x80\x99s autocomplete featureset predates the word intellisense. It\xE2\x80\x99s bad.</li>\r\n          <li>\r\n\
      DOS hates double-quotes. A lot. \r\n\
      </li>\r\n          <li>\r\n\
      DOS also hates the less-than/greater-than characters. Try this on: runas /user:PC\\windersUser\r\n\
      /password:\xE2\x80\x9DI believe in using long passphrases and good security etc and so forth\r\n\
      so I\xE2\x80\x99ll throw in some special characters, like double-quotes (\xE2\x80\x9C) and a bunch of other\r\n\
      random stuff: &lt;&gt;file1\"</li>\r\n          <ul>\r\n            <li>\r\n\
      I waxed a little eloquent on the point above, and could go into futher boring detail,\r\n\
      but just take my word for it. DOS doesn\xE2\x80\x99t do windows, and DOS doesn\xE2\x80\x99t escape special\r\n\
      characters. Ever.</li>\r\n          </ul>\r\n        </ul>\r\n        <h3>The solution\r\n\
      </h3>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk1_4.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"junk1\" border=\"0\" alt=\"junk1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk1_thumb_1.png\" width=\"417\" height=\"526\" />\r\n          </a>\r\n        </p>\r\n        <p>\r\n\
      The solution is to launch PowerShell. For the privileged few running Windows 7, it\r\n\
      comes pre-installed. For the rest of us, minus the crazy dude still running Windows\r\n\
      2000 for security/paranoia reasons, PowerShell can be downloaded.\r\n\
      </p>\r\n        <p>\r\n\
      A small aside: the Start menu in Windows 7 is excellent. I don\xE2\x80\x99t maintain icons on\r\n\
      my desktop, the quick launch, pin programs to the taskbar, clicking through the Start\r\n\
      Menu. I just tap the Windows key and tap in a few letters. For PowerShell, WINDOWS,\r\n\
      \xE2\x80\x9Cp\xE2\x80\x9D \xE2\x80\x9Co\xE2\x80\x9D \xE2\x80\x9Cw\xE2\x80\x9D, then ENTER. That\xE2\x80\x99s it.\r\n\
      </p>\r\n        <p>\r\n\
      I rarely use <a href=\"http://www.pseale.com/blog/SlickrunProtips.aspx\">SlickRun</a> nowadays.\r\n\
      </p>\r\n        <p>\r\n\
      Ahem. Onward.\r\n\
      </p>\r\n        <h3>So now I\xE2\x80\x99m running PowerShell\xE2\x80\xA6now what?\r\n\
      </h3>\r\n        <p>\r\n\
      You get:\r\n\
      </p>\r\n        <ol>\r\n          <li>\r\n\
      Better autocomplete, especially with file and pathnames.</li>\r\n          <li>\r\n\
      Better default settings, including an output history that stores $HUGE_NUMBER lines.</li>\r\n          <li>\r\n\
      A shell that doesn\xE2\x80\x99t hate spaces and double-quotes, and by extension, you.</li>\r\n          <li>\r\n\
      Little neat things, like dynamic vertical <strong>and horizontal</strong> resizing,\r\n\
      and\xE2\x80\xA6</li>\r\n          <li>\r\n\
      Easy cutting and pasting. Allow me to give a full tutorial below:</li>\r\n        </ol>\r\n        <h3>Cutting to the clipboard\r\n\
      </h3>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk1_6.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"junk1\" border=\"0\" alt=\"junk1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk1_thumb_2.png\" width=\"704\" height=\"600\" />\r\n          </a>\r\n        </p>\r\n        <h3>Pasting to the PowerShell host\r\n\
      </h3>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk2_4.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"junk2\" border=\"0\" alt=\"junk2\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk2_thumb_1.png\" width=\"704\" height=\"701\" />\r\n          </a>\xC2\xA0\r\n\
      </p>\r\n        <h3>It\xE2\x80\x99s The Little Things\r\n\
      </h3>\r\n        <p>\r\n\
      Tonight I\xE2\x80\x99m working through the Ruby koans. I know, who cares. But I\xE2\x80\x99m here to tell\r\n\
      you that, though there\xE2\x80\x99s not all that much difference tonight between using the cmd\r\n\
      shell and the PowerShell host, there\xE2\x80\x99s a few little things that add up. Here\xE2\x80\x99s a little\r\n\
      thing: just now, I made this simple, tiny improvement that combined the cls command\r\n\
      and the \xE2\x80\x9Crun the koans\xE2\x80\x9D command into one line, which made iterating through the Koans\r\n\
      that much more easier. Re-running the koans is now as easy as UPARROW, ENTER:\r\n\
      </p>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk3_2.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"junk3\" border=\"0\" alt=\"junk3\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk3_thumb.png\" width=\"704\" height=\"103\" />\r\n          </a>\r\n        </p>\r\n        <h3>Footnotes\r\n\
      </h3>\r\n        <p>\r\n\
      I haven\xE2\x80\x99t bothered trying Console2 yet.\r\n\
      </p>\r\n        <p>\r\n\
      I know cmd.exe is <em>technically</em> not the DOS shell. <em>Technically</em> it\r\n\
      still has all the interpreter problems DOS 3.3 had, so I\xE2\x80\x99m calling it DOS, plus the\r\n\
      full name for the built-in shell is probably something like Microsoft Windows Command\r\n\
      Shell 2011 for the Microsoft Windows 7 Operating System Administration Pack R2 (KB994112).\r\n\
      I just made that up, but if you think the name is a total exaggeration, go research\r\n\
      why we call \xE2\x80\x9CVSTO\xE2\x80\x9D by a four-letter acronym.\r\n\
      </p>\r\n        <h3>Running cmd.exe inside PowerShell (strictly for the lazy)\r\n\
      </h3>\r\n        <p>\r\n\
      If you love everything I\xE2\x80\x99ve said, but can\xE2\x80\x99t summon the mental energy to learn remedial\r\n\
      PowerShell, that\xE2\x80\x99s okay. You can still gain some benefit from the PowerShell host\r\n\
      running the DOS command shell! Just type \xE2\x80\x9Ccmd&lt;ENTER&gt;\xE2\x80\x9D at the prompt, to roll\r\n\
      into the land of LEGACY.\r\n\
      </p>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk4_2.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"junk4\" border=\"0\" alt=\"junk4\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk4_thumb.png\" width=\"704\" height=\"255\" />\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Linkblogging: Hardcoding Vs. Configuration</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/LinkbloggingHardcodingVsConfiguration.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,c60e7830-c63c-4db2-abdf-5c870da6789e.aspx</id>\r\n    <published>2010-08-03T22:00:00-07:00</published>\r\n    <updated>2010-07-30T21:28:16.9029166-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      Sometimes you keep things \xE2\x80\x9Cin the family.\xE2\x80\x9D Other times, instead of crafting and sending\r\n\
      an email to your teammates with the assumption no one read it, you blog whatever you\r\n\
      were going to write in the email. Then, because (let\xE2\x80\x99s be honest) none of your teammates\r\n\
      read your blog, you cut-and-paste the content from your blog post and send the email\r\n\
      anyway. They\xE2\x80\x99re not reading your email either way, but at least you can now cite yourself\r\n\
      as an authority, now that you\xE2\x80\x99ve blogged about the topic. Everybody knows blogging\r\n\
      is a big deal.\r\n\
      </p>\r\n        <p>\r\n\
      This blog post is the latter case. In case you weren\xE2\x80\x99t taking careful notes from the\r\n\
      above paragraph, by \xE2\x80\x9Cthe latter\xE2\x80\x9D I mean \xE2\x80\x9Cthis post was inspired by a work argument,\r\n\
      and I promise not to sound too vindictive or passive/agressivey while presenting my\r\n\
      case.\xE2\x80\x9D Enjoy!\r\n\
      </p>\r\n        <p>\r\n          <strong>From Ayende </strong>(disclaimer: he wrote a book about DSLs):\r\n\
      </p>\r\n        <ul>\r\n          <li>\r\n            <a href=\"http://ayende.com/Blog/archive/2008/08/21/Enabling-change-by-hard-coding-everything.aspx\">Enabling\r\n\
      change by hard-coding everything</a> \xE2\x80\x93 Here Ayende teases at what is to come. Read\r\n\
      the comments, if only to hear speculative counter-arguments (or more specifically,\r\n\
      read about real-world scenarios where hardcoding is abused).</li>\r\n          <li>\r\n            <a href=\"http://ayende.com/Blog/archive/2008/08/21/Enabling-change-by-hard-coding-everything-the-smart-way.aspx\">Enabling\r\n\
      change by hard-coding everything: the smart way</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"http://ayende.com/Blog/archive/2008/08/22/JFHCI-The-evil-that-is-configuration.aspx\">JFHCI:\r\n\
      The evil that is configuration</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"http://ayende.com/Blog/archive/2008/08/22/JFHCI-Considering-Scale.aspx\">JFHCI:\r\n\
      Considering scale</a>\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          <strong>Similar posts I came across recently:</strong>\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <a href=\"http://laribee.com/configuration-come-to-jesus\">Configuration \xE2\x80\x98come to Jesus\xE2\x80\x99</a> \xE2\x80\x93\r\n\
      David Laribee talks about the evolution of developers away from XML configuration.\r\n\
      In the comments, he gets to the heart of the matter (so, read the comments).</li>\r\n          <li>\r\n\
      Okay, apparently I didn\xE2\x80\x99t come across anything else recently. \r\n\
      </li>\r\n        </ul>\r\n        <h3>A further (lazy) case for hardcoding\r\n\
      </h3>\r\n        <p>\r\n\
      This is by no means an exhaustive linkblog post; I just (lazily) skimmed the surface.\r\n\
      If you want to look at examples of people moving away from XML configuration, look\r\n\
      at the Castle/NHibernate stack. (Windsor XML configuration and .hbm schemas are dying,\r\n\
      being replaced with, dare I say it, \xE2\x80\x9Cfluent interfaces\xE2\x80\x9D. The point isn\xE2\x80\x99t the <em>fluent </em>part,\r\n\
      the point is they\xE2\x80\x99re code-based.) Witness the ascent of psake and rake in .NET for\r\n\
      build scripts. Witness MEF and the scenarios it enables (we probably won\xE2\x80\x99t need any\r\n\
      of them, honestly). Witness FubuMVC and it\xE2\x80\x99s nigh-empty web.config.\r\n\
      </p>\r\n        <p>\r\n\
      I\xE2\x80\x99d prefer to discuss this with a concrete example, but, alas, I\xE2\x80\x99m way too lazy. Let\xE2\x80\x99s\r\n\
      just try doing this without expending any effort:\r\n\
      </p>\r\n        <p>\r\n\
      If I can summarize, XML (and by extension MSBuild and NAnt) can die in flames, and\r\n\
      I hope it does so sooner rather than later. <strike>The love of money </strike>XML\r\n\
      configuration is the root of all evil. The end.\r\n\
      </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>I Took A Shot At Object Calisthenics</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/ITookAShotAtObjectCalisthenics.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,5bf036b7-3d60-443b-bff9-105be2984ced.aspx</id>\r\n    <published>2010-08-03T21:40:55.1544145-07:00</published>\r\n    <updated>2010-08-04T20:47:18.9182205-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <category term=\"Object Calisthenics\" label=\"Object Calisthenics\" scheme=\"http://www.pseale.com/blog/CategoryView,category,ObjectCalisthenics.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n          <strong>\r\n            <font color=\"#ff0000\">Updated 2010-08-04:</font>\r\n          </strong> I\xE2\x80\x99ve fixed some\r\n\
      of my word awkwardness, and added several TODOs at the bottom of the list. For your\r\n\
      enjoyment!\r\n\
      </p>\r\n        <p>\r\n\
      The problem with coding dojos is that no one else seems to want to run them. I\xE2\x80\x99ve\r\n\
      long desired to participate in a coding dojo where we work through the object calisthenics\r\n\
      rules. We\xE2\x80\x99ve attempted it as a group once before, but the results were poor. So poor,\r\n\
      in fact, that when reminded of it recently, one participant gave such a look of horror\r\n\
      and shouted \xE2\x80\x9Coh no!\xE2\x80\x9D It was as if he\xE2\x80\x99d seen a chupacabra and was looking to escape\r\n\
      out the window. But it wasn\xE2\x80\x99t a chupacabra\xE2\x80\x94he\xE2\x80\x99s just been through our group object\r\n\
      calisthenics dojo and suffered a flashback. No worries Michael, you\xE2\x80\x99ll remain anonymous.\r\n\
      </p>\r\n        <p>\r\n\
      Despite distasteful memories and general horribleness surrounding everything I knew\r\n\
      about object calisthenics, I plodded onward. Slowly. And, some year or so later, here\r\n\
      I am, blogging about it, and here you are, skimming my blog post, reading every fifth\r\n\
      sentence or so. I don\xE2\x80\x99t blame you.\r\n\
      </p>\r\n        <p>\r\n\
      I\xE2\x80\x99m working through object calisthenics because I want to try out the rules, and because\r\n\
      I\xE2\x80\x99m preparing for the <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/223/Default.aspx\">upcoming\r\n\
      public Houston TechFest dojo</a>. I plan to use examples from this codebase to explain\r\n\
      each of the rules, so it\xE2\x80\x99s important to get it right. You don\xE2\x80\x99t have to agonize over\r\n\
      every tiny detail as much as me. Agonizing over code is <strong>not</strong> a rule\r\n\
      of object calisthenics; for this you can be thankful.\r\n\
      </p>\r\n        <p>\r\n\
      The problem with coding dojos is that no one else seems to want to run them. So I\xE2\x80\x99ll\r\n\
      do the best I can come October 9th. I hope I\xE2\x80\x99m prepared.\r\n\
      </p>\r\n        <h3>A note about object calisthenics\r\n\
      </h3>\r\n        <p>\r\n\
      I wrote this project following the rules (and over-arching goals) outlined in <a href=\"http://webcache.googleusercontent.com/search?q=cache:www.xpteam.com/jeff/writings/objectcalisthenics.rtf+object+calisthenics\">the\r\n\
      original object calisthenics essay [Warning: RTF; will blow your mind]</a>. One major\r\n\
      problem with choosing KataPotter to solve, is that I solved the problem without creating\r\n\
      many collaborating objects. The essay says to \xE2\x80\x9Cspend 20 hours and 1000 lines writing\r\n\
      code that conforms 100% to these rules.\xE2\x80\x9D KataPotter is too small.\r\n\
      </p>\r\n        <p>\r\n\
      If I get in a blogging frenzy, I\xE2\x80\x99ll blog in more detail about my experiences, and\r\n\
      I\xE2\x80\x99ll go into depth into each rule and how I learned something from it. But, definitely\r\n\
      not right now.\r\n\
      </p>\r\n        <h3>I\xE2\x80\x99ve uploaded it to GitHub\r\n\
      </h3>\r\n        <p>\r\n\
      I\xE2\x80\x99ll cut to the chase: <a title=\"http://github.com/pseale/KataPotterObjectCalisthenics\" href=\"http://github.com/pseale/KataPotterObjectCalisthenics\">http://github.com/pseale/KataPotterObjectCalisthenics</a> \xE2\x80\x93 <strong>this\r\n\
      is the 90% finished product.</strong> I\xE2\x80\x99ll list the remaining effort below.\r\n\
      </p>\r\n        <h3>Now for the remaining 90%\r\n\
      </h3>\r\n        <p>\r\n          <strong>Obvious things I\xE2\x80\x99ve missed?</strong>\r\n        </p>\r\n        <p>\r\n\
      Let me know. I don\xE2\x80\x99t know what I don\xE2\x80\x99t know. These are the rumsfeldian unknown unknowns.\r\n\
      Help me make them known unknowns, or known knowns, or known known knowns. Whatever\r\n\
      they are, let me know.\r\n\
      </p>\r\n        <p>\r\n          <strong>Allow my custom collections to implement IEnumerable&lt;T&gt;; remove now-extraneous\r\n\
      methods.</strong>\xC2\xA0\r\n\
      </p>\r\n        <p>\r\n\
      Originally I decided IEnumerable&lt;T&gt; would be \xE2\x80\x9Ccheating\xE2\x80\x9D, but you know what?\r\n\
      It\xE2\x80\x99s a collection. It\xE2\x80\x99s not cheating. I have some <em><strong><font color=\"#800080\">dumb</font></strong></em> code\r\n\
      in there because I didn\xE2\x80\x99t allow myself to deal with the collection as a collection.\r\n\
      </p>\r\n        <p>\r\n          <strong>Is this method signature a violation?</strong>\r\n        </p>\r\n        <p>\r\n\
      public Money Add(decimal amount);\r\n\
      </p>\r\n        <p>\r\n\
      Notice anything? It (potentially) violates rule #3 Wrap all primitives and strings.\r\n\
      The decimal is a primitive, and thus forbidden. I figure though, how else am I going\r\n\
      to add two Money objects to each other, if one of them can\xE2\x80\x99t tell the other Money\r\n\
      how much it has? <strong>That\xE2\x80\x99s just dumb</strong>. Too much time already has been\r\n\
      wasted thinking about this, and, seriously, how else are you going to add two objects\r\n\
      together?\r\n\
      </p>\r\n        <p>\r\n          <strong>Break up BookCollection.</strong>\r\n        </p>\r\n        <p>\r\n\
      It\xE2\x80\x99s doing too much. BookCollection should be about adding, removing, and clearing\r\n\
      books; it should be a first-class collection and nothing more. All non-collection\r\n\
      behavior should be broken into another class. Perhaps several classes, especially\r\n\
      isolating anything related to those impenetrable LINQ queries. Rule #4 says that we\r\n\
      should have first-class collections. Rule #7 says to Keep all entities small (50 lines\r\n\
      or less). Break it up.\r\n\
      </p>\r\n        <p>\r\n\
      Update: I should have been clued in by the fact that I have no less than 4 test files\r\n\
      for this class, split by behavior. Consider me thoroughly clued.\r\n\
      </p>\r\n        <p>\r\n          <strong>Write a console app that works.</strong>\r\n        </p>\r\n        <p>\r\n\
      Right now Program.cs sits alone, forlorn. It needs to a) get a list of books to calculate,\r\n\
      b) run the calculator, c) emit the result. It\xE2\x80\x99s not hard, I\xE2\x80\x99ve simply neglected it.\r\n\
      Also, for the record, I don\xE2\x80\x99t have to adhere to any rule craziness when writing the\r\n\
      console app.\r\n\
      </p>\r\n        <p>\r\n          <strong>Strategy pattern abuse? Investigate.</strong>\r\n        </p>\r\n        <p>\r\n\
      Investigate the *BookSetCostCalculator classes and figure out what the author meant\r\n\
      by Rule #2, Don\xE2\x80\x99t use the ELSE keyword. Side note: remember, his rule predated the <a href=\"http://www.antiifcampaign.com/\">anti-if\r\n\
      campaign</a>. I know that I would not allow such abomination to live in real code\r\n\
      I\xE2\x80\x99d check in. I don\xE2\x80\x99t like anything about the calculators. If there\xE2\x80\x99s any way you\r\n\
      can see to either a) expand the scope of this Strategy so that it\xE2\x80\x99s used more than\r\n\
      one place, and thus justify its existence, or b) at least find better names, let me\r\n\
      know.\r\n\
      </p>\r\n        <p>\r\n\
      Combine BookSet with the *BookSetCostCalculators somehow? For your sake, I won\xE2\x80\x99t even\r\n\
      attempt to explain my early thoughts.\r\n\
      </p>\r\n        <p>\r\n          <strong>Null object abuse? Investigate ZeroMoney.</strong>\r\n        </p>\r\n        <p>\r\n\
      Again we\xE2\x80\x99re hanging with our good buddy Rule #2, Don\xE2\x80\x99t use the ELSE keyword. This\r\n\
      time, the essay encourages us to try out using the null object pattern. I think I\xE2\x80\x99m\r\n\
      abusing the pattern with my ZeroMoney. I don\xE2\x80\x99t think that\xE2\x80\x99s what null objects are\r\n\
      for. Again, the simplicity of the problem has snagged us, and I\xE2\x80\x99ve tried to shoehorn\r\n\
      in a null object where I could have done without.\r\n\
      </p>\r\n        <p>\r\n\
      A second issue I have with the null object pattern is: I don\xE2\x80\x99t ever return null anyway,\r\n\
      at least not inside code that I control (both the caller and the called).\xC2\xA0 As\r\n\
      they say, what\xE2\x80\x99s up with that?\r\n\
      </p>\r\n        <p>\r\n          <strong>Namespaces</strong>\r\n        </p>\r\n        <p>\r\n\
      Rule #7 is Keep all entities small. That means ten (10) classes per namespace. My\r\n\
      KataPotter solution is small enough that it almost fits in a single namespace, but\r\n\
      I should adhere to the spirit of the rule and add some folders/namespaces. Maybe something\r\n\
      will emerge.\r\n\
      </p>\r\n        <p>\r\n\
      Update: I still hate that .NET makes it ugly/discouraging for me to name both a namespace,\r\n\
      and a class in that namespace the same thing. Take KataPotter.Core.Book (the namespace)\r\n\
      and its class Book. Every time I want to refer to the class Book, I have to either\r\n\
      put Book.Book or (what I consider worse) use namespace aliases. \r\n\
      </p>\r\n        <p>\r\n          <strong>What\xE2\x80\x99s the deal with some of those tests?</strong>\r\n        </p>\r\n        <p>\r\n\
      I don\xE2\x80\x99t know why I was so nervous at the time about .Clone() not working, but I was.\r\n\
      So sue me. I think it had something to do with taking baby steps and trying to make\r\n\
      .Clone() work while pretending IEnumerable&lt;T&gt; was forbidden. But still, delete\r\n\
      some of those tests. And call out the \xE2\x80\x9Cacceptance tests\xE2\x80\x9D for what they are.\r\n\
      </p>\r\n        <p>\r\n\
      Second note: move the dumb one-line SetUp() code into each test. DRY or no, the SetUp()\r\n\
      code is hurting readability.\r\n\
      </p>\r\n        <p>\r\n\
      Third note: remove tests that test non-production code. E.g. money.Add() tests cover\r\n\
      null values\xE2\x80\xA6why?\r\n\
      </p>\r\n        <p>\r\n          <strong>Fix \xE2\x80\x9Cthe .ToString()\xE2\x80\x9D cheating problem.</strong>\r\n        </p>\r\n        <p>\r\n\
      This will take a little explanation. The problem with Rule #9 of object calisthenics\r\n\
      (no getters, setters, or properties) is that eventually something outside your code\r\n\
      will want to interact with something adhering to the rules of object calisthenics,\r\n\
      without breaking rule #3! Okay. \r\n\
      </p>\r\n        <p>\r\n\
      Okay, let\xE2\x80\x99s do this by example. Let\xE2\x80\x99s say you\xE2\x80\x99re logging in somewhere. There\xE2\x80\x99s a method\r\n\
      called public LoginResult Login(Username username, Password password). Now, how do\r\n\
      you know if the login was successful? A bool property? No! A method called GetLoginSuccess()?\r\n\
      No! You can\xE2\x80\x99t even be clever and put a method on LoginResult called WasSuccessful()\xE2\x80\x94because\r\n\
      what would you return? A bool? That would almost make sense, except Rule #3 is \xE2\x80\x9CWrap\r\n\
      all primitives and strings.\xE2\x80\x9D If you try to do something clever like WasSuccessful(),\r\n\
      you\xE2\x80\x99ll have to return another custom object that wraps a bool, and, now you\xE2\x80\x99re back\r\n\
      facing the same problem with which you started!\r\n\
      </p>\r\n        <p>\r\n\
      It\xE2\x80\x99s a conundrum.\r\n\
      </p>\r\n        <p>\r\n\
      I got tired of thinking about it, and I figured, \xE2\x80\x9CHey, I\xE2\x80\x99m writing a console app,\r\n\
      at least in theory. I might as well implement ToString() and use it as my dead-simple\r\n\
      way to smuggle data out of these objects!\xE2\x80\x9D And I did.\r\n\
      </p>\r\n        <p>\r\n\
      If you look at the tests, you\xE2\x80\x99ll see that all of them compare strings. And in their\r\n\
      defense, they work, and others have resorted to ToString() to test.\r\n\
      </p>\r\n        <p>\r\n\
      If you bend your thinking a little, and pretend ToString() is called ProjectOntoViewObject()\r\n\
      that just so happens to return a string every time, maybe that would soothe your mind\r\n\
      a tad? Does it?\r\n\
      </p>\r\n        <p>\r\n\
      It still feels like cheating.\r\n\
      </p>\r\n        <p>\r\n\
      As I\xE2\x80\x99m supposed to adhere to the spirit of Rule #3 (Wrap all primitives and strings)\r\n\
      but as I\xE2\x80\x99m also supposed to be able to write code that can be observed (thus saving\r\n\
      us from the paradox of trees falling in the forest), I\xE2\x80\x99m permitted to break the rules\r\n\
      on the <strong>edges</strong> of the API I\xE2\x80\x99m building. In my case, in this KataPotter\r\n\
      solution, this means Book, Money, BookCollection, and RemoveSetResult all have ToString()\r\n\
      methods. These are the classes that either a) are at an API boundary, or b) I needed\r\n\
      to unit test badly.\r\n\
      </p>\r\n        <p>\r\n\
      There are known alternatives to the \xE2\x80\x9C.ToString()\xE2\x80\x9D problem, the most popular one for\r\n\
      testing being, implement .Equals(). I didn\xE2\x80\x99t like the idea, partially because we tried\r\n\
      that at our group dojo with horrible, horrible results, and partially because you\r\n\
      still can\xE2\x80\x99t observe the objects in question, though you can throw them at similar\r\n\
      objects in a supercollider at very high speeds and observe what happens. It seems\r\n\
      like every test becomes a heavy exercise in mocking.\r\n\
      </p>\r\n        <p>\r\n\
      I\xE2\x80\x99ll stew on this one some more. I need to get rid of the cheating, particularly on\r\n\
      internal classes where I can use mocks and expectations to figure out what\xE2\x80\x99s going\r\n\
      on. Maybe ToString() is legitimate enough on the boundary objects, and may be permitted\r\n\
      there. Will continue to stew and advise.\r\n\
      </p>\r\n        <p>\r\n          <strong>\r\n            <font color=\"#800000\">Updated: What is this property doing in there?!? Property?\r\n\
      Rule 9? CHEATER!</font>\r\n          </strong>\r\n        </p>\r\n        <p>\r\n\
      I have no excuse. My Book objects have a property getter named \xE2\x80\x9CTitle\xE2\x80\x9D, and other\r\n\
      objects make use of the Title directly. Oops!\r\n\
      </p>\r\n        <p>\r\n          <strong>\r\n            <font color=\"#800000\">Updated: What is \xE2\x80\x9Cbool IsEmpty()\xE2\x80\x9D doing in there?!?\r\n\
      bool? Rule 3? CHEATER!</font>\r\n          </strong>\r\n        </p>\r\n        <p>\r\n\
      Guilty again. BookCollection has declared a \xE2\x80\x9Cpublic bool IsEmpty()\xE2\x80\x9D, which is wrapped\r\n\
      by an identical method on another class, which is then used as part of a decision-making\r\n\
      process. If I\xE2\x80\x99m correct, it looks like I\xE2\x80\x99m going to have to introduce yet another\r\n\
      (abuse of the) strategy pattern to eliminate the bool returns.\r\n\
      </p>\r\n        <p>\r\n          <strong>\r\n            <font color=\"#800000\">Updated: what\xE2\x80\x99s all this dead code doing in there?</font>\r\n          </strong>\r\n        </p>\r\n        <p>\r\n\
      As I happily refactor away, I\xE2\x80\x99m making major changes to the internal organization.\r\n\
      There are casualties. Were I a careful C# citizen, I would use the internal keyword\r\n\
      instead of public, and R# (and for those of you without, FxCop as well) would be able\r\n\
      to easily determine which internal methods and classes are never used, and would be\r\n\
      able to highlight them for me. Too bad I\xE2\x80\x99m too lazy to change everything from public\r\n\
      to internal.\r\n\
      </p>\r\n        <p>\r\n\
      Thankfully, R# <strong>also includes solution-wide analysis</strong>, which lets me\r\n\
      know which public methods and classes are unused as well. So, this is just a reminder\r\n\
      to myself to make sure that solution-wide analysis is turned on, so I don\xE2\x80\x99t miss anything\r\n\
      obvious.\r\n\
      </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>#HTF2010</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/HTF2010.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,751c3d31-996c-403d-9f46-ab3a428521bc.aspx</id>\r\n    <published>2010-08-02T22:00:00-07:00</published>\r\n    <updated>2010-07-30T20:31:30.5430811-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      The Houston TechFest is coming!\r\n\
      </p>\r\n        <p style=\"text-align: center\">\r\n          <a title=\"Houston TechFest 2010 Agenda\" href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Agenda/tabid/55/Default.aspx\">\r\n            <img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.pseale.com/blog/content/binary/WindowsLiveWriter/HTF2010_136DC/image_3.png\" width=\"700\" height=\"280\" />\r\n            <br />\r\n\
      (click image to see full agenda)</a>\r\n        </p>\r\n        <blink>\r\n          <marquee>\r\n            <p>\r\n              <a style=\"padding-bottom: 0.3em; background-color: yellow; padding-left: 0.3em; padding-right: 0.3em; letter-spacing: -2px; color: red; font-size: 2.3em; text-decoration: blink; padding-top: 0.3em\" href=\"http://www.houstontechfest.com/\">#HTF2010:Houston\r\n\
      TechFest \xE2\x80\x93 October 9th, 2010, @UH</a>\r\n            </p>\r\n          </marquee>\r\n          <p>\r\n\
      \xC2\xA0\r\n\
      </p>\r\n          <p>\r\n            <strong>I\xE2\x80\x99m particularly interested in the following sessions:</strong>\r\n          </p>\r\n          <ul>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/223/Default.aspx\">CODING\r\n\
      DOJO (extended session\xE2\x80\x94bleeds into lunchtime)</a> \xE2\x80\x93 emphasis on <strong>bleed</strong>.\r\n\
      I have only one question: <strong>\xE2\x80\x9CWHO\xE2\x80\x99S THE CHUMP RUNNING THIS DOJO?\xE2\x80\x9D </strong>I <em>really </em>hope\r\n\
      the speaker comes prepared. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/191/Default.aspx\">The\r\n\
      Keynote</a> \xE2\x80\x93 Venkat is an excellent speaker. Assuming the projector in the main room\r\n\
      works at all, \xE2\x80\xA6 well, maybe even without the main room projector\xE2\x80\xA6 from the title it\r\n\
      sounds like this is some kind of call to arms. Sweet. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/273/Default.aspx\">Peer\r\n\
      code review \xE2\x80\x93 an Agile process</a> \xE2\x80\x93 assuming this talk is based on first-hand experience,\r\n\
      this could be the most useful session in the entire TechFest. Code review has been,\r\n\
      hmm, how to say, <em>an underserved need</em> thus far in my career, and I wouldn\xE2\x80\x99t\r\n\
      mind submitting myself to code reviews. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/235/Default.aspx\">Workflow\r\n\
      systems \xE2\x80\x93 myths</a> \xE2\x80\x93 from a Microsoft DE. This could be dynamite. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/214/Default.aspx\">Pair\r\n\
      programming</a> \xE2\x80\x93 Part of the Claudio-fest AKA .NET 1 track. I\xE2\x80\x99m not sure what\xE2\x80\x99s going\r\n\
      to happen here, but I\xE2\x80\x99ll give my stamp of approval sight/description unseen. \r\n\
      </li>\r\n            <li>\r\n\
      Two excellent, globally-applicable sessions disguised as SharePoint content: \r\n\
      <ul><li><a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/194/Default.aspx\">Customizing\r\n\
      the social aspects of SharePoint</a> \xE2\x80\x93 assuming this is a \xE2\x80\x9Clessons learned\xE2\x80\x9D-type session,\r\n\
      it will be excellent. \r\n\
      </li><li><a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/280/Default.aspx\">Using\r\n\
      social networking as a support model</a> \xE2\x80\x93 again, assuming this relies on direct experience,\r\n\
      which I believe it does, this short session will be more valuable than a day of traditional\r\n\
      SP curriculum. \r\n\
      </li></ul></li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/206/Default.aspx\">Advanced\r\n\
      object-oriented programming</a> \xE2\x80\x93 I\xE2\x80\x99m curious to see how this session goes. At some\r\n\
      point, the concepts become sufficiently advanced such that the best way to explain\r\n\
      them is to show code. However it\xE2\x80\x99s done, the content looks interesting. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/233/Default.aspx\">Agile\r\n\
      Adoption: curing the disease</a> \xE2\x80\x93 conflicts with my session, otherwise I\xE2\x80\x99m there.\r\n\
      Incidentally, I think that the lack of Agile-y coding skills (or as they\xE2\x80\x99re sometimes\r\n\
      called, \xE2\x80\x9Cagile engineering techniques\xE2\x80\x9D) are a huge barrier to Agile adoption. Just\r\n\
      that, and human nature.</li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/279/Default.aspx\">Zen\r\n\
      coding</a> \xE2\x80\x93 a more philosophical session.</li>\r\n            <li>\r\n\
      The Claudio-fest AKA .NET 1 track \xE2\x80\x93 I won\xE2\x80\x99t be attending because I\xE2\x80\x99ve seen these sessions\r\n\
      at some time or other: \r\n\
      <ul><li><a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/212/Default.aspx\">Design\r\n\
      patterns</a> \xE2\x80\x93 Claudio\xE2\x80\x99s session here is code-heavy, in the best way. He presents\r\n\
      each design pattern by example, writing the code as you go, so you can follow along. <strong>Highly </strong>recommended. \r\n\
      </li><li><a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/222/Default.aspx\">Tips\r\n\
      and tricks to boost productivity</a> \xE2\x80\x93 this session is where I first learned about <a href=\"http://www.pseale.com/blog/SlickRunProtips.aspx\">SlickRun</a>.\r\n\
      Claudio will introduce dozens of little, helpful tools in this session\xE2\x80\x94you\xE2\x80\x99ll pick\r\n\
      up something from this session. \r\n\
      </li></ul></li>\r\n          </ul>\r\n          <p>\r\n            <strong>These sessions tickle my fancy:</strong>\r\n          </p>\r\n          <ul>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/268/Default.aspx\">Distributed\r\n\
      Version Control with Mercurial</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/203/Default.aspx\">A\r\n\
      scalable Rails app deployed in 60 seconds</a> \xE2\x80\x93 for high comedy, click the link and\r\n\
      read the description! ho-ho! I think that\xE2\x80\x99s a typo, that or Ben is pulling a big,\r\n\
      big prank. Anyway, despite having never touched Rails, I\xE2\x80\x99m interested in Heroku\xE2\x80\x94the\r\n\
      featureset and testimonials are simply undeniable. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/270/Default.aspx\">Data\r\n\
      mining</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/236/Default.aspx\">Agile\r\n\
      planning: it\xE2\x80\x99s all relative</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/261/Default.aspx\">Debunking\r\n\
      Agile (not)</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/271/Default.aspx\">Developing\r\n\
      and debugging web content with Firebug</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/244/Default.aspx\">WPF\r\n\
      Styling</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/253/Default.aspx\">MongoDB</a>\r\n            </li>\r\n          </ul>\r\n          <p>\r\n\
      I\xE2\x80\x99m not particularly interested in the introduction to * sessions, Azure (or anything\r\n\
      Cloud), Windows Phone 7, the SharePoint technical sessions, Java, or anything SQL.\r\n\
      Basically, <strong>any technical content I can\xE2\x80\x99t use within the next three months\r\n\
      is uninteresting to me</strong>. But that\xE2\x80\x99s not the point. The point<strong> isn\xE2\x80\x99t</strong> that\r\n\
      I\xE2\x80\x99m uninterested in attending most of the sessions; the point <strong>is</strong> that\r\n\
      I\xE2\x80\x99ve found something (in most cases, several somethings) in every time slot I <strong>do</strong> want\r\n\
      to attend. The Houston TechFest will have something for everybody. Even me.\r\n\
      </p>\r\n          <h3>Full Disclosure\r\n\
      </h3>\r\n          <p>\r\n\
      I am bound to disclose the fact that if you attend the Houston TechFest, you will\r\n\
      have to give up the following:\r\n\
      </p>\r\n          <p>\r\n            <img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.pseale.com/blog/content/binary/WindowsLiveWriter/HTF2010_136DC/image_6.png\" width=\"303\" height=\"902\" />\r\n          </p>\r\n          <p>\r\n\
      Yet again, the Houston TechFest has chosen to tempt fate and has scheduled itself\r\n\
      on the day of the largest UH football game of the year\xE2\x80\x94Miss. St. is coming to town.\r\n\
      Last year when Texas Tech took the field at Robertson Stadium just hours after the\r\n\
      TechFest\xE2\x80\x99s closing session, things ended badly for them. 29-28 badly!\r\n\
      </p>\r\n        </blink>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Linkblogging: Object Calisthenics</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/LinkbloggingObjectCalisthenics.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,a176368f-ea14-46f6-953b-1d9b15cb6e9a.aspx</id>\r\n    <published>2010-07-30T20:47:32.5232476-07:00</published>\r\n    <updated>2010-07-30T20:47:46.6881384-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <category term=\"Object Calisthenics\" label=\"Object Calisthenics\" scheme=\"http://www.pseale.com/blog/CategoryView,category,ObjectCalisthenics.aspx\" />\r\n    <content type=\"html\">&lt;blockquote&gt; \r\n\
      &lt;p&gt;\r\n\
      In preparation for the upcoming session at the &lt;a href=\"http://www.houstontechfest.com/\"&gt;Houston\r\n\
      TechFest&lt;/a&gt; (October 9th, 2010, UH campus), I\xE2\x80\x99m doing \xE2\x80\x9Cinternet research\xE2\x80\x9D AKA browsing\r\n\
      around a lot. I\xE2\x80\x99m collecting here a list of everything I could find on the topic.\r\n\
      Be warned, this will be exhaustive (and thus, exhausting to read). Apologies in advance.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &amp;#160;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;The original essay&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.xpteam.com/jeff/writings/objectcalisthenics.rtf\"&gt;Object Calisthenics\r\n\
      [warning: RTF document]&lt;/a&gt; by &lt;a href=\"http://www.xpteam.com/jeff/\"&gt;Jeff Bay&lt;/a&gt; \xE2\x80\x93\r\n\
      this also appears as a chapter in &lt;a href=\"http://pragprog.com/titles/twa/thoughtworks-anthology\"&gt;The\r\n\
      Thoughtworks Anthology&lt;/a&gt;. It\xE2\x80\x99s well-written, and if you\xE2\x80\x99re going to bother trying\r\n\
      out object calisthenics, &lt;strong&gt;please&lt;/strong&gt; read the original essay. The most\r\n\
      important thing to learn is &lt;strong&gt;not the rules themselves, but the reasons the\r\n\
      rules exist&lt;/strong&gt;, and thus, what you\xE2\x80\x99re supposed to take away from the entire\r\n\
      experience. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Retrospectives from people who have attempted object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.markhneedham.com/blog/2008/11/06/object-calisthenics-first-thoughts/\"&gt;Object\r\n\
      calisthenics: first thoughts&lt;/a&gt; by Mark Needham. Notable takeaways: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      he was \xE2\x80\x9Csurprised how difficult the problem was to solve using the Object Calisthenics\r\n\
      rules.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CI noticed [after trying object calisthenics] that I was always on the lookout for\r\n\
      ways to ensure that we didn't expose any state, so it's had a slight influence on\r\n\
      my approach already.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Unit testing is hard: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      Mark\xE2\x80\x99s group implemented .Equals() and .ToHashCode() for the sole purpose of being\r\n\
      able to unit test while adhering to the rules of object calisthenics. (It is generally\r\n\
      frowned upon to implement production code for the sole purpose of building tests.) \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Another group used baby steps TDD and triangulation to build unit test. While Mark\r\n\
      (in the blog post) was supportive of this approach, I had less than stellar results\r\n\
      trying this out in our coding dojo last year. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      They didn\xE2\x80\x99t finish solving the problem. For those of you surprised by this, trust\r\n\
      me: if anyone ever finishes a problem in a coding dojo environment, it\xE2\x80\x99s something\r\n\
      of a miracle. So, with this context, you may read the sentence as \xE2\x80\x9CToday, no miracle\r\n\
      occurred; we didn\xE2\x80\x99t finish the problem during the coding dojo.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Notes from the comments: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      From Kris: Possibly encourage people solve a small part of the problem by breaking\r\n\
      the rules, then, slowly refactor their code to \xE2\x80\x9Cmake the rules pass\xE2\x80\x9D in a manner conceptually\r\n\
      similar to TDD\xE2\x80\x99s red/green/refactor. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blog.m.artins.net/first-sydney-coding-dojo/\"&gt;First Sydney Coding Dojo&lt;/a&gt; (NOTE:\r\n\
      this is another perspective on the same dojo mentioned above by Mark Needham) \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      Coding dojos as a means of idea exchange: \xE2\x80\x9CApart from being an amusing experience,\r\n\
      it was quite interesting to see the different approaches that people take to solve\r\n\
      the same problem, - the design, the way they write tests, the code style, pretty cool.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Also interesting to note, the author suggested improvements that would \xE2\x80\x9Cimprove productivity.\xE2\x80\x9D\r\n\
      Coding dojo productivity seems to ALWAYS be abysmal. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://schneide.wordpress.com/2009/11/29/follow-up-to-our-dev-brunch-november-2009/\"&gt;Object\r\n\
      calisthenics: by example; inspected&lt;/a&gt; \xE2\x80\x93 quotes: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9C\xE2\x80\xA6his techniques included the use of the &lt;a href=\"http://en.wikipedia.org/wiki/Visitor_pattern\"&gt;Visitor\r\n\
      design pattern&lt;/a&gt;, which wasn\xE2\x80\x99t the author\xE2\x80\x99s first choice beforehand. Test Driven\r\n\
      Development alone wouldn\xE2\x80\x99t have led to this solution\xE2\x80\xA6\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CThe first observation was that the rules follow a dramatic composition that orders\r\n\
      them from \xE2\x80\x9Cmost obvious and immediate code improvement\xE2\x80\x9D to \xE2\x80\x9Chardest to achieve code\r\n\
      improvement\xE2\x80\x9D and in the same order from \xE2\x80\x9Ceasiest to acknowledge\xE2\x80\x9D to \xE2\x80\x9Cmost controversial\xE2\x80\x9D.\r\n\
      At the end of the list, the audience rioted most of the time. But if you reject the\r\n\
      last few rules, you\xE2\x80\x99ve silently agreed to the first ones, the ones with the greatest\r\n\
      potential for immediate improvement.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CIt\xE2\x80\x99s a &lt;strong&gt;learning catalyst&lt;/strong&gt; for those of us that aren\xE2\x80\x99t born as programming\r\n\
      super-heros. To speak &lt;a href=\"http://www.infoq.com/articles/implementations-patterns-br\"&gt;in\r\n\
      terms Kent Beck coined&lt;/a&gt;: Object Calisthenics provide some handy practices that\r\n\
      might eventually lead to a better understanding of their underlying principles. Even\r\n\
      beginners can follow the practices and review their code on compliance. When they\r\n\
      fully get to know the principles (like &lt;a href=\"http://en.wikipedia.org/wiki/Law_of_Demeter\"&gt;Law\r\n\
      Of Demeter&lt;/a&gt;, for example), they are already halfway there.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      This is yet another example of \xE2\x80\x9Ccoding dojos are a safe learning environment\xE2\x80\x9D: \xE2\x80\x9CAt\r\n\
      last, Object Calisthenics, if performed as a group exercise, can be a team solder.\r\n\
      You can rant over code together without regrets \xE2\x80\x93 the rules were made elsewhere. And\r\n\
      you can discuss different solutions without feeling pointless \xE2\x80\x93 fulfilling the rules\r\n\
      is the common goal for a short time.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.morkeleb.com/2009/11/11/alt-net-stockholm-coding-dojo/\"&gt;Alt.Net\r\n\
      Stockholm coding dojo&lt;/a&gt; \xE2\x80\x93 it appears that they didn\xE2\x80\x99t finish the problem, no miracle\r\n\
      occurred at this dojo either. The only other takeaway I have from this is that nobody\r\n\
      wants to stick to the object calisthenics rules. My pet theory is that people try\r\n\
      to avoid pain, and these rules cause a great deal of \xE2\x80\x9Cbrain owies.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blog.avegagroup.se/MarcusHammarberg/archive/2010/01/05/trying-coding-dojo-kata-and-extreme-oop.aspx\"&gt;Trying\r\n\
      Coding dojo, kata and Extreme OOP&lt;/a&gt; - \xE2\x80\x9CSecond - the rules are very hard to follow\xE2\x80\xA6\r\n\
      Very hard. We didn\xE2\x80\x99t get quite there I felt.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CBeing Cellfish\xE2\x80\x9D \xE2\x80\x93 a Microsoft employee\xE2\x80\x99s detailed experiences with object calisthenics: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/26/team-coding-dojo-5.aspx\"&gt;Team\r\n\
      Coding Dojo 5&lt;/a&gt; - \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      On refactoring as a tool of emergent design (or as Andy mentioned, \xE2\x80\x9Cserendipitous\r\n\
      design\xE2\x80\x9D): \xE2\x80\x9CThis time we had a lot of design discussions and we had to force our selfs\r\n\
      to just do some refactoring and see where it took us. I think it was great to see\r\n\
      how we refactored and created new classes just to later refactor these classes to\r\n\
      nothing and removing them. It was a great experience in how refactoring in steps reveals\r\n\
      the design for you. We also had the full test suite save us a bunch of times from\r\n\
      stupid bugs which is also nice.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      On lack of productivity: \xE2\x80\x9CBut refactoring existing code to follow the object calisthenics\r\n\
      rules is very hard and takes time.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/15/object-calisthenics-first-contact.aspx\"&gt;Object\r\n\
      calisthenics: first contact&lt;/a&gt; \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      On small classes: \xE2\x80\x9CI also learned that classes that I felt were really small and doing\r\n\
      only one thing actually could be split up when I had to in order to conform to the\r\n\
      rules. Reminds me of when people thought atoms were the smallest building blocks of\r\n\
      the universe and then it turned out to be something smaller&amp;hellip;\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CSo all in all I think doing a coding Kata while applying the object calisthenics\r\n\
      rules will improve my ability to write object oriented code\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Explanations of object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CBeing Cellfish\xE2\x80\x9D \xE2\x80\x93 a Microsoft employee\xE2\x80\x99s detailed experiences with object calisthenics: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/16/object-calisthenics-rule-1-use-one-level-of-indentation-per-method.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 1: Use one level of indentation per method&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/17/object-calisthenics-rule-2-don-t-use-the-else-keyword.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 2: Don't use the else keyword&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/18/object-calisthenics-rule-3-wrap-all-primitives-and-strings.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 3: Wrap all primitives and strings&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/19/object-calisthenics-rule-4-use-only-one-dot-per-line.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 4: Use only one dot per line&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/20/object-calisthenics-rule-5-don-t-abbreviate.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 5: Don't abbreviate&lt;/a&gt;&amp;#160; - \xE2\x80\x9CBut the explanation for this rule\r\n\
      is that you should not abbreviate anything &lt;strong&gt;and&lt;/strong&gt; &lt;font color=\"#800080\"&gt;&lt;strong&gt;each\r\n\
      class and method name should be one or two words only&lt;/strong&gt;&lt;/font&gt;.\xE2\x80\x9D (emphasis\r\n\
      added) \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/21/object-calisthenics-rule-6-keep-all-entities-small.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 6: Keep all entities small&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &amp;#160;&lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/22/object-calisthenics-rule-7-don-t-use-any-classes-with-more-than-two-instance-variables.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 7: Don't use any classes with more than two instance variables&lt;/a&gt; -\r\n\
      \xE2\x80\x9CAll that said, remember that this is a rule intended for practice, not necessarily\r\n\
      a good thing to always use in all code.\xE2\x80\x9D \xE2\x80\xA6agreed. This is by far my least favorite\r\n\
      rule, because I think that two instance variables is an arbitrary number. I also assume\r\n\
      that the author doesn\xE2\x80\x99t count dependencies injected via dependency injection toward\r\n\
      the 2-instance-variable count, or doesn\xE2\x80\x99t do dependency injection at all? Well, I\r\n\
      need to practice what I preach and just do it anyway and see what happens. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/23/object-calisthenics-rule-8-use-first-class-collections.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 8: Use first class collections&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/24/object-calisthenics-rule-9-don-t-use-any-getters-setters-or-properties.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 9: Don't use any getters, setters or properties&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/Lectures/calisthenics/\"&gt;Slides from lectures\r\n\
      on object calisthenics&lt;/a&gt; \xE2\x80\x93 all I can say about this is, &lt;em&gt;awesome&lt;/em&gt;. It appears\r\n\
      to be an OO programming course taught in Java at William &amp;amp; Mary. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://milano-xpug.pbworks.com/f/10080616-extreme-oop.pdf\"&gt;Extreme OOP [warning:\r\n\
      PDF]&lt;/a&gt; \xE2\x80\x93 this looks to be a variant of the &lt;a href=\"http://katas.softwarecraftsmanship.org/?p=80\"&gt;String\r\n\
      Calculator kata problem&lt;/a&gt; enforcing both TDD and Object Calisthenics, all at the\r\n\
      same time. No worries, I won\xE2\x80\x99t force TDD (I don\xE2\x80\x99t have the fortitude). This contains\r\n\
      abbreviated explanations of each rule. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.antiifcampaign.com/\"&gt;Rule 2: Don\xE2\x80\x99t use the ELSE keyword \xE2\x80\x93 the\r\n\
      anti-if campaign&lt;/a&gt; \xE2\x80\x93 and specifically, &lt;a href=\"http://www.antiifcampaign.com/articles/the-simplest-anti-if-code.html\"&gt;their\r\n\
      article that shows how to remove if\xE2\x80\x99s via a code sample&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://stackoverflow.com/questions/1937362/who-does-number-two-work-for\"&gt;Rule\r\n\
      2: Don\xE2\x80\x99t use the ELSE keyword \xE2\x80\x93&amp;#160; Can you write an algorithm without an if statement?\r\n\
      [StackOverflow]&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://codemonkeyism.com/never-never-never-use-string-in-java-or-at-least-less-often/\"&gt;Rule\r\n\
      3: Wrap all primitives and Strings \xE2\x80\x93 titled Never, never, never use String in Java\r\n\
      (or at least less often)&lt;/a&gt; \xE2\x80\x93 lots of comments here. I just couldn\xE2\x80\x99t bear reading\r\n\
      them all. You read them and tell me if there\xE2\x80\x99s anything here of use. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"https://dev.youdevise.com/YDBlog/index.php?title=my_new_favorite_extreme_oo_rule&amp;amp;more=1&amp;amp;c=1&amp;amp;tb=1&amp;amp;pb=1\"&gt;Rule\r\n\
      4: First-class collections \xE2\x80\x93 My favorite new extreme-OO rule&lt;/a&gt; - \xE2\x80\x9CThis new FooBarLookup\r\n\
      class also gave me the ability to write some &lt;a href=\"http://en.wikipedia.org/wiki/Higher-order_function\"&gt;high-order-function&lt;/a&gt;-esque\r\n\
      methods that &lt;a href=\"http://en.wikipedia.org/wiki/Map_%28higher-order_function%29\"&gt;map&lt;/a&gt; or &lt;a href=\"http://en.wikipedia.org/wiki/Filter_%28higher-order_function%29\"&gt;filter&lt;/a&gt; the\r\n\
      Foo\xE2\x80\x99s and Bar\xE2\x80\x99s in the Lookup. Happily, all of this iteration noise is hidden inside\r\n\
      the encapsulated collection, and away from my business logic.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dotnet.robertmao.com/2008/06/17/write-code-with-no-getters/\"&gt;Rule\r\n\
      9: No getters/setters/properties \xE2\x80\x93 Write code with no getters?&lt;/a&gt; This is a critical\r\n\
      review of articles written about the topic. The author is definitely not happy about\r\n\
      the prospect. References the article &lt;a href=\"http://www.javaworld.com/javaworld/jw-09-2003/jw-0905-toolbox.html\"&gt;Why\r\n\
      getters and setters are evil&lt;/a&gt;, which I remember reading a long time ago and thinking,\r\n\
      \xE2\x80\x9Cthat sounds crazy! but intriguing\xE2\x80\xA6\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Problem sets/source code of object calisthenics attempts&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/activity/calisthenics/\"&gt;Rewrite Card.java\r\n\
      using object calisthenics rules&lt;/a&gt; (&lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/activity/calisthenics/Card.java.txt\"&gt;Card.java&lt;/a&gt;)-\r\n\
      From the abovementioned univeristy lectures. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"https://www.ohloh.net/p/pokqs\"&gt;pokqs [Java, Apache license]&lt;/a&gt; \xE2\x80\x93 attempts\r\n\
      to implement QuickSort (??? WHY ???) using the object calisthenics rules. To each\r\n\
      his own I suppose. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Reviews from people who have read about (have not tried) object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://jimbarritt.com/non-random/2009/03/04/object-calisthenics-jeff-bay/\"&gt;Object\r\n\
      Calisthenics&lt;/a&gt; - \xE2\x80\x9CJeff explains in a great way a few principles and challenges the\r\n\
      reader to try them out in a rigorous way, just to see how it works out. This is a\r\n\
      great way to present it, its not saying \xE2\x80\x9CI know the right way and you must follow\r\n\
      the rules\xE2\x80\x9D, its suggesting that you should give it a chance and you might begin to\r\n\
      see some rewards, or \xE2\x80\x9CTry it, you might like it\xE2\x80\x9D.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://jimbarritt.com/non-random/2009/03/07/object-calisthenics-jeff-bay-part-2/\"&gt;Object\r\n\
      Calisthenics, Part 2&lt;/a&gt; \xE2\x80\x93 the author discusses how adding small methods eliminates\r\n\
      what people sometimes call \xE2\x80\x9Cmicro duplication\xE2\x80\x9D, and discusses the purpose of rule\r\n\
      #3 (No static methods other than factory methods) in further detail. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dubroy.com/blog/if-this-is-object-calisthenics-i-think-ill-stay-on-the-couch/\"&gt;If\r\n\
      this is object calisthenics, I think I\xE2\x80\x99ll stay on the couch&lt;/a&gt; \xE2\x80\x93 from the comments:\r\n\
      \xE2\x80\x9C\xE2\x80\xA6but if [object calisthenics is] an exercise, then you need to make sure that it\xE2\x80\x99s\r\n\
      working the right muscles, and not hurting your overall form. My belief is that these\r\n\
      exercises are not working the right muscles.\xE2\x80\x9D My counter-argument to the author is:\r\n\
      dude, you come from SmallTalk land. You have mastered the mama bear, (just-right!)\r\n\
      approach to object-oriented programming. Object calisthenics was written by a Java\r\n\
      programmer, for the (presumably) Java audience. Think of object calisthenics as the\r\n\
      papa bear object-oriented ruleset (too hot!) to counteract the standard baby bear\r\n\
      procedural-style programming practice (too cold!) . Once the baby bear programmers\r\n\
      have tried the papa bear\xE2\x80\x99s porridge, they\xE2\x80\x99ll\xE2\x80\xA6well\xE2\x80\xA6I sure hope they learn something.\r\n\
      Anyway, this article has good points \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://binstock.blogspot.com/2008/04/perfecting-oos-small-classes-and-short.html\"&gt;OO\xE2\x80\x99s\r\n\
      short classes and small methods&lt;/a&gt; \xE2\x80\x93 while the author endorses object calisthenics,\r\n\
      I\xE2\x80\x99m hesitant to quote him on anything, as he hasn\xE2\x80\x99t tried them out. In any event,\r\n\
      this article was linked from proggit and received lots of comments with a mix between\r\n\
      those expressing dubiousness, comments defending the \xE2\x80\x9Cjust try it\xE2\x80\x9D approach, and comments\r\n\
      completely misrepresenting the object calisthenics rules. &lt;a href=\"http://www.reddit.com/r/programming/comments/6gx7o/perfecting_oos_small_classes_and_short_methods/\"&gt;The\r\n\
      reddit comment thread is similar&lt;/a&gt;. Takeaway for me is, first, emphasize that the\r\n\
      rules make sense, and second, have a paper reference explaining the rules in further\r\n\
      detail. There will be misunderstanding, guaranteed. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;JACKPOT! Blog post citing research from SCIENCE! SCIENCE, whereupon we can\r\n\
      base our opinions, &lt;u&gt;as opposed to basing our opinions on other uninformed blog posts&lt;/u&gt;!\r\n\
      ggggggggggggggggggggggg-yes!&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dubroy.com/blog/method-length-are-short-methods-actually-worse/\"&gt;Are\r\n\
      short methods actually worse?&lt;/a&gt; \xE2\x80\x93 the author reviews the most commonly cited research\r\n\
      on method length (make sure to read the update for the updated conclusion). The author\r\n\
      also (separately, not influenced by the aforementioned research) introduces a concept\r\n\
      I can agree with: \xE2\x80\x9CBy making your methods shorter, you\xE2\x80\x99re just trading one kind of\r\n\
      complexity for another.\xE2\x80\x9D This I think is the #1 issue keeping people from adopting\r\n\
      object-oriented programming and the \xE2\x80\x9Cexplosion of objects\xE2\x80\x9D\xE2\x80\x94they can no longer find\r\n\
      their code once it\xE2\x80\x99s split between five objects, instead of the one object that did\r\n\
      EVERYTHING. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Related links&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://c2.com/cgi/wiki?RavioliCode\"&gt;Ravioli Code (from the original gangster\r\n\
      C2 wiki)&lt;/a&gt; \xE2\x80\x93 spaghetti is what happens when you have a procedural mess. Ravioli\r\n\
      is what happens when you have an object-oriented mess. In defense of XP, (next link\r\n\
      follows)\xE2\x80\xA6 \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://xprogramming.com/images/circles.jpg\"&gt;XP Practices diagram&lt;/a&gt;, from &lt;a href=\"http://xprogramming.com/xpmag/whatisxp\"&gt;What\r\n\
      is XP&lt;/a&gt; \xE2\x80\x93 \xE2\x80\x9CSimple Design\xE2\x80\x9D is a core element of XP. \xE2\x80\x9C[choosing the appropriate] Metaphor\xE2\x80\x9D\r\n\
      is also important to keep your code simple. Not mentioned in the XP diagram, but implied\r\n\
      is the concept of\xE2\x80\xA6 \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://c2.com/xp/YouArentGonnaNeedIt.html\"&gt;You Ain\xE2\x80\x99t Gonna Need It (YAGNI)\r\n\
      (from the original gangster C2 wiki)&lt;/a&gt; \xE2\x80\x93 don\xE2\x80\x99t add &lt;strong&gt;anything &lt;/strong&gt;to\r\n\
      your code for \xE2\x80\x9Cflexibility\xE2\x80\x9D, \xE2\x80\x9Cmodularity\xE2\x80\x9D, \xE2\x80\x9Cjust in case,\xE2\x80\x9D \xE2\x80\x9Csomething I will need\r\n\
      later.\xE2\x80\x9D YOU, your SOURCE CODE REPOSITORY, and your PROGRAM REQUIREMENTS are the most\r\n\
      flexible pieces. When you need something in your code later, add it &lt;strong&gt;only later&lt;/strong&gt;,\r\n\
      at the very last possible moment. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;/blockquote&gt; \r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Plugging myself:&lt;/strong&gt; \r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/CategoryView,category,ObjectCalisthenics.aspx\"&gt;Everything\r\n\
      tagged object calisthenics on my blog&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;</content>\r\n  </entry>\r\n  <entry>\r\n    <title>Linkblogging: Object Calisthenics</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/LinkbloggingObjectCalisthenics.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,c769eb8a-3497-40fa-ae68-8a86ae129f34.aspx</id>\r\n    <published>2010-07-17T12:17:01.6858036-07:00</published>\r\n    <updated>2010-07-17T12:17:01.6858036-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <category term=\"Object Calisthenics\" label=\"Object Calisthenics\" scheme=\"http://www.pseale.com/blog/CategoryView,category,ObjectCalisthenics.aspx\" />\r\n    <content type=\"html\">&lt;blockquote&gt; \r\n\
      &lt;p&gt;\r\n\
      In preparation for the upcoming session at the &lt;a href=\"http://www.houstontechfest.com/\"&gt;Houston\r\n\
      TechFest&lt;/a&gt; (October 9th, 2010, UH campus), I\xE2\x80\x99m doing \xE2\x80\x9Cinternet research\xE2\x80\x9D AKA browsing\r\n\
      around a lot. I\xE2\x80\x99m collecting here a list of everything I could find on the topic.\r\n\
      Be warned, this will be exhaustive (and thus, exhausting to read). Apologies in advance.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &amp;#160;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;The original essay&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.xpteam.com/jeff/writings/objectcalisthenics.rtf\"&gt;Object Calisthenics\r\n\
      [warning: RTF document]&lt;/a&gt; by &lt;a href=\"http://www.xpteam.com/jeff/\"&gt;Jeff Bay&lt;/a&gt; \xE2\x80\x93\r\n\
      this also appears as a chapter in &lt;a href=\"http://pragprog.com/titles/twa/thoughtworks-anthology\"&gt;The\r\n\
      Thoughtworks Anthology&lt;/a&gt;. It\xE2\x80\x99s well-written, and if you\xE2\x80\x99re going to bother trying\r\n\
      out object calisthenics, &lt;strong&gt;please&lt;/strong&gt; read the original essay. The most\r\n\
      important thing to learn is &lt;strong&gt;not the rules themselves, but the reasons the\r\n\
      rules exist&lt;/strong&gt;, and thus, what you\xE2\x80\x99re supposed to take away from the entire\r\n\
      experience. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Retrospectives from people who have attempted object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.markhneedham.com/blog/2008/11/06/object-calisthenics-first-thoughts/\"&gt;Object\r\n\
      calisthenics: first thoughts&lt;/a&gt; by Mark Needham. Notable takeaways: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      he was \xE2\x80\x9Csurprised how difficult the problem was to solve using the Object Calisthenics\r\n\
      rules.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CI noticed [after trying object calisthenics] that I was always on the lookout for\r\n\
      ways to ensure that we didn't expose any state, so it's had a slight influence on\r\n\
      my approach already.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Unit testing is hard: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      Mark\xE2\x80\x99s group implemented .Equals() and .ToHashCode() for the sole purpose of being\r\n\
      able to unit test while adhering to the rules of object calisthenics. (It is generally\r\n\
      frowned upon to implement production code for the sole purpose of building tests.) \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Another group used baby steps TDD and triangulation to build unit test. While Mark\r\n\
      (in the blog post) was supportive of this approach, I had less than stellar results\r\n\
      trying this out in our coding dojo last year. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      They didn\xE2\x80\x99t finish solving the problem. For those of you surprised by this, trust\r\n\
      me: if anyone ever finishes a problem in a coding dojo environment, it\xE2\x80\x99s something\r\n\
      of a miracle. So, with this context, you may read the sentence as \xE2\x80\x9CToday, no miracle\r\n\
      occurred; we didn\xE2\x80\x99t finish the problem during the coding dojo.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Notes from the comments: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      From Kris: Possibly encourage people solve a small part of the problem by breaking\r\n\
      the rules, then, slowly refactor their code to \xE2\x80\x9Cmake the rules pass\xE2\x80\x9D in a manner conceptually\r\n\
      similar to TDD\xE2\x80\x99s red/green/refactor. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blog.m.artins.net/first-sydney-coding-dojo/\"&gt;First Sydney Coding Dojo&lt;/a&gt; (NOTE:\r\n\
      this is another perspective on the same dojo mentioned above by Mark Needham) \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      Coding dojos as a means of idea exchange: \xE2\x80\x9CApart from being an amusing experience,\r\n\
      it was quite interesting to see the different approaches that people take to solve\r\n\
      the same problem, - the design, the way they write tests, the code style, pretty cool.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Also interesting to note, the author suggested improvements that would \xE2\x80\x9Cimprove productivity.\xE2\x80\x9D\r\n\
      Coding dojo productivity seems to ALWAYS be abysmal. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://schneide.wordpress.com/2009/11/29/follow-up-to-our-dev-brunch-november-2009/\"&gt;Object\r\n\
      calisthenics: by example; inspected&lt;/a&gt; \xE2\x80\x93 quotes: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9C\xE2\x80\xA6his techniques included the use of the &lt;a href=\"http://en.wikipedia.org/wiki/Visitor_pattern\"&gt;Visitor\r\n\
      design pattern&lt;/a&gt;, which wasn\xE2\x80\x99t the author\xE2\x80\x99s first choice beforehands. Test Driven\r\n\
      Development alone wouldn\xE2\x80\x99t have led to this solution\xE2\x80\xA6\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CThe first observation was that the rules follow a dramatic composition that orders\r\n\
      them from \xE2\x80\x9Cmost obvious and immediate code improvement\xE2\x80\x9D to \xE2\x80\x9Chardest to achieve code\r\n\
      improvement\xE2\x80\x9D and in the same order from \xE2\x80\x9Ceasiest to acknowledge\xE2\x80\x9D to \xE2\x80\x9Cmost controversial\xE2\x80\x9D.\r\n\
      At the end of the list, the audience rioted most of the time. But if you reject the\r\n\
      last few rules, you\xE2\x80\x99ve silently agreed to the first ones, the ones with the greatest\r\n\
      potential for immediate improvement.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CIt\xE2\x80\x99s a &lt;strong&gt;learning catalyst&lt;/strong&gt; for those of us that aren\xE2\x80\x99t born as programming\r\n\
      super-heros. To speak &lt;a href=\"http://www.infoq.com/articles/implementations-patterns-br\"&gt;in\r\n\
      terms Kent Beck coined&lt;/a&gt;: Object Calisthenics provide some handy practices that\r\n\
      might eventually lead to a better understanding of their underlying principles. Even\r\n\
      beginners can follow the practices and review their code on compliance. When they\r\n\
      fully get to know the principles (like &lt;a href=\"http://en.wikipedia.org/wiki/Law_of_Demeter\"&gt;Law\r\n\
      Of Demeter&lt;/a&gt;, for example), they are already halfway there.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      This is yet another example of \xE2\x80\x9Ccoding dojos are a safe learning environment\xE2\x80\x9D: \xE2\x80\x9CAt\r\n\
      last, Object Calisthenics, if performed as a group exercise, can be a team solder.\r\n\
      You can rant over code together without regrets \xE2\x80\x93 the rules were made elsewhere. And\r\n\
      you can discuss different solutions without feeling pointless \xE2\x80\x93 fulfilling the rules\r\n\
      is the common goal for a short time.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.morkeleb.com/2009/11/11/alt-net-stockholm-coding-dojo/\"&gt;Alt.Net\r\n\
      Stockholm coding dojo&lt;/a&gt; \xE2\x80\x93 it appears that they didn\xE2\x80\x99t finish the problem, no miracle\r\n\
      occurred at this dojo either. The only other takeaway I have from this is that nobody\r\n\
      wants to stick to the object calisthenics rules. My pet theory is that people try\r\n\
      to avoid pain, and these rules cause a lot of thinking pain. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blog.avegagroup.se/MarcusHammarberg/archive/2010/01/05/trying-coding-dojo-kata-and-extreme-oop.aspx\"&gt;Trying\r\n\
      Coding dojo, kata and Extreme OOP&lt;/a&gt; - \xE2\x80\x9CSecond - the rules are very hard to follow\xE2\x80\xA6\r\n\
      Very hard. We didn\xE2\x80\x99t get quite there I felt.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CBeing Cellfish\xE2\x80\x9D \xE2\x80\x93 a Microsoft employee\xE2\x80\x99s detailed experiences with object calisthenics: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/26/team-coding-dojo-5.aspx\"&gt;Team\r\n\
      Coding Dojo 5&lt;/a&gt; - \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      On refactoring as a tool of emergent design: \xE2\x80\x9CThis time we had a lot of design discussions\r\n\
      and we had to force our selfs to just do some refactoring and see where it took us.\r\n\
      I think it was great to see how we refactored and created new classes just to later\r\n\
      refactor these classes to nothing and removing them. It was a great experience in\r\n\
      how refactoring in steps reveals the design for you. We also had the full test suite\r\n\
      save us a bunch of times from stupid bugs which is also nice.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      On lack of productivity: \xE2\x80\x9CBut refactoring existing code to follow the object calisthenics\r\n\
      rules is very hard and takes time.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/15/object-calisthenics-first-contact.aspx\"&gt;Object\r\n\
      calisthenics: first contact&lt;/a&gt; \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      On small classes: \xE2\x80\x9CI also learned that classes that I felt were really small and doing\r\n\
      only one thing actually could be split up when I had to in order to conform to the\r\n\
      rules. Reminds me of when people thought atoms were the smallest building blocks of\r\n\
      the universe and then it turned out to be something smaller&amp;hellip;\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CSo all in all I think doing a coding Kata while applying the object calisthenics\r\n\
      rules will improve my ability to write object oriented code\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Explanations of object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CBeing Cellfish\xE2\x80\x9D \xE2\x80\x93 a Microsoft employee\xE2\x80\x99s detailed experiences with object calisthenics: \r\n\
      &lt;/li&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/16/object-calisthenics-rule-1-use-one-level-of-indentation-per-method.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 1: Use one level of indentation per method&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/17/object-calisthenics-rule-2-don-t-use-the-else-keyword.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 2: Don't use the else keyword&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/18/object-calisthenics-rule-3-wrap-all-primitives-and-strings.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 3: Wrap all primitives and strings&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/19/object-calisthenics-rule-4-use-only-one-dot-per-line.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 4: Use only one dot per line&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/20/object-calisthenics-rule-5-don-t-abbreviate.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 5: Don't abbreviate&lt;/a&gt;&amp;#160; - \xE2\x80\x9CBut the explanation for this rule\r\n\
      is that you should not abbreviate anything &lt;strong&gt;and&lt;/strong&gt; &lt;font color=\"#800080\"&gt;&lt;strong&gt;each\r\n\
      class and method name should be one or two words only&lt;/strong&gt;&lt;/font&gt;.\xE2\x80\x9D (emphasis\r\n\
      added)&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/21/object-calisthenics-rule-6-keep-all-entities-small.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 6: Keep all entities small&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &amp;#160;&lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/22/object-calisthenics-rule-7-don-t-use-any-classes-with-more-than-two-instance-variables.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 7: Don't use any classes with more than two instance variables&lt;/a&gt; -\r\n\
      \xE2\x80\x9CAll that said, remember that this is a rule intended for practice, not necessarily\r\n\
      a good thing to always use in all code.\xE2\x80\x9D \xE2\x80\xA6agreed. This is by far my least favorite\r\n\
      rule, because I think that two instance variables is an arbitrary number. I also assume\r\n\
      that the author doesn\xE2\x80\x99t count dependencies injected via dependency injection toward\r\n\
      the 2-instance-variable count, or doesn\xE2\x80\x99t do dependency injection at all? Well, I\r\n\
      need to practice what I preach and just do it anyway and see what happens.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/23/object-calisthenics-rule-8-use-first-class-collections.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 8: Use first class collections&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/24/object-calisthenics-rule-9-don-t-use-any-getters-setters-or-properties.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 9: Don't use any getters, setters or properties&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/Lectures/calisthenics/\"&gt;Slides from lectures\r\n\
      on object calisthenics&lt;/a&gt; \xE2\x80\x93 all I can say about this is, &lt;em&gt;awesome&lt;/em&gt;. It appears\r\n\
      to be an OO programming course taught in Java at William &amp;amp; Mary. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://milano-xpug.pbworks.com/f/10080616-extreme-oop.pdf\"&gt;Extreme OOP [warning:\r\n\
      PDF]&lt;/a&gt; \xE2\x80\x93 this looks to be the &lt;a href=\"http://katas.softwarecraftsmanship.org/?p=80\"&gt;String\r\n\
      Calculator kata problem&lt;/a&gt; enforcing both TDD and Object Calisthenics, all at the\r\n\
      same time. No worries, I won\xE2\x80\x99t force TDD (I don\xE2\x80\x99t have the fortitude). This contains\r\n\
      abbreviated explanations of each rule. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.antiifcampaign.com/\"&gt;Rule 2: Don\xE2\x80\x99t use the ELSE keyword \xE2\x80\x93 the\r\n\
      anti-if campaign&lt;/a&gt; \xE2\x80\x93 and specifically, &lt;a href=\"http://www.antiifcampaign.com/articles/the-simplest-anti-if-code.html\"&gt;their\r\n\
      article that shows how to remove if\xE2\x80\x99s via a code sample&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://stackoverflow.com/questions/1937362/who-does-number-two-work-for\"&gt;Rule\r\n\
      2: Don\xE2\x80\x99t use the ELSE keyword \xE2\x80\x93&amp;#160; Can you write an algorithm without an if statement?\r\n\
      [StackOverflow]&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://codemonkeyism.com/never-never-never-use-string-in-java-or-at-least-less-often/\"&gt;Rule\r\n\
      3: Wrap all primitives and Strings \xE2\x80\x93 titled Never, never, never use String in Java\r\n\
      (or at least less often)&lt;/a&gt; \xE2\x80\x93 lots of comments here. I just couldn\xE2\x80\x99t bear reading\r\n\
      them all. You read them and tell me if there\xE2\x80\x99s anything here of use. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"https://dev.youdevise.com/YDBlog/index.php?title=my_new_favorite_extreme_oo_rule&amp;amp;more=1&amp;amp;c=1&amp;amp;tb=1&amp;amp;pb=1\"&gt;Rule\r\n\
      4: First-class collections \xE2\x80\x93 My favorite new extreme-OO rule&lt;/a&gt; - \xE2\x80\x9CThis new FooBarLookup\r\n\
      class also gave me the ability to write some &lt;a href=\"http://en.wikipedia.org/wiki/Higher-order_function\"&gt;high-order-function&lt;/a&gt;-esque\r\n\
      methods that &lt;a href=\"http://en.wikipedia.org/wiki/Map_%28higher-order_function%29\"&gt;map&lt;/a&gt; or &lt;a href=\"http://en.wikipedia.org/wiki/Filter_%28higher-order_function%29\"&gt;filter&lt;/a&gt; the\r\n\
      Foo\xE2\x80\x99s and Bar\xE2\x80\x99s in the Lookup. Happily, all of this iteration noise is hidden inside\r\n\
      the encapsulated collection, and away from my business logic.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dotnet.robertmao.com/2008/06/17/write-code-with-no-getters/\"&gt;Rule\r\n\
      9: No getters/setters/properties \xE2\x80\x93 Write code with no getters?&lt;/a&gt; This is a critical\r\n\
      review of articles written about the topic. The author is definitely not happy about\r\n\
      the prospect. References the article &lt;a href=\"http://www.javaworld.com/javaworld/jw-09-2003/jw-0905-toolbox.html\"&gt;Why\r\n\
      getters and setters are evil&lt;/a&gt;, which I remember reading a long time ago and thinking,\r\n\
      \xE2\x80\x9Cthat sounds crazy! but intriguing\xE2\x80\xA6\xE2\x80\x9D&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Problem sets/source code of object calisthenics attempts&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/activity/calisthenics/\"&gt;Rewrite Card.java\r\n\
      using object calisthenics rules&lt;/a&gt; (&lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/activity/calisthenics/Card.java.txt\"&gt;Card.java&lt;/a&gt;)-\r\n\
      From the abovementioned univeristy lectures. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"https://www.ohloh.net/p/pokqs\"&gt;pokqs [Java, Apache license]&lt;/a&gt; \xE2\x80\x93 attempts\r\n\
      to implement QuickSort (??? WHY ???) using the object calisthenics rules. To each\r\n\
      his own I suppose. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Reviews from people who have read about (have not tried) object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://jimbarritt.com/non-random/2009/03/04/object-calisthenics-jeff-bay/\"&gt;Object\r\n\
      Calisthenics&lt;/a&gt; - \xE2\x80\x9CJeff explains in a great way a few principles and challenges the\r\n\
      reader to try them out in a rigorous way, just to see how it works out. This is a\r\n\
      great way to present it, its not saying \xE2\x80\x9CI know the right way and you must follow\r\n\
      the rules\xE2\x80\x9D, its suggesting that you should give it a chance and you might begin to\r\n\
      see some rewards, or \xE2\x80\x9CTry it, you might like it\xE2\x80\x9D.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://jimbarritt.com/non-random/2009/03/07/object-calisthenics-jeff-bay-part-2/\"&gt;Object\r\n\
      Calisthenics, Part 2&lt;/a&gt; \xE2\x80\x93 the author discusses how adding small methods eliminates\r\n\
      what people sometimes call \xE2\x80\x9Cmicro duplication\xE2\x80\x9D, and discusses the purpose of rule\r\n\
      #3 (No static methods other than factory methods) in further detail. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dubroy.com/blog/if-this-is-object-calisthenics-i-think-ill-stay-on-the-couch/\"&gt;If\r\n\
      this is object calisthenics, I think I\xE2\x80\x99ll stay on the couch&lt;/a&gt; \xE2\x80\x93 from the comments:\r\n\
      \xE2\x80\x9C\xE2\x80\xA6but if [object calisthenics is] an exercise, then you need to make sure that it\xE2\x80\x99s\r\n\
      working the right muscles, and not hurting your overall form. My belief is that these\r\n\
      exercises are not working the right muscles.\xE2\x80\x9D My counter-argument to the author is:\r\n\
      dude, you come from SmallTalk land. You have mastered the mama bear, (just-right!)\r\n\
      approach to object-oriented programming. Object calisthenics was written by a Java\r\n\
      programmer, for the (presumably) Java audience. Think of object calisthenics as the\r\n\
      papa bear object-oriented ruleset (too hot!) to counteract the standard baby bear\r\n\
      procedural-style programming practice (too cold!) . Once the baby bear programmers\r\n\
      have tried the papa bear\xE2\x80\x99s porridge, they\xE2\x80\x99ll\xE2\x80\xA6well\xE2\x80\xA6I sure hope they learn something.\r\n\
      Anyway, this article has good points \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://binstock.blogspot.com/2008/04/perfecting-oos-small-classes-and-short.html\"&gt;OO\xE2\x80\x99s\r\n\
      short classes and small methods&lt;/a&gt; \xE2\x80\x93 while the author endorses object calisthenics,\r\n\
      I\xE2\x80\x99m hesitant to quote him on anything, as he hasn\xE2\x80\x99t tried them out. In any event,\r\n\
      this article was linked from proggit and received lots of comments with a mix between\r\n\
      those expressing dubiousness, comments defending the \xE2\x80\x9Cjust try it\xE2\x80\x9D approach, and comments\r\n\
      completely misrepresenting the object calisthenics rules. &lt;a href=\"http://www.reddit.com/r/programming/comments/6gx7o/perfecting_oos_small_classes_and_short_methods/\"&gt;The\r\n\
      reddit comment thread is similar&lt;/a&gt;. Takeaway for me is, first, emphasize that the\r\n\
      rules make sense, and second, have a paper reference explaining the rules in further\r\n\
      detail. There will be misunderstanding, guaranteed. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;JACKPOT! Blog post citing research from SCIENCE! SCIENCE, whereupon we can\r\n\
      base our opinions, &lt;u&gt;as opposed to basing our opinions on other uninformed blog posts&lt;/u&gt;!\r\n\
      ggggggggggggggggggggggg-yes!&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dubroy.com/blog/method-length-are-short-methods-actually-worse/\"&gt;Are\r\n\
      short methods actually worse?&lt;/a&gt; \xE2\x80\x93 the author reviews the most commonly cited research\r\n\
      on method length (make sure to read the update for the updated conclusion). The author\r\n\
      also (separately, not influenced by the aforementioned research) introduces a concept\r\n\
      I can agree with: \xE2\x80\x9CBy making your methods shorter, you\xE2\x80\x99re just trading one kind of\r\n\
      complexity for another.\xE2\x80\x9D This I think is the #1 issue keeping people from adopting\r\n\
      object-oriented programming and the \xE2\x80\x9Cexplosion of objects\xE2\x80\x9D\xE2\x80\x94they can no longer find\r\n\
      their code once it\xE2\x80\x99s split between five objects, instead of the one object that did\r\n\
      EVERYTHING. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Related links&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://c2.com/cgi/wiki?RavioliCode\"&gt;Ravioli Code (from the original gangster\r\n\
      C2 wiki)&lt;/a&gt; \xE2\x80\x93 spaghetti is what happens when you have a procedural mess. Ravioli\r\n\
      is what happens when you have an object-oriented mess. In defense of XP, (next link\r\n\
      follows)\xE2\x80\xA6 \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://xprogramming.com/images/circles.jpg\"&gt;XP Practices diagram&lt;/a&gt;, from &lt;a href=\"http://xprogramming.com/xpmag/whatisxp\"&gt;What\r\n\
      is XP&lt;/a&gt; \xE2\x80\x93 \xE2\x80\x9CSimple Design\xE2\x80\x9D is a core element of XP. \xE2\x80\x9C[choosing the appropriate] Metaphor\xE2\x80\x9D\r\n\
      is also important to keep your code simple. Not mentioned in the XP diagram, but implied\r\n\
      is the concept of\xE2\x80\xA6 \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://c2.com/xp/YouArentGonnaNeedIt.html\"&gt;You Ain\xE2\x80\x99t Gonna Need It (YAGNI)\r\n\
      (from the original gangster C2 wiki)&lt;/a&gt; \xE2\x80\x93 don\xE2\x80\x99t add &lt;strong&gt;anything &lt;/strong&gt;to\r\n\
      your code for \xE2\x80\x9Cflexibility\xE2\x80\x9D, \xE2\x80\x9Cmodularity\xE2\x80\x9D, \xE2\x80\x9Cjust in case,\xE2\x80\x9D \xE2\x80\x9Csomething I will need\r\n\
      later.\xE2\x80\x9D YOU, your SOURCE CODE REPOSITORY, and your PROGRAM REQUIREMENTS are the most\r\n\
      flexible pieces. When you need something in your code later, add it later, at the\r\n\
      moment you need it. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/blockquote&gt;</content>\r\n  </entry>\r\n  <entry>\r\n    <title>Houston TechFest Coding Dojo</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/HoustonTechFestCodingDojo.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,3e51dff1-53df-4440-8a79-c7136e42e8d1.aspx</id>\r\n    <published>2010-06-14T08:47:25.3593582-07:00</published>\r\n    <updated>2010-06-14T08:47:25.3593582-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      This is a placeholder in case my session is accepted. I will post the details of the\r\n\
      problem, object calisthenics rules, the philosophy behind coding dojos, and GitHub\r\n\
      project details, all as needed. For the rest of you reading this, if you're interested\r\n\
      in helping out (again assuming the session is accepted), find me and I will gladly\r\n\
      accept help (especially during the session!). I would also like to do a public \"test\r\n\
      run\" of the object calisthenics rules before inflicting it upon the TechFest audience.\r\n\
      Let me know if you're interested.\r\n\
      </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Tech Diary, H1 2010</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/TechDiaryH12010.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,4fb7a472-40a1-4fb9-aea9-fd3e0fb4d1ea.aspx</id>\r\n    <published>2010-06-06T22:52:18.5497169-07:00</published>\r\n    <updated>2010-06-06T22:52:18.5497169-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n        </p>\r\n        <p>\r\n\
      Recently I\xE2\x80\x99ve been working with WPF on my first medium-or-large development project.\r\n\
      Am I allowed to acknowledge that I don\xE2\x80\x99t have seven thousand-plus (7000+) of these\r\n\
      big apps already under my belt, career-wise? I guess i just did. Anyway, it\xE2\x80\x99s been\r\n\
      fascinating. All these principles that you read about and that sound nice, but aren\xE2\x80\x99t\r\n\
      causing you pain in your 400LOC web part project, become ugly quickly on a large,\r\n\
      connected codebase. I\xE2\x80\x99ve now had the time to experience the following concepts personally.\r\n\
      Notably: \r\n\
      </p>\r\n        <ul>\r\n          <li>\r\n\
      The DRY principle, and how duplication in your code creates bugs. I think I\xE2\x80\x99ve seen\r\n\
      someone with more authority say this elsewhere, but, let me pretend to be the first\r\n\
      to say it: <strong>if you only focus on one thing to improve in your codebase, start\r\n\
      with removing duplication</strong>. Removing duplication has been eye-opening for\r\n\
      me. Once you remove all the duplication, then you can worry about restructuring the\r\n\
      code, but not until you\xE2\x80\x99ve removed the duplication.</li>\r\n          <li>\r\n\
      Allowing broken windows to remain broken leads to a downward spiral of code quality.\xC2\xA0\r\n\
      This is one of the opening sections of the Pragmatic Programmer book.</li>\r\n          <li>\r\n\
      The need for unit testing to ensure specific behaviors work as designed, and to help\r\n\
      you express intent, and to ensure that the code remains working down the line, when\r\n\
      everyone has forgotten what the code is supposed to do. Tests also break a lot (we\xE2\x80\x99re\r\n\
      working on making them more unit-ish).</li>\r\n          <li>\r\n\
      Integration testing and how, in conjunction with unit tests, it helps ensure your\r\n\
      system works, and allows large-scale restructurings (and allows dangerous merges using\r\n\
      the team suite source control product from the unnamed vendor). \r\n\
      </li>\r\n          <li>\r\n\
      The importance of continuous integration (and as much as possible, continuous deployment)\r\n\
      as a means of chaos control on a team project. \xE2\x80\x9CWho broke the build\xE2\x80\x9D actually matters\r\n\
      on a team. If you ask \xE2\x80\x9Cwho broke the build\xE2\x80\x9D on your one-man project, you get funny\r\n\
      looks because you\xE2\x80\x99re mumbling to yourself again.</li>\r\n          <li>\r\n\
      SOLID (particularly the Liskov substitution principle) and how it leads to more readable/easily-digestible/composable\r\n\
      code. \r\n\
      </li>\r\n          <li>\r\n\
      Object modeling and carefully selecting object responsibilities (which ties into SOLID)\r\n\
      and how drastically a seemingly-small change in the responsibilities of objects drastically\r\n\
      changes the way your code works and looks. I\xE2\x80\x99m still struggling with choosing the\r\n\
      right seams between object responsibilities.</li>\r\n          <li>\r\n\
      BDD or STDD or ATDD or whatever you\xE2\x80\x99re calling it \xE2\x80\x93 honestly we\xE2\x80\x99re not doing anything\r\n\
      like this on our project, but I\xE2\x80\x99m feeling the pain nonetheless. Part of the problem\r\n\
      is that Agile is hard to do 100% well, and part of doing a good job is putting away\r\n\
      the pride and not doing Agile 100% well in order to get the job done. I may sound\r\n\
      like a luddite here, and I\xE2\x80\x99m sorry, but the truth remains: if we have a skill gap\r\n\
      between the ideal Agile team, and us, and we need to deliver, we work at our current\r\n\
      skill level. No regrets. \xE2\x80\xA6Back to BDD. Another part of the problem is that BDD (and\r\n\
      unit testing) get into this fuzzy area where it\xE2\x80\x99s difficult for the unskilled practitioner\r\n\
      (read: me) to follow a rigid set of rules that will get me to the land of BDD goodness,\r\n\
      where our customers tell us a story of just the right size with just the right level\r\n\
      of detail, and we take those very same words and create a behavior test, and that\r\n\
      behavior test is written with just the write level of granularity, and it\xE2\x80\x99s all effortless\r\n\
      and the tooling is excellent and we review all the behaviors as a team, and lo and\r\n\
      behold! The customer spots a design bug just by reading the names of our behavior\r\n\
      tests, and we\xE2\x80\x99ve saved 5000 man hours because we caught it before it was implemented.\r\n\
      I\xE2\x80\x99m still not there. And neither is the team of which I\xE2\x80\x99m a member.</li>\r\n          <li>\r\n\
      Technologies are still frustrating, but not on the same level. I\xE2\x80\x99ve had to implement\r\n\
      one (1) ugly workaround involving a WPF data grid, and while it was unsavory, at least\r\n\
      it wasn\xE2\x80\x99t a complete brick wall. It\xE2\x80\x99s kind of funny how the grizzled veteran SP developer\r\n\
      within me jumps to create an ugly workaround that gets the job done, instantly, without\r\n\
      a moment of hesitation or regret. My lead asked me, \xE2\x80\x9Care you sure there\xE2\x80\x99s not a way\r\n\
      to fix the problem properly?\xE2\x80\x9D Because most people are trained to solve the problem,\r\n\
      the right way. Nope, I\xE2\x80\x99ll just do an ugly workaround and move on. \r\n\
      </li>\r\n          <li>\r\n\
      LightSpeed ORM works, but I have two major complaints: \r\n\
      <ul><li>\r\n\
      One: we are forced to inherit from a base class. This means that we have to carry\r\n\
      the LightSpeed DLL into every project in which our model objects are used (hint: all\r\n\
      of them). Also, arising from LightSpeed\xE2\x80\x99s ID column magic in the base class, is the\r\n\
      problem that you can\xE2\x80\x99t set an entity\xE2\x80\x99s ID field for unit tests without even deeper\r\n\
      magic. It\xE2\x80\x99s an ID column, I want to set it so I can test equality, without ugly hacks\r\n\
      or counterspells to counter the LightSpeed magic.</li><li>\r\n\
      Two: (and perhaps more importantly) using LightSpeed means that we can\xE2\x80\x99t use interfaces\r\n\
      in our model. <font color=\"#800080\">[removed 300 word attempt to summarize the problem.\r\n\
      Take my word for it, we can\xE2\x80\x99t do it easily, and we want to. Included in the 300 words\r\n\
      I deleted is the phrase \xE2\x80\x9Cby jove,\xE2\x80\x9D which I think needs to get more playtime. -ed]</font> This\r\n\
      is probably also why the POCO (plain old C# objects) crowd is so militant about POCO\r\n\
      itself\xE2\x80\x94this whole business about using a base class and relying on attributes to do\r\n\
      relationship mapping gets ugly in a hurry. Composability again\xE2\x80\x94it\xE2\x80\x99s important. \r\n\
      </li><li>\r\n\
      Three: some of the features are buggy. it\xE2\x80\x99s hard to say how much of the bugginess\r\n\
      is our misuse (PEBKAC error) or our unique scenario, but bugs kill productivity and\r\n\
      sap energy. I wish we had NHibernate instead of this paid product, and would not be\r\n\
      dismayed if we moved to the Entity Framework v37\xC2\xA0 or whatever number is assigned\r\n\
      for this year\xE2\x80\x99s release.</li></ul></li>\r\n          <li>\r\n\
      MVVM is much better than not having MVVM. I\xE2\x80\x99ve seen code that uses the codebehind\r\n\
      approach when an MVVM approach would have worked, and the MVVM code is SO MUCH EASIER\r\n\
      (!!!)!!)!(!)!)!(!(!) to figure out and modify. Craziness. Small note: once I\xE2\x80\x99m beyond\r\n\
      the remedial MVVM stage, I need to venture out and see what other presentation models\r\n\
      exist. Later. Not now. \r\n\
      </li>\r\n          <li>\r\n\
      I\xE2\x80\x99m sure we could be doing MVVM better, but it\xE2\x80\x99s a small fry issue in the grand scheme\r\n\
      of things. It\xE2\x80\x99s not the root cause of any of our pain, though I\xE2\x80\x99m nervous about holding\r\n\
      child viewmodels, and then children of the child viewmodels, and so on. Also don\xE2\x80\x99t\r\n\
      ask us whether we\xE2\x80\x99re viewmodel-first or view-first, we\xE2\x80\x99re more a federation of fiercely\r\n\
      independent states, like the united federation of planets, only with views and viewmodels.\r\n\
      We are unique and we make our own decisions, and you can make your own decisions.\r\n\
      Vulcans are strictly ViewModel-first.</li>\r\n          <li>\r\n\
      The Prism event aggregator is just beautiful. Maybe I\xE2\x80\x99m biased, because I\xE2\x80\x99m comparing\r\n\
      it to not using an event aggregator at all, and attempting to cobble together an event\r\n\
      notification solution using property change notifications on child and (great?)-grandchild-viewmodels.\r\n\
      I assure you the previous sentence gives me NIGHT TERRORS just thinking about it.\r\n\
      Trust me on this. It\xE2\x80\x99s like trying to follow code written by Macguyver\xE2\x80\x94clever, and\r\n\
      gets the work done, but cobbled together with bailing wire, a bar of soap, and a lit\r\n\
      cigar. I should make a law out of this: You Don\xE2\x80\x99t Want To Maintain Macguyver\xE2\x80\x99s Codebase.\r\n\
      Peter\xE2\x80\x99s Law #59 \xC2\xA92010, All Rights Reserved, \xC2\xAE, TM, Patent Pending.</li>\r\n          <li>\r\n\
      Unity is a problem, because it doesn\xE2\x80\x99t allow us to pass parameters into the constructor\r\n\
      at runtime (think data) while injecting the rest of the dependencies (think services).\r\n\
      I\xE2\x80\x99m somewhat new to the fanciness of IoC tools, but I\xE2\x80\x99m pretty sure on this\xE2\x80\x94the other\r\n\
      tools allow you to do what I\xE2\x80\x99m asking. Unity DOES allow us to work around the problem\r\n\
      but\xE2\x80\xA6without going into a long boring exposition on code via a blog post\xE2\x80\xA6the workaround\r\n\
      is not ideal. It\xE2\x80\x99s hard to tell at this point whether we\xE2\x80\x99re misusing Unity or if Unity\r\n\
      is limiting us. I\xE2\x80\x99m going to say both\xE2\x80\xA6but what happens when we stop misusing the tool\r\n\
      and are at that point restricted only by its limitations? Well, we\xE2\x80\x99ll get there when\r\n\
      we get there. We\xE2\x80\x99re not there yet.</li>\r\n          <li>\r\n\
      Gathering requirements is still a problem, and it turns out business analysis skills\r\n\
      are still valuable. The sky also remains blue.</li>\r\n          <li>\r\n\
      I\xE2\x80\x99m not a fan of developing for the third-party grid we use, mostly because it reminds\r\n\
      me of SharePoint, in how if you stretch the grid\xE2\x80\x99s functionality in ways it was not\r\n\
      designed to stretch, you end up in a world of hurt. And, it\xE2\x80\x99s not a true WPF citizen,\r\n\
      which affects a lot of things. Grids are the root of all evil. Strike that, the LOVE\r\n\
      OF grids is the root of all evil.</li>\r\n          <li>\r\n\
      We desperately need end-to-end testing for WPF. And by we, I mean me. I\xE2\x80\x99ve heard <a href=\"http://white.codeplex.com/\">Project\r\n\
      White</a> works but is slow, but I haven\xE2\x80\x99t heard any mention of anyone using it. Allegedly\r\n\
      VS2010 also has UI automation facilities. Hopefully there\xE2\x80\x99s a solution for this soon,\r\n\
      and specifically, hopefully someone else invests <strong>their </strong>time, not\r\n\
      mine, figuring all this out.</li>\r\n          <li>\r\n\
      I finally shelled out the money for R#. For code construction, you can probably do\r\n\
      without R# and just use the built-in Visual Studio tooling (which I did for the longest\r\n\
      time). But, on our medium-ish sized project, the navigation features alone are worth\r\n\
      the price. I\xE2\x80\x99ve also noticed that I seem to be the only person in my room that uses\r\n\
      both a) the navigation menu (CTRL+SHIFT+G IntelliJ bindings) and b) the refactor menu\r\n\
      (CTRL+SHIFT+R). \r\n\
      </li>\r\n          <li>\r\n\
      I\xE2\x80\x99m also frustrated by how R#\xE2\x80\x99s intellisense gets in the way of typing more often\r\n\
      that vanilla Visual Studio.\xC2\xA0 When attempting to close R#\xE2\x80\x99s intellisense, If in\r\n\
      doubt, hit ESC five or seven times. Then wait a few seconds, then hit it another sixteen\r\n\
      or seventeen times, to be sure.</li>\r\n          <li>\r\n\
      Third crucial R# keystroke: SHIFT+ALT+L \xE2\x80\x93 works almost like CTRL+ALT+L, but better.\r\n\
      Having just typed these words, I know how dumb the last sentence reads, and I\xE2\x80\x99m sorry,\r\n\
      but there\xE2\x80\x99s no improving it. Either you\xE2\x80\x99re feeling the pain of CTRL+SHIFT+L, and discovering\r\n\
      SHIFT+ALT+L fills you with great joy\xE2\x80\xA6or you have no idea what I\xE2\x80\x99m talking about.</li>\r\n          <li>\r\n\
      R# 5.0 feature \xE2\x80\x93 update namespaces to match folders, <strong>or</strong> update folders\r\n\
      to match namespaces \xE2\x80\x93 BOTH OPERATIONS WORK IN BULK! YESSSSSSSSSSSSSssssssssssssssssssss.\r\n\
      Also, related, you can move entire folders at once. That scary namespace change is\r\n\
      no longer scary.</li>\r\n        </ul>\r\n        <h3>Takeaways\r\n\
      </h3>\r\n        <p>\r\n\
      I don\xE2\x80\x99t know if any of you made it all the way through the long list, but even for\r\n\
      those of you who got a flavor of what the updates are\xE2\x80\x94for the most part these things\r\n\
      that have held my attention for the last several months tend toward fundamental, classic\r\n\
      issues. \r\n\
      </p>\r\n        <p>\r\n\
      This is my first time to blog directly about work, and I\xE2\x80\x99m trying to toe the line\xE2\x80\x94I\r\n\
      don\xE2\x80\x99t want to turn this into a \xE2\x80\x9Cwinning a work argument via my blog\xE2\x80\x9D blog entry. You\r\n\
      know\xE2\x80\x94when you argue about something dumb at work, summarily lose the argument, then\r\n\
      later, still fuming, blog about how you would totally make Data human instead of give\r\n\
      Geordi back his eyesight, totally, and how any dissenting opinions are wrong and weak.\r\n\
      Then shift backwards in your beanbag, in a sort of smug, self-satisfied way. You\xE2\x80\x99ve\r\n\
      won! Sweet victory. Oh yes, sweet sweet internet victory.\r\n\
      </p>\r\n        <p>\r\n\
      Previously I\xE2\x80\x99ve been the lone ranger, able to resolve arguments with myself peacably\r\n\
      and without a public stir. But now I\xE2\x80\x99m on a team of lone rangers\xE2\x80\xA6a loosely united\r\n\
      federation of lone rangers. Or planets. The point is, there\xE2\x80\x99s a bunch of us. And some\r\n\
      of us speak fluent Klingon. I\xE2\x80\x99ve got to watch myself a little more now, to make sure\r\n\
      I\xE2\x80\x99m not rehashing work arguments, or posting things that we need to \xE2\x80\x9Ckeep in the family.\xE2\x80\x9D \r\n\
      </p>\r\n        <p>\r\n\
      Hopefully the new content (content, not the jokes) is found useful by someone besides\r\n\
      myself.\r\n\
      </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Linkblogging: 2009 Q4</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/Linkblogging2009Q4.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,b1704482-daad-4139-b332-67e16eb53c6c.aspx</id>\r\n    <published>2010-03-17T20:54:58.6673507-07:00</published>\r\n    <updated>2010-03-17T20:54:58.6673507-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"html\">&lt;p&gt;\r\n\
      Hello! I'm Peter and I'm here to present another sweet, sweet linkblog post. I've\r\n\
      done this a few times before (&lt;a href=\"http://www.pseale.com/blog/FirstIrregularlyScheduledLinkblog.aspx\"&gt;[1]&lt;/a&gt; &lt;a href=\"http://www.pseale.com/blog/LinkblogTheSequel.aspx\"&gt;[2]&lt;/a&gt;).\r\n\
      My goal with these linkblog posts (which are becoming a habit) is to expose you to\r\n\
      new concepts, point you to useful resources, and wow you with a dazzling laser show.\r\n\
      I've pulled together anything tangentially related to software development in the\r\n\
      .NET space, salted each link with commentary, and grouped them into sections. I'm\r\n\
      not an authority on most of the articles to which I link.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Also you may be noticing that this is the \xE2\x80\x9CQ4 2009\xE2\x80\x9D edition of the linkblog, and are\r\n\
      perhaps concerned that your blog aggregator is some 3-6 months out of date, or that\r\n\
      you\xE2\x80\x99ve somehow mistakenly traveled backwards through time. Nope. I refuse to change\r\n\
      the post title out of principle. It\xE2\x80\x99s important to stick to your principles.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Community events&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      April 30th-May 2nd&amp;#8212; &lt;a title=\"http://www.altnethouston.com/\" href=\"http://www.altnethouston.com/\"&gt;http://www.altnethouston.com/&lt;/a&gt; open\r\n\
      spaces event. It\xE2\x80\x99s going to be intense! It\xE2\x80\x99s going to be &lt;a href=\"http://www.yaledailynews.com/opinion/staff-columns/2007/02/08/the-astronaut-and-the-diaper-a-sordid-tale/\"&gt;don-your-adult-diapers\r\n\
      intense (you won\xE2\x80\x99t want to leave, for &lt;em&gt;any reason&lt;/em&gt;)!&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.virtualaltnet.com/\"&gt;MONTHLY: Virtual ALT.NET&lt;/a&gt; at &lt;a href=\"http://snipr.com/virtualaltnet\"&gt;http://snipr.com/virtualaltnet&lt;/a&gt; -\r\n\
      meetings are held on Wednesday nights American time; for meetings held in your continent's\r\n\
      time zone check the website. Ok, admittedly I'm &lt;a href=\"http://twitter.com/thedavidmorton\"&gt;pulling\r\n\
      a Morton&lt;/a&gt;* by promoting an event I'm not attending (I haven't made the time for\r\n\
      it recently, no excuses), but I hold the opinion that these LiveMeeting-based user\r\n\
      group events provide more value than than the local .NET user group meeting. What's\r\n\
      also valuable is that Virtual ALT.NET meetings are recorded and &lt;a href=\"http://www.virtualaltnet.com/Recordings\"&gt;posted\r\n\
      for on-demand viewing&lt;/a&gt;. \r\n\
      &lt;br /&gt;\r\n\
      &lt;font size=\"1\"&gt;*ask him about it&lt;/font&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Um, hmm, I guess it\xE2\x80\x99s a little late to post a notice? &lt;a href=\"http://www.lostechies.com/blogs/johnteague/archive/2009/11/16/pablo-s-fiesta-open-space-conference-in-austin-tx.aspx\"&gt;February\r\n\
      26th-28th - Los Techies' Fiesta - open spaces event in Austin, Texas&lt;/a&gt; - I've paid\r\n\
      the down payment and am making my monthly payments toward the exorbitant* registration\r\n\
      fee, and am looking forward to attending. This will not necessarily be an &amp;quot;ALT.NET\r\n\
      event&amp;quot;; instead, the three areas of focus are Sharpening the Saw, Multi-platform,\r\n\
      and Selling quality as a feature. This will be a good one. I'd like to rally early\r\n\
      support for a 3 hour plus-long coding dojo, also I'd like to rally support for &lt;em&gt;&lt;u&gt;someone\r\n\
      else&lt;/u&gt;&lt;/em&gt; to run said dojo. \r\n\
      &lt;br /&gt;\r\n\
      &lt;font size=\"1\"&gt;*yes I'm joking about the price&lt;/font&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://twitter.com/houstonrb\"&gt;Houston Ruby meetup&lt;/a&gt; - it exists, believe\r\n\
      it. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pyhou.org/\"&gt;PyHou&lt;/a&gt; - it exists, believe it. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://txjs.eventbrite.com/\"&gt;TXJS&lt;/a&gt; \xE2\x80\x93 I only know that this upcoming weekend\r\n\
      conference exists, and that the \xE2\x80\x9CJS\xE2\x80\x9D stands for JavaScript.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://frazzleddad.blogspot.com/2009/09/running-event-on-cheap.html\"&gt;Meta:\r\n\
      Running an Event on the Cheap&lt;/a&gt; - by Jim Holmes, who has done this very thing. Practical\r\n\
      advice gleaned from his experience.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Online video lectures, screencasts and workshops, or: Why conferences are\r\n\
      useless as a learning vehicle&lt;/strong&gt; - okay, admittedly I haven't made the time\r\n\
      to watch any of these, but I think that, if I ever WERE to make the time, this is\r\n\
      where I'd start. I'm almost making this list as a to-do for myself&amp;#8212;hey Peter,\r\n\
      check these out later! Also to be clear, I don't think conferences are useless, they\xE2\x80\x99re\r\n\
      just relatively useless\xE2\x80\xA6for learning things. The point here isn't to hate on conferences,\r\n\
      instead it's to say hey! Here's all these conference feeds with hundreds of session\r\n\
      videos. We're to the point where I can say &amp;quot;hundreds.&amp;quot; This is new. We weren't\r\n\
      able to say \xE2\x80\x9Chundreds of free conference videos\xE2\x80\x9D just a few years ago.\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.virtualaltnet.com/Recordings\"&gt;Virtual ALT.NET recordings&lt;/a&gt; -\r\n\
      some dynamite in-depth sessions can be found here. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.summerofnhibernate.com/\"&gt;Summer of NHibernate&lt;/a&gt; - 14 screencasts\r\n\
      taking you through NHibernate. This was the summer of 2008. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Norwegian Developer's Conference videos [visit links below]. Tracks include Connected\r\n\
      Systems, Enterprise Applications, General Development, Test Driven Development, Software\r\n\
      Engineering, Parallel Programming: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://arkiv.ndc2009.no/agenda.aspx?cat=1071&amp;amp;id=1813\"&gt;Day 1&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://arkiv.ndc2009.no/agenda.aspx?cat=1071&amp;amp;id=1813&amp;amp;day=3727\"&gt;Day\r\n\
      2&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://arkiv.ndc2009.no/agenda.aspx?cat=1071&amp;amp;id=1813&amp;amp;day=3728\"&gt;Day\r\n\
      3&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://oredev.org/videos\"&gt;\xC3\x98redev 2009 videos&lt;/a&gt; (incomplete; more are available\r\n\
      each week) - videos for the Agile and Mobile (Mobile meaning Android+iPhone, not Windows\r\n\
      Mobile) tracks. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://microsoftpdc.com/Videos\"&gt;Microsoft's Professional Developer Conference\r\n\
      (PDC) videos&lt;/a&gt; - there's something close to 100 high-definition quality session\r\n\
      videos recorded here, so even if you're uninterested in 95% of what you see, you'll\r\n\
      still find something you DO like. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a title=\"http://www.asp.net/learn/\" href=\"http://www.asp.net/learn/\"&gt;http://www.asp.net/learn/&lt;/a&gt; -\r\n\
      quality videos targeting ASP.NET. And, specifically&amp;hellip; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.asp.net/learn/mvc-videos/\"&gt;the MVC storefront series of videos&lt;/a&gt; by\r\n\
      Rob Conery - wherein he tackles abstract concepts by example via the storefront application.\r\n\
      I think this is a great approach to learning; it's mixes the abstract and the practical.\r\n\
      Okay, I'll be honest, I just watched the one video on BDD and liked it, so I\xE2\x80\x99m kind\r\n\
      of extrapolating. But I like the &lt;strong&gt;&lt;em&gt;idea&lt;/em&gt;&lt;/strong&gt; of the approach, and\r\n\
      am interested to see more. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a title=\"http://www.tekpub.com/\" href=\"http://www.tekpub.com/\"&gt;http://www.tekpub.com/&lt;/a&gt; -\r\n\
      Rob Conery has opened a predominantly for-pay screencast service. There are some free\r\n\
      videos here, but the idea is that by charging for his videos he can invest more time\r\n\
      editing and can hire better quality guests. I'll state for the record that if you\r\n\
      have the time and need to learn about a subject he covers, this is totally worth whatever\r\n\
      pittance you have to pay. With all that said, I haven't bought any of his screencasts\r\n\
      yet. Yes, I'm &amp;quot;pulling a Morton*&amp;quot; again. \r\n\
      &lt;br /&gt;\r\n\
      &lt;font size=\"1\"&gt;*see above&lt;/font&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.infoq.com/\"&gt;Presentations hosted on InfoQ&lt;/a&gt; [right sidebar] \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Learning&lt;/strong&gt; \xE2\x80\x93 surprisingly similar advice from different worlds: advice\r\n\
      from a SharePoint MVP and advice from the guy &lt;a href=\"http://laribee.com/bag-of-tricks\"&gt;who\r\n\
      just blogged about his slide whistle&lt;/a&gt;.\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.officezealot.com/mauro/archive/2009/09/05/21598.aspx\"&gt;Why I'm\r\n\
      an obsessive learner&lt;/a&gt; - summarized by &lt;font color=\"#800080\"&gt;&amp;quot;Obsessive learning\r\n\
      isn't about being a super geek; it's about discipline and investing in yourself and\r\n\
      staying focused on the areas where you want to stay &amp;quot;essential&amp;quot;&lt;/font&gt;.\r\n\
      I'm not sure what to say about this except that discipline is important. Duh, I know,\r\n\
      but just keep it in mind before you add yet another technical book to your ever-growing,\r\n\
      never-diminishing book queue or spend all your time on easy listening, edutainment\r\n\
      podcasts. All's well and good, and some things make learning easier than others, but &lt;strong&gt;for\r\n\
      the most part there are no shortcuts&lt;/strong&gt;&amp;#8212;it comes down to discipline. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://codebetter.com/blogs/david_laribee/archive/2009/09/08/the-secret-sauce.aspx\"&gt;The\r\n\
      secret sauce&lt;/a&gt; - I find it interesting that Mauro (link immediately above) and Dave\r\n\
      Laribee are in violent agreement on the importance of discipline. &lt;font color=\"#800080\"&gt;&amp;quot;Learning\r\n\
      and discipline are the two halves of continuous improvement. In short: live what you\r\n\
      learn, act on your new knowledge and skill.&amp;quot;&lt;/font&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;News about news aggregators &lt;/strong&gt;- today's trend is filtering the news\r\n\
      aggregators themselves -&amp;#160; aggregating the aggregators, meta-aggregating, so to\r\n\
      speak. Which makes the following a meta-aggregators list of&amp;#160; of sorts. This is\r\n\
      me showing restraint. I'd make a joke here, but I'm not going to. Meta-aggregators\r\n\
      list. We could have a discussion about the meta-aggregators list. But we won't.\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://hackerhackernews.com/\"&gt;Hacker Hacker News&lt;/a&gt; - filtering out the\r\n\
      politics/lifestyle/news/everything-that-is-not-programming from news.ycombinator.com.\r\n\
      Unfortunately whoever was running this, stopped.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.foldl.org/\"&gt;The Left Fold&lt;/a&gt; - weekly digest of actual programming\r\n\
      articles found on programming.reddit.com, with a smattering of commentary. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.reddit.com/r/coding/\"&gt;coding.reddit.com&lt;/a&gt; - with a strict policy\r\n\
      of programming-related discussions. This community might even survive!&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Object-oriented development and composability&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.rebol.com/article/0425.html\"&gt;The problem with OOL is not the OO&lt;/a&gt; -\r\n\
      an interesting perspective that separates OOP concepts from OO language constructs.\r\n\
      A lot of us (me) have been exposed only to OOP concepts through Java/C#/C++ and are\r\n\
      blind to such issues. Or maybe this guy is crazy and hallucinating, I can't tell.\r\n\
      At times I think I should shut down the news aggregators entirely and just pretend\r\n\
      articles like this don't exist, because reading these &amp;quot;everything you know about\r\n\
      X is wrong&amp;quot; articles contribute greatly to code paralysis. \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.reddit.com/r/programming/comments/9gdp7/the_problem_with_ool_object_oriented_languages_is/\"&gt;Counter-[counter-]arguments\r\n\
      at Reddit&lt;/a&gt; \xE2\x80\x93 it\xE2\x80\x99s entirely possible the original poster is just a &lt;a href=\"http://www.pseale.com/blog/\"&gt;crank\r\n\
      with a blog&lt;/a&gt;.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Test-driven development, unit testing, automated testing &lt;/strong&gt;- this category\r\n\
      is the catch-all for posts agonizing over the nitty-gritty details of effective unit\r\n\
      testing. Because effective unit testing isn't a skill that spontaneously appears in\r\n\
      your brain the first time you reference NUnit.Framework.dll in Visual Studio. Anyway.\r\n\
      As a result of my fumbling experience, I have found the following links &lt;strong&gt;&lt;font color=\"#ff8000\"&gt;completely\r\n\
      and absolutely fascinating!&lt;/font&gt;&lt;/strong&gt; I'm not crazy! These things are dy-no-mite,\r\n\
      particularly because they go over arguments I've witnessed at coding dojos or arguments\r\n\
      I've had with myself. This stuff is fascinating; I'm not crazy!\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://codebetter.com/blogs/aaron.jensen/archive/2009/10/05/a-recent-conversation-about-mspec-practices.aspx\"&gt;A\r\n\
      recent conversation about MSpec practices&lt;/a&gt; - at some point I attempted to follow\r\n\
      DRY in my test project, just to see what happens. MSpec supports DRY because it allows\r\n\
      you to inherit contexts via class inheritance. But, Aaron talks here about his preference\r\n\
      for limiting the use of contexts unless absolutely necessary. In this post his advice\r\n\
      tends to grow closer to &amp;quot;classicist TDD&amp;quot; advice. There are nuances. Also\r\n\
      I'll use the word &amp;quot;nuance&amp;quot; in every link to follow.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Agile/Post-Agile&lt;/strong&gt; - note I define Post-Agile as coming to grips with\r\n\
      the reality of failed Agile, and attempting to learn from these failures.\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.c2.com/cgi/wiki?HowToPissOffYourPair\"&gt;How to piss off your pair&lt;/a&gt; -\r\n\
      pair programming anti-patterns, collected on the original C2 wiki from the collective\r\n\
      experience. If you're a cynic, you'll read this as a list of reasons why pair programming\r\n\
      is worthless. If you're just trying to improve, this is a good (and hilarious) way\r\n\
      to avoid problems. Example anti-pattern: \r\n\
      &lt;br /&gt;\r\n\
      &lt;font color=\"#800080\"&gt;Complain &lt;em&gt;before&lt;/em&gt; your partner does something wrong.\r\n\
      Create elaborate theories about their failings. Never forgive, never forget.&lt;/font&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Procedural graphics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.cgl.uwaterloo.ca/~csk/projects/escherization/\"&gt;Escherization&lt;/a&gt; -\r\n\
      code to help you tessellate anything, including portraits of MC Escher himself (or:\r\n\
      Escherizing Escher, or: meta-Escherizing). \r\n\
      &lt;br /&gt;\r\n\
      &lt;img border=\"0\" alt=\"image\" src=\"http://www.pseale.com/blog/content/binary/WindowsLiveWriter/Linkblogging2009Q4_11B9F/image_2f3c6dd5-07c5-446d-85ca-1230fea8b875.png\" width=\"200\" height=\"200\" /&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Hilarity, or links I couldn't fit into any other category&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://typicalprogrammer.com/?p=8\"&gt;Abject-oriented programming&lt;/a&gt; - have\r\n\
      you ever heard someone attempt to struggle through answering an interview question\r\n\
      they have no idea how to answer? Where they keep digging themselves deeper into the\r\n\
      hole? E.g. &amp;quot;Modularity: A modular program is one that is divided into separate\r\n\
      files that share a common header comment block.&amp;quot; Let the hilarity ensue! \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://codebetter.com/blogs/james.kovacs/archive/2009/10/14/releasing-psake-v1-00-amp-psake-v2-00.aspx\"&gt;Releasing\r\n\
      psake v1.00 and psake v2.00&lt;/a&gt; - PSake is the PowerShell build tool. It\xE2\x80\x99s easier\r\n\
      to learn how to do something in PowerShell than to fumble around with the NAnt and\r\n\
      NAnt Contrib and all the XML-ness. It\xE2\x80\x99s not that hard to try out PSake, so if you\xE2\x80\x99re\r\n\
      experiencing ANY pain with NAnt and MSBuild, go for it. Perhaps the best way to learn\r\n\
      is to look at others' scripts: \r\n\
      &lt;/li&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://ayende.com/Blog/archive/2009/08/30/on-psake.aspx\"&gt;Ayende's psake script&lt;/a&gt; -\r\n\
      Ayende used the Boo Build System previously \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blog.jpboodhoo.com/InterestedInTradingInYourNAntBuildsATeaser.aspx\"&gt;JP\r\n\
      Boodhoo's psake script&lt;/a&gt; - in a bit of irony, JP uses Rake now.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/ul&gt;</content>\r\n  </entry>\r\n  <entry>\r\n    <title>SharePoint 2007 Posts: Recap</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/SharePoint2007PostsRecap.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,ad67f0be-08e4-4ef0-8283-4f12a1cb8d1a.aspx</id>\r\n    <published>2009-10-28T00:01:27.4456038-07:00</published>\r\n    <updated>2009-10-28T00:01:27.4456038-07:00</updated>\r\n    <category term=\"SharePoint\" label=\"SharePoint\" scheme=\"http://www.pseale.com/blog/CategoryView,category,SharePoint.aspx\" />\r\n    <content type=\"html\">&lt;p&gt;\r\n\
      I think now's a good time to close out the SharePoint tag on this blog, marking the\r\n\
      end of SharePoint 2007-focused content. I'm creating this post as a sort of table\r\n\
      of contents for my SharePoint content. I'll attempt to group posts into themes and\r\n\
      then editorialize. Some of my earlier posts I'll even recant! Here goes.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Things I think anyone (SharePoint community or otherwise) would find interesting\r\n\
      or useful&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/ThinkingCreatively.aspx\"&gt;Thinking Creatively&lt;/a&gt; -\r\n\
      what I consider possibly my best SharePoint-related post, because it contains transferable\r\n\
      concepts. The idea is that we as developers must go beyond our traditional code monkey\r\n\
      role and do some critical thinking while specifying/designing solutions to problems.\r\n\
      This is illustrated with an excellent story told during an Agile conference session.\r\n\
      Also I recommend the linked Agile Toolkit podcast episode that inspired my post.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/TheSharePointPythonConnection.aspx\"&gt;The SharePoint-Python\r\n\
      connection&lt;/a&gt; - if anyone ever tells you \"SharePoint was written in Python\", I apologize.\r\n\
      Anyway, misquoting aside, this is a fun little bit of history.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointFarmsAndMySite.aspx\"&gt;Golden Rule of\r\n\
      Troubleshooting&lt;/a&gt; - I misdiagnosed an error, posted the erroneous diagnosis to my\r\n\
      blog, and to save face hurriedly changed the contents of this post to be about troubleshooting.\r\n\
      The golden rule of troubleshooting, for those of you too lazy to click through: &lt;strong&gt;beware\r\n\
      the invisible proxy&lt;/strong&gt;! It takes many forms! It strikes silently! Everyone will\r\n\
      think you're crazy when you tell them network gremlins are eating your incoming packets,\r\n\
      but leaving your outgoing packets alone!&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Hilarity&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/WelcomeToSharePoint.aspx\"&gt;Welcome to SharePoint&lt;/a&gt; -\r\n\
      a real-life nightmare scenario I encountered while troubleshooting a SharePoint 2003\r\n\
      \"desktop issue.\" It turns out, the 15 pages of IE settings + Active Directory group\r\n\
      policy + various Office ActiveX controls + virus scanners + IE version mix + network\r\n\
      security appliances + Kerberos + firewalls + IE Zone settings + DNS/DHCP issues +\r\n\
      AD replication issues + expired password issues + routing errors + spammy IE toolbars&amp;hellip;any\r\n\
      and all of these things, if out of whack, show the same \"username/password\" dialog.\r\n\
      The post was a joke, but after troubleshooting every flavor of this problem, it gets\r\n\
      to you a little. Anyway, welcome!&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/WhatsWrongWithThisPicture.aspx\"&gt;What's wrong with\r\n\
      this picture?&lt;/a&gt; - mildly amusing scenario involving disaster recovery documentation.\r\n\
      Trust me, this is as hilarious as disaster recovery documentation is going to get.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/STSADMEXESpotTheTypo.aspx\"&gt;STSADM: Spot the typo&lt;/a&gt; -\r\n\
      a lament for the endash. This is as much hilarity as you'll find on the topic of Word\r\n\
      AutoCorrect.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Frustration&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/AngryAtCAML.aspx\"&gt;Angry at CAML&lt;/a&gt; - I remember\r\n\
      writing this post after a three days of wrestling with GetListItems, most of which\r\n\
      was wasted learning idiosyncrasies. I then deleted most of the unhelpful angry comments,\r\n\
      so what remains is the milder parts. This was my first \"surprised by how difficult\r\n\
      it is compared to how easy everyone makes it sound\" experience. Visit for a link to\r\n\
      the &lt;a href=\"http://www.dba-oracle.com/redneck.htm\"&gt;greatest Oracle DBA ever&lt;/a&gt;.\r\n\
      Or visit for my graphical representation of the MSDN Rage Meter.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/ImLikeAngryAtNumbers.aspx\"&gt;I'm like, angry at\r\n\
      numbers&lt;/a&gt; - in burnout mode, and ranting. If there's anything to take away from\r\n\
      this, it's a) keep a sense of perspective (i.e. this stuff isn't important), and b)\r\n\
      don't invest time in new Microsoft frameworks as a rule.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/DisposingSharePointObjectsSurvivalMode.aspx\"&gt;Disposing\r\n\
      SharePoint Objects: Survival Mode&lt;/a&gt; - this was a tipping point wherein I realized\r\n\
      that no one does SharePoint development properly, even most of the MVPs. Keith eventually\r\n\
      discovered and wrote down all of the disposal rules, and from there someone at Microsoft\r\n\
      released SPDisposeCheck (which I believe covers most scenarios). Anyway, the subject\r\n\
      of disposing is now a moot point&amp;#8212;the more interesting bit is that, as of two\r\n\
      full years after RTM, we had incorrect guidance as to how to dispose ~2MB objects\r\n\
      on web servers typically running a maximum ~1000MB in the worker process. Sort of\r\n\
      an eye-opener.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/BeyondTechnicalChallenges.aspx\"&gt;Beyond technical\r\n\
      challenges&lt;/a&gt; - rant, wherein I close the SharePoint 2007 portion of my blog (oops&amp;#8212;the\r\n\
      ban lasted a full month anyway, until I couldn't hold out). There are some takeaways\r\n\
      here, notably that everyone's struggling with SharePoint, including the MVPs and \"experts.\"\r\n\
      I make the statement that every person working with SharePoint should look beyond\r\n\
      their immediate technical challenge and ask, is SharePoint the right solution? Also,\r\n\
      I challenge the assumption that SharePoint is a good developer platform.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;SharePoint as an app dev platform&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      [also referenced in the \"useful\" section above] &lt;a href=\"http://www.pseale.com/blog/ThinkingCreatively.aspx\"&gt;Thinking\r\n\
      Creatively&lt;/a&gt; - what I consider possibly my best SharePoint-related post, because\r\n\
      it contains transferable concepts. The idea is that we as developers must go beyond\r\n\
      our traditional code monkey role and do some critical thinking while specifying/designing\r\n\
      solutions to problems. This is illustrated with an excellent story told during an\r\n\
      Agile conference session. Also I recommend the linked Agile Toolkit podcast episode\r\n\
      that inspired my post.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/ArgueWithYourCustomer.aspx\"&gt;Argue with your customer&lt;/a&gt; -\r\n\
      I think I posted this after failing to convince my customer to go with less SharePoint\r\n\
      customization and more out-of-the-box features. I still get a lot of pushback when\r\n\
      I try to prevent SharePoint customizations. If there's something to take away from\r\n\
      this, especially as a non-SharePoint developer, it's that not all features cost the\r\n\
      same, and not all customizations cost the same. Making the relative costs clear to\r\n\
      your customer should (&lt;em&gt;should!&lt;/em&gt;) encourage them to avoid the more costly customizations.\r\n\
      I'm always shocked at how someone will tell you \"no, we need it to work exactly as\r\n\
      I've told you!\" and then turn around settle for a vendor product that does about half\r\n\
      of what they want, but costs more.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/80ThenStop.aspx\"&gt;80%, then stop&lt;/a&gt; - wherein\r\n\
      I tell a story about my experience with the Pareto principle as it applies to SharePoint\r\n\
      solutions. Also: you don't have to write your apps in SharePoint! If it doesn't save\r\n\
      time, and you don't know of any benefit you'll gain from using SharePoint, then why\r\n\
      are you attempting to use it?&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/EstimatingSharePointTasksCryForHelp.aspx\"&gt;Estimating\r\n\
      SharePoint tasks: cry for help&lt;/a&gt; - scary realization that I'm still unable to estimate\r\n\
      how long something's going to take, primarily because I'm constantly blazing new (new\r\n\
      to me?) trails in the SharePoint API, making bad assumptions about its behavior, triggering\r\n\
      bugs, and running into unexpected limitations. Any of these things can cause multi-day\r\n\
      delays. It does get better if you're writing a second or third app that deals with\r\n\
      the same part of the API.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Framework limitations or errors&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePoint2007HowManyIsTooManyItems.aspx\"&gt;How\r\n\
      many is too many [SharePoint list] items?&lt;/a&gt; - the SharePoint whitepaper announcing\r\n\
      the 2000 (now 3000) item limit per container was something of a blow. To say it clearly:\r\n\
      this limitation prevents you from using OOB lists for anything with real traffic.\r\n\
      There are over 3000 days in 10 years, so at 1 item added a day, you're running into\r\n\
      the recommended limit. Since then I've seen some crazy errors with large lists, mostly\r\n\
      revolving around OutOfMemory errors, crawl errors, using PRIME-derived features on\r\n\
      the lists, exporting to Excel, breaking the Grid-view, and so on. So the list size\r\n\
      limitation is real, if not a \"hard limit.\"&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointWorkflowNuttinessVolume1.aspx\"&gt;SharePoint\r\n\
      Workflow Nuttiness, Volume 1&lt;/a&gt; - My initial foray into SharePoint Workflow development\r\n\
      ended in pain, where I had to scrap an entire approach because Workflow doesn't support\r\n\
      state machines with replicator activites. Then I read Ayende's JFHCI series and it\r\n\
      poisoned me forever against WF. I wonder now what problem Workflow attempts to solve,\r\n\
      and why don't we just use a pure code solution instead? Note that Ayende wrote a book\r\n\
      on DSLs (Workflow is a form of a DSL), so don't just pretend he's some crank with\r\n\
      a blog*. Final note: this is one of my top 3 most visited posts, so apparently lots\r\n\
      of people have run into the specific issue.&lt;br&gt;\r\n\
      &lt;strong&gt;&lt;font size=\"1\"&gt;*I'm aware that by definition, I'm a crank with a blog&lt;/font&gt;&lt;/strong&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/Ken332DaysLaterTodayIsYourLuckyDay.aspx\"&gt;Illegitimate\r\n\
      ErrorWebParts&lt;/a&gt; - a crazy solution to a crazy problem&amp;#8212;here I use the \"crank\r\n\
      the chainsaw a few times\" metaphor to describe loading a SPLimitedWebPartManager.\r\n\
      Really, this is bad.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/DingoesStoleMyBabies.aspx\"&gt;Dingoes stole my babies!&lt;/a&gt; -\r\n\
      wherein I discuss a problem with moving wiki content via the PRIME API.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointAwesomenessUserProfiles.aspx\"&gt;SharePoint\r\n\
      awesomeness: User Profiles&lt;/a&gt; - wherein I discuss a potential benefit of functioning\r\n\
      User Profiles. Unfortunately this post was premature, because the scenario I envisioned/laid\r\n\
      out in the post wasn't possible out-of-the-box. Oops! Another framework limitation.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/ChangingThePDFIconInSharePoint.aspx\"&gt;SharePointPdfIcon\r\n\
      project&lt;/a&gt; - wherein I announce my (failed) CodePlex project. It works great for\r\n\
      single-server farms, incidentally. I just can't be bothered to spend the time to write\r\n\
      all the timer job junk to make it work on multi-server farms when even this souped-up\r\n\
      solution won't work when someone adds a new server to the farm after activating the\r\n\
      Feature&amp;hellip;this is one of those cases where using the SharePoint deployment framework\r\n\
      causes more pain than deploying changes the \"vanilla\" way. Ugh.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;PowerShell + SharePoint&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/LutzReflectorAndSharePointFindTheDLLs.aspx\"&gt;Find\r\n\
      the DLLs&lt;/a&gt; - After determining that Lutz' (now RedGate) Reflector is a core tool\r\n\
      for SharePoint development, the next step was acquiring the DLLs from wherever they\r\n\
      lay. Enter gratuitous use of PowerShell to solve the problem.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/PowerShellIsMagicPartOneOfInfinity.aspx\"&gt;PowerShell\r\n\
      is Magic: Part 1&lt;/a&gt; - wherein I demonstrate PowerShell calling STSADM but also calculating\r\n\
      on the fly. PowerShell is really, really useful.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/PowerShellIsMagicPartTwoOfInfinity.aspx\"&gt;PowerShell\r\n\
      is Magic: Part 2&lt;/a&gt; - wherein I describe (poorly) how the PowerShell REPL is powerful.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointPlusPowerShellWorkingWithWikis.aspx\"&gt;SP\r\n\
      + PS: Working with wikis&lt;/a&gt; - wherein I give a pretty weak (but like the movies say,\r\n\
      based on true events) example of how I use PowerShell to solve problems.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/WhyPowerShellReadability.aspx\"&gt;Why PowerShell:\r\n\
      Readability&lt;/a&gt; - wherein I take another shot at explaining how PowerShell launches\r\n\
      processes (console apps)&amp;hellip;and get the explanation wrong. I should probably post\r\n\
      an update or something. Also, PowerShell can be made to be readable (though like Perl\r\n\
      can be made to be abomination).&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/PowerShellPlusSharePointCornucopia.aspx\"&gt;PS +\r\n\
      SP: Cornucopia&lt;/a&gt; - wherein I list all the real-world uses I've found for PowerShell\r\n\
      working with SharePoint. PowerShell is uniquely useful for SharePoint, because SharePoint\r\n\
      has a) an incomplete admin UI, b) huge object model that's loaded into the GAC, c)\r\n\
      incomplete MSDN documentation, necessitating experimentation, and d) so much XML!\r\n\
      Probably other reasons, but those are the big ones. &lt;strong&gt;Also, Visual Studio post-build\r\n\
      tasks are the devil.&lt;/strong&gt; I'm now ashamed of me of a year ago. Shame on you, 2008-me.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Useful PowerShell functions I've written. I've looked at others' PowerShell functions\r\n\
      and I think it's a lot simpler to do away with logging, comments, object disposal,\r\n\
      and attempts to improve performance. All things are appropriate in context, but for\r\n\
      me, these are mostly throwaway ad-hoc scripts, and are thus simple and focused.&lt;/li&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://poshcode.org/1251\"&gt;Write-ListDetails&lt;/a&gt; - particularly, discovering\r\n\
      (and recording useful information about) large lists&amp;#8212;and remember, this is PowerShell,\r\n\
      so you can pull ANY data you want, no matter how complex the criteria or where the\r\n\
      data originates.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://poshcode.org/1304\"&gt;Run-Query&lt;/a&gt; - think of this as a REPL for your\r\n\
      SharePoint Enterprise Search SQL queries. Returns pretty objects, not a DataTable.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://poshcode.org/1264\"&gt;Get-CrawlHealth&lt;/a&gt; - I used this to prototype\r\n\
      the functionality I wanted, then built it into a _layouts page. The script works though\r\n\
      (with the exception of the $contentSource.CrawlCompleted property, which is inaccurate\r\n\
      and worthless)&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://poshcode.org/925\"&gt;Update-SearchScopes&lt;/a&gt; - on demand! You can't do\r\n\
      this via the UI.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://poshcode.org/1306\"&gt;Get-UserProfile and Get-UserProfileData&lt;/a&gt; - the\r\n\
      first function retrieves the UserProfile object, the second function maps the (nigh-impenetrable)\r\n\
      property collection to real properties. Useful for bulk data export and for examining\r\n\
      your user profile data in a meaningful way. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Informational (knowledge, not concepts)&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/BriefestIntroductionToGetListItemsUsingCAMLAndListsasmx.aspx\"&gt;Briefest\r\n\
      introduction to GetListItems using CAML and lists.asmx&lt;/a&gt; - by now there are much\r\n\
      better (and more accurate) guides to GetListItems. What may be amusing to you is the\r\n\
      comments I leave on each line of code&amp;#8212;wherein I document how uncertain I am\r\n\
      of what each element does. The MSDN documentation has improved since 2007. As a small\r\n\
      bonus, I'll note that this runs against WSSv2, not SharePoint 2007.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/DontDeleteTheDefaultAppPool.aspx\"&gt;Don't delete\r\n\
      the default app pool&lt;/a&gt; - nitty-gritty details on IIS configuration. Note to anyone\r\n\
      who has rolled out a SharePoint farm: congratulations, you're now qualified to roll\r\n\
      out any ASP.NET app! Personally I'm pumped this knowledge transfers.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/FirefoxSupportsAutoNTLMLogins.aspx\"&gt;Firefox supports\r\n\
      auto-NTLM logins&lt;/a&gt; - most of you aren't aware that you can use Firefox and visit\r\n\
      your SharePoint sites, and not be so aggravated by login boxes&amp;#8212;Firefox supports\r\n\
      automatic NTLM authentication in a manner similar to IE! Follow the directions to\r\n\
      enable it.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/CiscoNLBHealthCheckSetupInSharePoint.aspx\"&gt;Cisco\r\n\
      NLB setup in SharePoint&lt;/a&gt; - because I'm still the only resource for this in the\r\n\
      entire world. Ridiculous.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointSearchFasterThanYouThink.aspx\"&gt;SharePoint\r\n\
      search - faster than you think&lt;/a&gt; - wherein I complain about how slow IE is and how\r\n\
      it is to blame for many of SharePoint's \"performance issues.\" Honestly, it's true&amp;#8212;try\r\n\
      loading SharePoint pages in Firefox, they're way faster. Also it helps if the page\r\n\
      doesn't load 1MB of JavaScript and another 1MB of inline style text.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointTimerJobs.aspx\"&gt;SharePoint Timer Jobs&lt;/a&gt; -\r\n\
      here I attempt to shift from unhelpful ranting, to a post designed to help others\r\n\
      avoid pain. I'm happy to say this is one of the top 3 posts, and hopefully it's helping\r\n\
      people. Specifically, I mention that Timer Job updates require the manual reset of\r\n\
      each Timer service on each server, and provide a script to quickly reschedule a timer\r\n\
      job. Small footnote: I would rewrite the PowerShell script today such that it was\r\n\
      a single function that takes arguments instead of requiring customization of the script.\r\n\
      Functions are self-contained, and can easily be pasted into a PowerShell window (e.g.\r\n\
      a PS window running remotely on a server!) without accidentally executing anything.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.sharepointdevwiki.com/display/public/People+Search\"&gt;Project retrospective\r\n\
      on my People Search project&lt;/a&gt; - raw stream of consciousness, in bullet-point form.\r\n\
      I didn't want to spend much time prettying it up, but reading the list of limitations,\r\n\
      recommended customizations and preferred AD setup can save you weeks (and pain!) on\r\n\
      your People Search project.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Cruft&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointSearchFindBuriedContent.aspx\"&gt;My SharePoint\r\n\
      search page&lt;/a&gt; - to be clear, this is a static HTML page I made with search boxes\r\n\
      to to search Google, search USENET, search the Technet forums, and search Google Reader.\r\n\
      It's mostly broken now, and eventually I'll take it down. I used it A LOT while doing\r\n\
      farm architecture-y type work, and used it heavily when troubleshooting in the early\r\n\
      days. Now that I'm more development-focused, I've found I don't use it. Ever. Takeaway\r\n\
      for everybody: Technet forums search covers more than Google does. If you're desperate\r\n\
      enough, search both Google and the Technet forums (called MSDN Social now?).&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointSearchPageHottestOfTheHot.aspx\"&gt;SharePoint\r\n\
      search page - hottest of the hot!&lt;/a&gt; - wherein I add hotkey support to my (now-defunct)\r\n\
      search page.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Op-ed (opinion pieces with almost no useful, actionable content&amp;#8212;sorry)&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/DearMSFTPleaseTalkToYourOfficeDivision.aspx\"&gt;Dear\r\n\
      MSFT, please talk to your Office division&lt;/a&gt; - op-ed, Sorry. Summary is, please don't\r\n\
      obfuscate all your DLLs. Side note: InfoPath is pain.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/OneLanguageAYear.aspx\"&gt;One Language A Year&lt;/a&gt; -\r\n\
      wherein I dedicate a year to learn C#&amp;#8212;that is, &lt;em&gt;actually&lt;/em&gt; learn C#. I'll\r\n\
      dig into Scala/Clojure/Haskell/Ruby/Python/Lisp/Scheme/Erlang/JavaScript/Io/Factor/OMeta/Smalltalk\r\n\
      some other day. Also, I outright deny the claim that you should learn one language\r\n\
      a year. It's cheap to give advice. It's not as cheap to &lt;em&gt;follow advice&lt;/em&gt;. I\r\n\
      have a new rule on following advice: does the person giving the advice actually do\r\n\
      what they say? I got similarly disgruntled when \"Uncle Bob\" said something to the\r\n\
      effect that you should dedicate 40 hours to work and 20 hours to learning. That's\r\n\
      just crazy talk.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointWikisAreAwesomeISwear.aspx\"&gt;SharePoint\r\n\
      wikis are awesome, I swear&lt;/a&gt; - another of my top 3 visited SharePoint pages. I now\r\n\
      apologize for defending SharePoint 2007 wikis. Afternote: I wish this wasn't such\r\n\
      a popular page. Of all things, a wiki op-ed piece is one of my top pages, ugh.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointNotUnitTesting.aspx\"&gt;SharePoint: not\r\n\
      unit testing&lt;/a&gt; - I've waffled a bit on this one. My current stance is that I'd really\r\n\
      like to do continuous, automated functional testing (i.e. drive a browser window with\r\n\
      code) to give me confidence my SharePoint solution actually works. True unit testing\r\n\
      wouldn't cover enough space to give me confidence in my project, and most of my SharePoint\r\n\
      projects are tiny, such that the \"designing your API via design-by-example TDD\" argument\r\n\
      for TDD doesn't apply. Also, read this post for a short anecdotal survey on what kind\r\n\
      of problems I run into when developing SharePoint solutions.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/StrongOpinionSayNoToMAKECABEXE.aspx\"&gt;Say no to\r\n\
      makecab.exe&lt;/a&gt; - Here I rant against using makecab. I think I had just read yet another\r\n\
      MSDN article that made casual use of MAKECAB.EXE and pretended like it was a good\r\n\
      idea. Also I apparently just read the CodingHorror post on \"Strong opinions, loosely\r\n\
      held\" which I now think is a terrible formula for my blog posts. At least I include\r\n\
      a somewhat-useful PowerShell snippet that bypasses makecab, that's something.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SurvivingYourFirstSharePointProjectPartOne.aspx\"&gt;Surviving\r\n\
      your first SharePoint project: Part 1&lt;/a&gt; - wherein I sloppily argue that WSPBuilder\r\n\
      is superior to STSDEV, VSeWSS, and makecab. It's true though, and &lt;em&gt;somebody's&lt;/em&gt; got\r\n\
      to counteract all these MSDN articles and books that pretend WSPBuilder doesn't exist&amp;hellip;&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/DoesThisDescribeYou.aspx\"&gt;Does this describe you?&lt;/a&gt; -\r\n\
      short, unhelpful post that quotes Niklaus Virth and laments SharePoint's accidental\r\n\
      complexity.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;SharePoint 2010/SharePoint 14 predictions&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePoint14EverythingWeKnow.aspx\"&gt;SharePoint\r\n\
      14: Everything we know&lt;/a&gt; - it turns out from what I've heard from SPC09, this was\r\n\
      dead-on accurate. They kept PowerPivot silent through the NDA period. Interestingly,\r\n\
      SPC09 was silent on \"Bulldog\", the MDM product Microsoft purchased. Also I apparently\r\n\
      missed out on the TownSquare bits, which they publicly discussed, and which evolved\r\n\
      into the Facebook-like features.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/PreparingYourselfForSharePoint14.aspx\"&gt;Preparing\r\n\
      yourself for SharePoint 14&lt;/a&gt; - I'm proud of my track record here, because I nailed\r\n\
      pretty much everything. Written a full year ago.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;\"Other\" category&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/YetAnotherSharePointVMRIP.aspx\"&gt;Yet another SharePoint\r\n\
      VM: RIP&lt;/a&gt; - there was a period of time where I was Doing Something Wrong with my\r\n\
      VMs. I now blame either/any of: a) saving state/restoring from saved state in Virtual\r\n\
      Server and Virtual PC, b) running my external USB hard drive off of laptop battery\r\n\
      power, c) lots of plugging and unplugging of said USB hard drive. I haven't had a\r\n\
      problem in a long while now. Takeaway: back up your VM every so often \"offsite\", just\r\n\
      in case.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/ASPNETMVCFrameworkIsAMAGICFLYINGCARPET.aspx\"&gt;ASP.NET\r\n\
      MVC is a MAGIC FLYING CARPET&lt;/a&gt; - wow, it's been two full years since the announcement!\r\n\
      Anyway, here I mention how SharePoint development feels like alchemy sometimes, and\r\n\
      separately, how the SharePoint developer community doesn't seem to value the things\r\n\
      I like about ASP.NET MVC. Posting this had the side effect of sending lots of poor\r\n\
      souls to my blog from google searching on \"how to create an ASP.NET MVC app inside\r\n\
      SharePoint.\"&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SUGDCSummerConf2008Recap.aspx\"&gt;SUGDC Conference\r\n\
      2008: Recap&lt;/a&gt; - wherein I give a similarly-huge recap of each session I attended.\r\n\
      Also: layoffs drive big SharePoint adoption! So, get with the layoffs!&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointPlusASPNETMVC.aspx\"&gt;SharePoint + ASP.NET\r\n\
      MVC&lt;/a&gt; - wherein I troll for people searching for these keywords.&lt;/li&gt;\r\n\
      &lt;/ul&gt;</content>\r\n  </entry>\r\n  <entry>\r\n    <title>Website Background Services Are Hot</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/WebsiteBackgroundServicesAreHot.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,4c339717-c8ae-4e4c-a69d-f8fa5b454b6f.aspx</id>\r\n    <published>2009-10-26T20:59:44.98917-07:00</published>\r\n    <updated>2009-10-26T20:59:44.98917-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <category term=\"ASP.NET MVC\" label=\"ASP.NET MVC\" scheme=\"http://www.pseale.com/blog/CategoryView,category,ASPNETMVC.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      This is a two-parter. The first part is to say, hey, look at this sweet hack I've\r\n\
      discovered in the <a href=\"http://oxite.codeplex.com/SourceControl/changeset/view/45053#438025\">Oxite\r\n\
      source</a>*! The second part is to ask, hey, is this a good idea?<br /><font size=\"1\">* </font><a href=\"http://erikporter.com/Blog/Oxite20090215-Released\"><font size=\"1\">the\r\n\
      refactored Oxite source, that is</font></a></p>\r\n        <h3>Background services\r\n\
      </h3>\r\n        <p>\r\n\
      First, let's give a little detail here\xE2\x80\x94<em>background services</em> are long-running\r\n\
      tasks that Oxite needs to run periodically. These are things like sending emails and\r\n\
      sending trackbacks\xE2\x80\x94necessary, certainly. But, they shouldn't be running while\r\n\
      some chump stares at his Netscape window waiting for the site to finish sending 1000\r\n\
      spam trackbacks. He should be able to post to his blog, receive an immediate response\r\n\
      indicating the post is now available, and the trackback spamming can commence later.\r\n\
      Background services are the things you can put off, the things that don't have to\r\n\
      finish before sending a response to your website patrons.\r\n\
      </p>\r\n        <p>\r\n\
      These background services are called by many names\xE2\x80\x94I've heard cron jobs, timer\r\n\
      jobs, background jobs, jobs, \"the heartbeat,\" services, and tasks.\xC2\xA0 In Oxite\r\n\
      they're called background services.\r\n\
      </p>\r\n        <h3>Look at this sweet hack!\r\n\
      </h3>\r\n        <p>\r\n\
      The full source is below, but I'll attempt a walkthrough of the solution here. First,\r\n\
      to explain the problem: we must <strong>achieve the impossible\xE2\x80\x94</strong>we must\r\n\
      somehow emulate a continuously-running Windows service inside an IIS worker process.\r\n\
      This means we must periodically trigger jobs to run, but we can't monopolize valuable\r\n\
      worker threads. And we <em>certainly </em>can't delay responses to send 30000 spam\r\n\
      trackbacks. We've got to run, but we can't run anywhere in the ASP.NET page/request\r\n\
      lifecycle! <em>It's a conundrum.</em></p>\r\n        <p>\r\n\
      What the Oxite team has done to achieve the impossible is, plainly, to cheat\xE2\x80\x94they\r\n\
      use a System.Threading.Timer.\r\n\
      </p>\r\n        <p>\r\n\
      How they manage the impossible is a lot like juggling\xE2\x80\x94<em><strong>magic juggling</strong></em>.\r\n\
      Enter stage left: Oxite, the juggler. Oxite takes a background task and throws it\r\n\
      in the air. He takes hold of the next background task (let's start calling these things\r\n\
      bowling pins) and throws <em>it </em>into the air, and moves on down the line. Before\r\n\
      anyone knows what's happened, Oxite has gathered up all the bowling pins, thrown them\r\n\
      all into the air, and made his getaway. <em>Unlike</em> most jugglers, Oxite makes\r\n\
      no attempt to catch bowling pins once thrown! And this is why it's magic.\r\n\
      </p>\r\n        <blockquote>\r\n          <p>\r\n\
      Let's try to break this back down into code. When Start() first executes [line 28],\r\n\
      the Timer object <strong>sets a callback</strong> without halting progress [line 43].\r\n\
      This is the juggler throwing a pin in the air.\r\n\
      </p>\r\n        </blockquote>\r\n        <p>\r\n\
      The callback method is eventually invoked. A thread is spun up* and runs the designated <strong>timerCallback()</strong> function\r\n\
      [line 56]\xE2\x80\x94and, let's make this clear\xE2\x80\x94timerCallback() doesn't block the\r\n\
      original Oxite web request; it lives in a new thread. And this new thread does its\r\n\
      first dose of work, as shown on line 68 (<strong>SPOILER ALERT:</strong> it calls\r\n\
      Run()).\xC2\xA0 We're not interested in what Run() does exactly\xE2\x80\x94for today it must\r\n\
      remain a spooky mystery, go look it up yourself.<br /><strong><font size=\"1\">* <font color=\"#ff0000\">precisely how</font> the thread is\r\n\
      spun up is in fact, real magic, or might as well be to my superstitious caveman brain</font></strong></p>\r\n        <p>\r\n\
      Ok. Here's where the \"magic\" part of magic juggling comes in. Because any dunce can\r\n\
      throw bowling pins, and any dunce can catch them, and any dunce, with practice, can\r\n\
      juggle. The magic here is inside the timerCallback() method, where the Timer once\r\n\
      again sets a callback. Each time a background service awakens, it does its work and,\r\n\
      before going back to sleep, sets up the next callback with another call to timer.Change()\r\n\
      [line 75]. That is to say, each time the bowling pin makes as if to land, it spins\r\n\
      back upward into the air!\r\n\
      </p>\r\n        <p>\r\n\
      So there you have it. Oxite takes a bunch of bowling pins, throws them all into the\r\n\
      air, and leaves. As the pins drop down to the ground, the \"mystical Timer callback\r\n\
      juggling force\" propels them back into the air.\r\n\
      </p>\r\n        <p>\r\n\
      And we're running background threads in the web process. Sweet.\r\n\
      </p>\r\n        <h3>Now the question is: is this a good idea?\r\n\
      </h3>\r\n        <p>\r\n\
      Now you understand how background tasks work in Oxite\xE2\x80\x94or can now juggle. I get\r\n\
      confused sometimes. In any case, congratulations!\r\n\
      </p>\r\n        <p>\r\n\
      Assuming I'm not misrepresenting anything, this is how background tasks work in Oxite.\r\n\
      So, now for the question. <strong>Is this a reasonably acceptable way to set up background\r\n\
      tasks for a site?</strong> I've discussed it some on twitter, but is there anything\r\n\
      particularly nasty I've missed? Will it kill the process? Will it hang all 25 threads?\r\n\
      Or some large portion of them?\r\n\
      </p>\r\n        <p>\r\n\
      I'm curious to hear if anyone has taken this approach, and what their experiences\r\n\
      were.\r\n\
      </p>\r\n        <h3>Full source\r\n\
      </h3>\r\n        <p>\r\n\
      From <a title=\"http://oxite.codeplex.com/SourceControl/changeset/view/45053#438025\" href=\"http://oxite.codeplex.com/SourceControl/changeset/view/45053#438025\">http://oxite.codeplex.com/SourceControl/changeset/view/45053#438025</a>:\r\n\
      </p>\r\n        <div style=\"font-family: consolas; background: #303030; color: #e0e0e0; font-size: 12pt\">\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 1</span>\xC2\xA0<span style=\"color: #7cfc00\">//\xC2\xA0\r\n\
      \xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 2</span>\xC2\xA0<span style=\"color: #7cfc00\">//\xC2\xA0\r\n\
      Copyright (c) Microsoft Corporation. All rights reserved.</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 3</span>\xC2\xA0<span style=\"color: #7cfc00\">//\xC2\xA0\r\n\
      This source code is made available under the terms of the Microsoft Public License\r\n\
      (Ms-PL)</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 4</span>\xC2\xA0<span style=\"color: #7cfc00\">//\xC2\xA0\r\n\
      http://www.codeplex.com/oxite/license</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 5</span>\xC2\xA0<span style=\"color: #7cfc00\">//\xC2\xA0\r\n\
      \xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94-</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 6</span>\xC2\xA0<span style=\"color: #40c4ff\">using</span><span style=\"color: #eddac0\">System</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 7</span>\xC2\xA0<span style=\"color: #40c4ff\">using</span><span style=\"color: #eddac0\">System</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Threading</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 8</span>\xC2\xA0<span style=\"color: #40c4ff\">using</span><span style=\"color: #eddac0\">Microsoft</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Practices</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Unity</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 9</span>\xC2\xA0<span style=\"color: #40c4ff\">using</span><span style=\"color: #eddac0\">Oxite</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Services</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 10</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 11</span>\xC2\xA0<span style=\"color: #40c4ff\">namespace</span><span style=\"color: #eddac0\">Oxite</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Infrastructure</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 12</span> {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 13</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">public</span><span style=\"color: #40c4ff\">class</span><span style=\"color: aqua\">BackgroundServiceExecutor</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 14</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 15</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: #40c4ff\">readonly</span><span style=\"color: aqua\">Timer</span><span style=\"color: #eddac0\">timer</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 16</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: #40c4ff\">readonly</span><span style=\"color: #eddac0\">IUnityContainer</span><span style=\"color: #eddac0\">container</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 17</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: #40c4ff\">readonly</span><span style=\"color: aqua\">Guid</span><span style=\"color: #eddac0\">pluginID</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 18</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: #40c4ff\">readonly</span><span style=\"color: aqua\">Type</span><span style=\"color: #eddac0\">type</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 19</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 20</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">public</span><span style=\"color: #eddac0\">BackgroundServiceExecutor</span>(<span style=\"color: #eddac0\">IUnityContainer</span><span style=\"color: #eddac0\">container</span>, <span style=\"color: aqua\">Guid</span><span style=\"color: #eddac0\">pluginID</span>, <span style=\"color: aqua\">Type</span><span style=\"color: #eddac0\">type</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 21</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 22</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">this</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">timer</span><span style=\"color: silver\">=</span><span style=\"color: #40c4ff\">new</span><span style=\"color: aqua\">Timer</span>(<span style=\"color: #eddac0\">timerCallback</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 23</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">this</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">container</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">container</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 24</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">this</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">pluginID</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">pluginID</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 25</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">this</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">type</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">type</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 26</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 27</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 28</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">public</span><span style=\"color: #40c4ff\">void</span><span style=\"color: #eddac0\">Start</span>()\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 29</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 30</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IBackgroundService</span><span style=\"color: #eddac0\">backgroundService</span><span style=\"color: silver\">=</span> (<span style=\"color: aqua\">IBackgroundService</span>)<span style=\"color: #eddac0\">container</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Resolve</span>(<span style=\"color: #eddac0\">type</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 31</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IPlugin</span><span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">getPlugin</span>();\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 32</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">TimeSpan</span><span style=\"color: #eddac0\">interval</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">getInterval</span>(<span style=\"color: #eddac0\">plugin</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 33</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 34</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">if</span> (<span style=\"color: #eddac0\">interval</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">TotalSeconds</span><span style=\"color: silver\">&gt;</span><span style=\"color: #ff80ff\">10</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 35</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 36</span>\xC2\xA0<span style=\"color: #cb97ff\">#if</span> DEBUG\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 37</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">if</span> (<span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Enabled</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 38</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 39</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">backgroundService</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Run</span>(<span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Settings</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 40</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 41</span>\xC2\xA0<span style=\"color: #cb97ff\">#endif</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 42</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 43</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">timer</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Change</span>(<span style=\"color: #eddac0\">interval</span>, <span style=\"color: #40c4ff\">new</span><span style=\"color: aqua\">TimeSpan</span>(<span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: silver\">-</span><span style=\"color: #ff80ff\">1</span>));\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 44</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 45</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 46</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 47</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">public</span><span style=\"color: #40c4ff\">void</span><span style=\"color: #eddac0\">Stop</span>()\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 48</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 49</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">lock</span> (<span style=\"color: #eddac0\">timer</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 50</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 51</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">timer</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Change</span>(<span style=\"color: aqua\">Timeout</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Infinite</span>, <span style=\"color: aqua\">Timeout</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Infinite</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 52</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">timer</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Dispose</span>();\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 53</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 54</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 55</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 56</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: #40c4ff\">void</span><span style=\"color: #eddac0\">timerCallback</span>(<span style=\"color: #40c4ff\">object</span><span style=\"color: #eddac0\">state</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 57</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 58</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">lock</span> (<span style=\"color: #eddac0\">timer</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 59</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 60</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IBackgroundService</span><span style=\"color: #eddac0\">backgroundService</span><span style=\"color: silver\">=</span> (<span style=\"color: aqua\">IBackgroundService</span>)<span style=\"color: #eddac0\">container</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Resolve</span>(<span style=\"color: #eddac0\">type</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 61</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IPlugin</span><span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">getPlugin</span>();\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 62</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">TimeSpan</span><span style=\"color: #eddac0\">interval</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">getInterval</span>(<span style=\"color: #eddac0\">plugin</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 63</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 64</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">if</span> (<span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Enabled</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 65</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 66</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">try</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 67</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 68</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">backgroundService</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Run</span>(<span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Settings</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 69</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 70</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">catch</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 71</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 72</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 73</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 74</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 75</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">timer</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Change</span>(<span style=\"color: #eddac0\">interval</span>, <span style=\"color: #40c4ff\">new</span><span style=\"color: aqua\">TimeSpan</span>(<span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: silver\">-</span><span style=\"color: #ff80ff\">1</span>));\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 76</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 77</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 78</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #7cfc00\">//TODO:\r\n\
      (erikpo) Once background services have a cancel state and timeout interval, check\r\n\
      their state and cancel if appropriate</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 79</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 80</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 81</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: aqua\">IPlugin</span><span style=\"color: #eddac0\">getPlugin</span>()\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 82</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 83</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IPluginService</span><span style=\"color: #eddac0\">pluginService</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">container</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Resolve</span><span style=\"color: silver\">&lt;</span><span style=\"color: aqua\">IPluginService</span><span style=\"color: silver\">&gt;</span>();\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 84</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IPlugin</span><span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">pluginService</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">GetPlugin</span>(<span style=\"color: #eddac0\">pluginID</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 85</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 86</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">return</span><span style=\"color: #eddac0\">plugin</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 87</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 88</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 89</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: aqua\">TimeSpan</span><span style=\"color: #eddac0\">getInterval</span>(<span style=\"color: aqua\">IPlugin</span><span style=\"color: #eddac0\">plugin</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 90</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 91</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">return</span><span style=\"color: aqua\">TimeSpan</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">FromTicks</span>(<span style=\"color: #40c4ff\">long</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Parse</span>(<span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Settings</span>[<span style=\"color: #ff80ff\">\"Interval\"</span>]));\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 92</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 93</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 94</span> }\r\n\
      </p>\r\n        </div>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n\
      </feed>\r\n"
    http_version: "1.1"
- !ruby/struct:VCR::HTTPInteraction 
  request: !ruby/struct:VCR::Request 
    method: :get
    uri: http://feeds.feedburner.com:80/pseale
    body: 
    headers: 
  response: !ruby/struct:VCR::Response 
    status: !ruby/struct:VCR::ResponseStatus 
      code: 200
      message: OK
    headers: 
      content-type: 
      - text/xml; charset=UTF-8
      etag: 
      - Ryf+koXgmPdTFM2fkriTBrjargo
      last-modified: 
      - Thu, 26 May 2011 04:03:09 GMT
      date: 
      - Thu, 26 May 2011 04:59:03 GMT
      expires: 
      - Thu, 26 May 2011 04:59:03 GMT
      cache-control: 
      - private, max-age=0
      x-content-type-options: 
      - nosniff
      x-xss-protection: 
      - 1; mode=block
      server: 
      - GSE
      transfer-encoding: 
      - chunked
    body: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\
      <?xml-stylesheet type=\"text/xsl\" media=\"screen\" href=\"/~d/styles/atom10full.xsl\"?><?xml-stylesheet type=\"text/css\" media=\"screen\" href=\"http://feeds.feedburner.com/~d/styles/itemcontent.css\"?><feed xmlns=\"http://www.w3.org/2005/Atom\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xml:lang=\"en-us\">\r\n  <title>Peter Seale's weblog - SharePoint | PowerShell | Awesomeness</title>\r\n  <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/\" />\r\n  \r\n  <logo>http://www.pseale.com/favicon.ico</logo>\r\n  <icon>favicon.ico</icon>\r\n  <updated>2011-03-22T08:23:38.3226954-07:00</updated>\r\n  <author>\r\n    <name>Peter Seale</name>\r\n  </author>\r\n  <subtitle />\r\n  <id>http://www.pseale.com/blog/</id>\r\n  <generator uri=\"http://dasblog.info/\" version=\"2.2.8279.16125\">DasBlog</generator>\r\n  <atom10:link xmlns:atom10=\"http://www.w3.org/2005/Atom\" rel=\"self\" type=\"application/atom+xml\" href=\"http://feeds.feedburner.com/pseale\" /><feedburner:info xmlns:feedburner=\"http://rssnamespace.org/feedburner/ext/1.0\" uri=\"pseale\" /><atom10:link xmlns:atom10=\"http://www.w3.org/2005/Atom\" rel=\"hub\" href=\"http://pubsubhubbub.appspot.com/\" /><entry>\r\n    <title>The True Measure Of Productivity</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/TheTrueMeasureOfProductivity.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,34308fc8-3e63-406e-870f-b55a28c19685.aspx</id>\r\n    <published>2011-03-22T08:23:38.3226954-07:00</published>\r\n    <updated>2011-03-22T08:23:38.3226954-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <category term=\"Awesomeness\" label=\"Awesomeness\" scheme=\"http://www.pseale.com/blog/CategoryView,category,Awesomeness.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/The-True-Measure-Of-Productivity_915F/true-measure-of-productivity_2.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"true-measure-of-productivity\" border=\"0\" alt=\"true-measure-of-productivity\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/The-True-Measure-Of-Productivity_915F/true-measure-of-productivity_thumb.png\" width=\"409\" height=\"406\" />\r\n          </a>\r\n        </p>\r\n        <p>\r\n\
      This screenshot was taken in the wild by me, at my computer a while back.\r\n\
      </p>\r\n        <p>\r\n\
      Each Cassini tray icon roughly equals one standard unit of productivity. By this completely\r\n\
      unbiased, objective measure, I\xE2\x80\x99m about seven hundred times more productive than you.\r\n\
      Give or take.\r\n\
      </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Quotes From The Internet</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/QuotesFromTheInternet.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,c7656a65-4c3e-4ab7-92e6-b8519d97bda8.aspx</id>\r\n    <published>2011-03-18T11:54:18.9537557-07:00</published>\r\n    <updated>2011-03-18T11:54:18.9537557-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      I\xE2\x80\x99m just here today to pass along a few gems, both relating to OOP.\r\n\
      </p>\r\n        <p>\r\n          <a href=\"http://news.ycombinator.com/item?id=2340105\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"quote2\" border=\"0\" alt=\"quote2\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/97a716667d69_C08D/quote2_3.png\" width=\"661\" height=\"307\" />\r\n          </a>\r\n        </p>\r\n        <p>\r\n          <a href=\"http://news.ycombinator.com/item?id=2332418\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"quote1\" border=\"0\" alt=\"quote1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/97a716667d69_C08D/quote1_94ad99ad-98eb-45e8-8351-e7df965ca067.png\" width=\"662\" height=\"150\" />\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>TFS As Your Build/CI Server: Only Positive Takeaways 1 of 2</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/TFSAsYourBuildCIServerOnlyPositiveTakeaways1Of2.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,58295a52-afbf-42e2-ac82-bccf50ec806d.aspx</id>\r\n    <published>2011-02-08T22:00:00-08:00</published>\r\n    <updated>2011-02-03T17:10:03.9125169-08:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      This post is a grab bag of information, techniques, and landmines I wish someone had\r\n\
      told me when we first set out to run our build/deploy on top of TFS. What follows\r\n\
      is a short, all-positive compilation of everything I\xE2\x80\x99ve learned about TFS 2010. I\xE2\x80\x99ll\r\n\
      assume you work with TFS on a daily basis, and thus won\xE2\x80\x99t attempt to explain TFS concepts\r\n\
      (shelving, for example).\r\n\
      </p>\r\n        <h3>All positive\r\n\
      </h3>\r\n        <p>\r\n\
      All-positive means that <strong>I will not complain about TFS</strong>. I will not.\r\n\
      I\xE2\x80\x99ll <strong>only </strong>provide helpful workarounds I\xE2\x80\x99ve found. \r\n\
      </p>\r\n        <h3>Mini-review of TFS\xE2\x80\x99s continuous integration featureset\r\n\
      </h3>\r\n        <p>\r\n\
      Between TeamCity and TFS, having used both in two environments and having recently\r\n\
      used the newest versions of both, I\xE2\x80\x99d prefer TeamCity in a landslide. I can fire off\r\n\
      out a bulleted list of specific ways TeamCity is better, but in the interest of staying\r\n\
      positive, let\xE2\x80\x99s just move on.\r\n\
      </p>\r\n        <h3>Tips for working with TFS source control\r\n\
      </h3>\r\n        <h4>Merging\r\n\
      </h4>\r\n        <p>\r\n          <strong>If in doubt, don\xE2\x80\x99t automerge</strong>.<strong> If you are having problems\r\n\
      with TFS merges, you can solve all your problems by manually merging every file.</strong>\xC2\xA0\r\n\
      TFS 2005 was notoriously bad at auto-merging (i.e. performing server-side merges),\r\n\
      so the only way to win, was not to play. \r\n\
      </p>\r\n        <p>\r\n          <strong>In TFS 2010, I will 99% certify that automerging works.</strong> TFS 2010\r\n\
      has improved, and our team has had almost perfect success with automerging, though\r\n\
      there are hiccups here and there. We\xE2\x80\x99ve had merging issues, but I\xE2\x80\x99m not convinced\r\n\
      our merging issues are automerge issues. 99% is pretty good. Let me know in the comments\r\n\
      if you can definitely blame TFS 2010 automerge for a botched merge.\r\n\
      </p>\r\n        <p>\r\n          <strong>Replace your client-side merge tool with one you can trust.</strong> The built-in\r\n\
      VS2010 merge/compare tool works. However, I had \xE2\x80\x9Can incident.\xE2\x80\x9D \xE2\x80\x9CIncidents\xE2\x80\x9D are bad\r\n\
      when merging. What happened is, the VS merge tool mistakenly matched up two entirely\r\n\
      different methods and attempted to \xE2\x80\x9Cmerge\xE2\x80\x9D the changes. Merging the contents of method\r\n\
      A() into method B() is bad. It\xE2\x80\x99s bad enough to go looking for a replacement. So, <a href=\"http://www.richard-banks.org/2009/09/using-p4merge-with-visual-studio-2008.html\">following\r\n\
      these instructions, I replaced the built-in merge tool with Perforce\xE2\x80\x99s free P4Merge</a>.\r\n\
      </p>\r\n        <p>\r\n          <strong>Weird merge conflicts with renamed files? Accept the lesser victory and step\r\n\
      a) delete, then step b) re-create any files that cause weird merge issues.</strong> This\r\n\
      breaks the file\xE2\x80\x99s version history, but solves your bigger problem.\r\n\
      </p>\r\n        <h3>Workspace tips\r\n\
      </h3>\r\n        <p>\r\n\
      I know lots of you have problems with TFS and how it deals with files. I don\xE2\x80\x99t. I\r\n\
      don\xE2\x80\x99t know if I\xE2\x80\x99m just not exercising the tool enough, but I\xE2\x80\x99m not having problems, <em>now\r\n\
      that I know what not to do</em>. Specific advice follows:\r\n\
      </p>\r\n        <p>\r\n          <strong>Don\xE2\x80\x99t go offline. The consequences can be worse than you think.</strong> I\xE2\x80\x99ve\r\n\
      never had success with offline mode, and what\xE2\x80\x99s worse, until you go back online, the\r\n\
      Team Explorer hides your TFS server from the list. I\xE2\x80\x99ve had something of a <a href=\"http://www.neilpullinger.co.uk/2009/11/solution-is-offline-because-its.html\">traumatic\r\n\
      experience</a> with offline mode, so it\xE2\x80\x99s hard to stay positive or even fake sound\r\n\
      positive when describing offline mode. Just don\xE2\x80\x99t go offline unless you know how to\r\n\
      get back online. For the record, I\xE2\x80\x99m using the newest of the new with TFS 2010 and\r\n\
      Visual Studio 2010, and even so, even with the newest tools I\xE2\x80\x99m experiencing problems.\r\n\
      I\xE2\x80\x99ll give a blanket recommendation that you don\xE2\x80\x99t try it.\r\n\
      </p>\r\n        <p>\r\n          <strong>Do as much editing as possible inside Visual Studio Solutions or Projects.</strong> It\xE2\x80\x99s\r\n\
      easier to create, edit, move, and delete files inside Solutions or Projects (files\r\n\
      inside Solutions are automatically tracked in TFS). Treat Solutions ands Projects\r\n\
      as a rail rides: stay in the cart travelling slowly down the rails. Do not exit the\r\n\
      cart. In case of fire, follow emergency procedures (spelled out further below).\r\n\
      </p>\r\n        <p>\r\n\
      This goes against advice I\xE2\x80\x99ve heard. I\xE2\x80\x99ve heard that TFS source control is <strong>more\r\n\
      manageable from the command-line</strong> than via Visual Studio. But for me, I prefer\r\n\
      to let Visual Studio\xE2\x80\x99s integration automatically check out files for editing. So,\r\n\
      whenever possible I work underneath the protective umbrella of Solutions and Projects.\r\n\
      </p>\r\n        <p>\r\n          <strong>Remember TFS does not automatically track file changes, not even partially</strong> like\r\n\
      SVN or git. This means:\r\n\
      </p>\r\n        <p>\r\n          <strong>Explicitly rename or move files</strong> in Source Control Explorer.\r\n\
      </p>\r\n        <p>\r\n          <strong>Explicitly delete files</strong> from Source Control Explorer.\r\n\
      </p>\r\n        <p>\r\n          <strong>Explicitly add files</strong> from Source Control Explorer.\r\n\
      </p>\r\n        <p>\r\n          <strong>Check out files in Source Control Explorer to edit</strong>. Or, reworded:\r\n\
      </p>\r\n        <p>\r\n          <strong>Be sure to check out <u>first</u>, <u>before</u> editing files outside of\r\n\
      Visual Studio.</strong> This means when running any kind of code generation, generating\r\n\
      assembly info files, or even something as simple as editing PowerShell scripts with\r\n\
      the ISE\xE2\x80\x94in all cases, be sure to check out <strong>first</strong>. <strong>Then</strong> edit. <strong>Last, </strong>check\r\n\
      in (or undo). \r\n\
      </p>\r\n        <p>\r\n\
      If you don\xE2\x80\x99t follow these steps in order, you\xE2\x80\x99ll experience bad things. Notably, if\r\n\
      you try to check out <strong>after </strong>successfully editing a file, you\xE2\x80\x99re presented\r\n\
      with a merge conflict.\r\n\
      </p>\r\n        <p>\r\n          <strong>If something gets weird, destroy your entire folder (or entire Workspace)\r\n\
      and get latest+force override.</strong> Don\xE2\x80\x99t try to get too specific and get one\r\n\
      or two files. Delete the whole folder, then get latest+force override. It\xE2\x80\x99s quick,\r\n\
      just do it.\r\n\
      </p>\r\n        <p>\r\n          <strong>There\xE2\x80\x99s no good way to temporarily edit a file </strong>(e.g. temporarily\r\n\
      change the connection string in your app.config)<strong> without triggering a checkout.</strong> If\r\n\
      you ever need to temporarily edit a file but don\xE2\x80\x99t ever want to check in the change,\r\n\
      well\xE2\x80\xA6there\xE2\x80\x99s really no good way to go about it. In fact there are several not-good\r\n\
      ways to go about it:\r\n\
      </p>\r\n        <ol>\r\n        </ol>\r\n        <ol>\r\n          <li>\r\n\
      Just check out the file and edit it, and <strong>simply remember </strong>to undo\r\n\
      your changes later. \r\n\
      </li>\r\n          <li>\r\n\
      Cheat. Open the file via Windows Explorer, and unset its Read-Only flag. And, when\r\n\
      you want the file to go back to its original state, <strong>simply remember</strong> to\r\n\
      get the latest version of the file + force override. \r\n\
      </li>\r\n          <li>\r\n\
      Cheat. Open a prompt at the root of your workspace and run <font face=\"Courier New\">attrib\r\n\
      -r *.* /s</font>. This is the nuclear option, as TFS will now assume you\xE2\x80\x99ve edited\r\n\
      every single file in your workspace, and will treat any updates as merge conflicts.\r\n\
      Don\xE2\x80\x99t do this. I\xE2\x80\x99ve done it so I can tell you not to try it. \r\n\
      </li>\r\n        </ol>\r\n        <p>\r\n          <strong>Shelvesets work.</strong> Trust them. Use them. Use them frequently. Make\r\n\
      as many of them as you want. Give them dumb names if they contain trash (I have shelvesets\r\n\
      named \xE2\x80\x9Caaaaaaa\xE2\x80\x9D and \xE2\x80\x9Caaaaaaaaaaaa\xE2\x80\x9D, and of course, one named \xE2\x80\x9Chelp\xE2\x80\x9D). You can find\r\n\
      them later, just sort by date. Easy.\r\n\
      </p>\r\n        <p>\r\n          <strong>Always shelve from Source Control Explorer</strong> to keep things simple.\r\n\
      If you Shelve a Solution, you may miss files. I\xE2\x80\x99ve missed files when I shelved a Solution.\r\n\
      Don\xE2\x80\x99t be me.\r\n\
      </p>\r\n        <h3>MSTest tips (specifically: using MSTest for your unit and integration tests)\r\n\
      </h3>\r\n        <p>\r\n          <strong>Switching from NUnit is a cinch.</strong> All the attribute names are different,\r\n\
      but only slightly. In With the exception of one MSTest feature:\r\n\
      </p>\r\n        <p>\r\n          <strong>Learn about localtestrun.config and how it works.</strong> We\xE2\x80\x99ve started using\r\n\
      it, and while it\xE2\x80\x99s convenient, it\xE2\x80\x99s essentially a non-composable* way to copy files\r\n\
      you need for your tests. \r\n\
      <br /><font size=\"1\">* i.e. once you start using localtestrun.config, you can\xE2\x80\x99t just switch\r\n\
      to NUnit or XUnit without some pain. Alternately, if you had coded up manual file\r\n\
      copying, you wouldn\xE2\x80\x99t have any issues converting to or from NUnit/XUnit.Also, the\r\n\
      localtestrun.config may be responsible for our extremely slow test runs.</font></p>\r\n        <p>\r\n          <strong>The test runner is excellent\xE2\x80\xA6and slow.</strong> It\xE2\x80\x99s not entirely the test\r\n\
      runner\xE2\x80\x99s fault, as the Resharper test runner is equally slow (I\xE2\x80\x99ve tried). I gave\r\n\
      up using Resharper\xE2\x80\x99s test runner when I found out it was just as slow, <strong>and</strong> has\r\n\
      imperfect (broken) localtestrun.config support. Note, tests are slower by a large\r\n\
      factor if you\xE2\x80\x99re running code coverage.\r\n\
      </p>\r\n        <p>\r\n\
      If not for the slowness and the occasional bug and some wonky behavior during debug\r\n\
      sessions, I\xE2\x80\x99d say the VS test runner is as good as Resharper\xE2\x80\x99s test runner or TestDriven.NET.\r\n\
      Short note about TestDriven.NET: like VirtualBox, it\xE2\x80\x99s not free for corporate use.\r\n\
      Read the EULA.\r\n\
      </p>\r\n        <p>\r\n          <strong>IntelliTrace sounds nice, but crashes test runs.</strong> We turned it off\r\n\
      so it stopped crashing our test runs.\r\n\
      </p>\r\n        <p>\r\n          <strong>Learn the keystrokes for running tests.</strong> CTRL+R, t. CTRL+R, a. Similar\r\n\
      key chords to run tests with the debugger attached. If you forget the keystrokes,\r\n\
      go to the Test-&gt;Run menu and they\xE2\x80\x99re listed there. Just memorize them.\r\n\
      </p>\r\n        <p>\r\n          <strong>Ignore most of the Visual Studio testing features. They do not help you write\r\n\
      unit or integration tests.</strong> Specifically:\r\n\
      </p>\r\n        <ul>\r\n          <li>\r\n\
      All \xE2\x80\x9CTest\xE2\x80\x9Ds available from the right-click-&gt;Add menu are a bad idea. Add a \xE2\x80\x9CClass\xE2\x80\x9D\r\n\
      instead. Diagram: \r\n\
      </li>\r\n        </ul>\r\n        <p>\r\n          <img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"mstest1\" border=\"0\" alt=\"mstest1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/TFS-As-Your-CI-Server-Only-Positive-Take_DC45/mstest1_3.png\" width=\"704\" height=\"689\" />\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <strong>Create Unit Test (</strong>\xE2\x80\x9CUnit Test\xE2\x80\xA6\xE2\x80\x9D as seen in the screenshot above<strong>)\r\n\
      in particular will only mislead you.</strong> The other tests (e.g. Coded UI Tests)\r\n\
      are useful in other contexts, but I can\xE2\x80\x99t think of any situation for which the \xE2\x80\x9CCreate\r\n\
      Unit Test\xE2\x80\x9D dialog is useful. \r\n\
      </li>\r\n        </ul>\r\n        <p>\r\n          <strong>Start from an empty class when writing new unit tests.</strong> While the\r\n\
      \xE2\x80\x9CBasic Unit Test\xE2\x80\x9D template works (and is an excellent tool to help you learn the MSTest\r\n\
      attributes), a clean file is better.\xC2\xA0 Apply YAGNI. You don\xE2\x80\x99t need a TestInitialize\r\n\
      or ClassInitialize method yet, so don\xE2\x80\x99t add them. You can add either of them later,\r\n\
      if you need them. For now, leave them out. YAGNI. This is what one of my new test\r\n\
      classes look like:\r\n\
      </p>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/TFS-As-Your-CI-Server-Only-Positive-Take_DC45/mstest2_2.png\">\r\n            <img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"mstest2\" border=\"0\" alt=\"mstest2\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/TFS-As-Your-CI-Server-Only-Positive-Take_DC45/mstest2_thumb.png\" width=\"704\" height=\"232\" />\r\n          </a>\r\n          <br />\r\n          <font size=\"1\">*note: I am using this naming convention presently. It\xE2\x80\x99s not so bad.\r\n\
      We add the class name prefix to the method name (UrlHelper_) so test results can be\r\n\
      sorted and understood and so there aren\xE2\x80\x99t hundreds of \xE2\x80\x9CWhen_etc\xE2\x80\x9D names in a row. And\r\n\
      yes, I\xE2\x80\x99m aware that you can add columns, specifically the test class\xE2\x80\x99s full name,\r\n\
      to the test results display, but it\xE2\x80\x99s not a first-class citizen and doesn\xE2\x80\x99t help when\r\n\
      running tests in the build. <strong>Stay on the rails</strong> and just embed the\r\n\
      class name in your test method. Side note: sometimes I need to split out my test classes\r\n\
      to support more than one test fixture (context) per class-under-test, and I do so.\r\n\
      Read up on test fixtures and class-per-fixture if you\xE2\x80\x99re intrigued as to why I\xE2\x80\x99d want\r\n\
      such a thing.</font>\r\n        </p>\r\n        <p>\r\n          <strong>If you have a bad test portfolio (i.e. \xE2\x80\x9Cour tests suck\xE2\x80\x9D), it\xE2\x80\x99s not MSTest\xE2\x80\x99s\r\n\
      fault</strong>. Using NUnit, XUnit, MSpec, or any of the (literally 20 or so) .NET\r\n\
      BDD frameworks will not help you if you don\xE2\x80\x99t have the basics. MSTest is indeed limiting\r\n\
      in some ways, but I\xE2\x80\x99m far more limited by my coding/design knowledge than MSTest itself.\r\n\
      With not much extra effort, you can be successful with MSTest. So, now that we\xE2\x80\x99re\r\n\
      not blaming MSTest, how do we improve our bad tests?\r\n\
      </p>\r\n        <p>\r\n          <strong>Learn</strong> about unit testing, integration testing, acceptance testing,\r\n\
      ATDD, BDD, design by example, context/specification, behavior testing, UI testing,\r\n\
      \xE2\x80\x9Csubcutaneous\xE2\x80\x9D UI testing, functional testing, end-to-end tests, fast/slow tests,\r\n\
      design tests, outside-in tests, mocks, stubs, fakes, doubles, what to test, what not\r\n\
      to test, when to delete tests, when to apply DRY to your tests and when not, how much\r\n\
      to maintain your tests, how to organize your tests, the misrepresentation of test\r\n\
      fixtures as TestClasses, using automocking tools, using IoC with tests, using object\r\n\
      mothers, using test builders. Dealing with threading. Using SQLite in-memory with\r\n\
      your ORM to speed up your integration tests. I can\xE2\x80\x99t tell you how to write your tests\r\n\
      or why today. Everyone else (\xE2\x80\x9Cthe entire internet combined\xE2\x80\x9D) can.\r\n\
      </p>\r\n        <p>\r\n          <strong>Troubleshooting: if a test just flat-out isn\xE2\x80\x99t running, find it in the test\r\n\
      list (Test-&gt;Windows-&gt;Test List Editor) and ensure it is enabled.</strong> Disabled\r\n\
      tests just don\xE2\x80\x99t run. MSTest allows you to disable tests via the test lists view,\r\n\
      presumably because \xE2\x80\xA6 I don\xE2\x80\x99t know why. But it can be done, and it\xE2\x80\x99s really weird when\r\n\
      someone does it and I can\xE2\x80\x99t run a test and I don\xE2\x80\x99t know why.\r\n\
      </p>\r\n        <p>\r\n          <strong>I don\xE2\x80\x99t know what to do with the .vsmdi file either.</strong> Check it in\r\n\
      and try to pretend it doesn\xE2\x80\x99t exist. It stores such things as the mysterious \xE2\x80\x9CTest\r\n\
      Is Enabled\xE2\x80\x9D flag, and details for any test lists you may have, and all of these wonderful\r\n\
      things. If you accidentally break the vsmdi file after checking it in, use the power\r\n\
      and magic of source control and revert changes.\r\n\
      </p>\r\n        <p>\r\n          <strong>Related: If you need to disable a test, use the [Ignore] attribute like every\r\n\
      other framework.</strong> Don\xE2\x80\x99t argue, just do it.\r\n\
      </p>\r\n        <p>\r\n          <strong>Related: I haven\xE2\x80\x99t found a use for test lists.</strong> I\xE2\x80\x99m applying YAGNI\r\n\
      and ignoring them until I can figure out how to use them. Don\xE2\x80\x99t use test lists unless\r\n\
      you know why you should.\r\n\
      </p>\r\n        <h3>TFS as a continuous integration server\r\n\
      </h3>\r\n        <p>\r\n\
      First, let me define <strong>build machine</strong> as the computer on which your\r\n\
      TFS build agent runs. Bueno. Let\xE2\x80\x99s get rolling.\r\n\
      </p>\r\n        <p>\r\n          <strong>Turn off code coverage?</strong> According to several blog posts (<a href=\"http://bartwullems.blogspot.com/2010/02/code-coverage-issues-with-team-build.html\">here\xE2\x80\x99s\r\n\
      one</a>), if your build fails because \xE2\x80\x9C<em>The process cannot access the file \xE2\x80\x98data.coverage'\r\n\
      because it is being used by another process.</em>\xE2\x80\x9D, then you need to turn off code\r\n\
      coverage.\r\n\
      </p>\r\n        <p>\r\n          <strong>On your build machine, restart the build agent every evening to prevent slowness\r\n\
      caused by memory leaks.</strong> Don\xE2\x80\x99t argue, just do it, particularly if you notice\r\n\
      your builds slow down after a while. If you\xE2\x80\x99re horrified by the thought of restarting\r\n\
      services as a rule, you should look into the wealth of options IIS provides to restart\r\n\
      unhealthy app pools. You\xE2\x80\x99re not alone. According to Unix guys, It\xE2\x80\x99s the Windows way.\r\n\
      Give in and just run the following script as a Windows Scheduled Task every night:\r\n\
      </p>\r\n        <p>\r\n          <font size=\"2\" face=\"Courier New\">REM BEGIN BATCH FILE SWEETNESS \r\n\
      <br /></font>\r\n          <font size=\"2\" face=\"Courier New\">REM \xE2\x80\x93=-=-=-=-=-=-=-=-\xE2\x80\x93=-=-=-=-=-=-=-=-\xE2\x80\x93=-=-=-=-=-=-=-=- \r\n\
      <br /></font>\r\n          <font size=\"2\" face=\"Courier New\">net stop TFSBuildServiceHost \r\n\
      <br /></font>\r\n          <font size=\"2\" face=\"Courier New\">net start TFSBuildServiceHost \r\n\
      <br /></font>\r\n          <font size=\"2\" face=\"Courier New\">REM \xE2\x80\x93=-=-=-=-=-=-=-=-\xE2\x80\x93=-=-=-=-=-=-=-=-\xE2\x80\x93=-=-=-=-=-=-=-=- \r\n\
      <br /></font>\r\n          <font size=\"2\" face=\"Courier New\">REM END BATCH FILE SWEETNESS</font>\r\n        </p>\r\n        <p>\r\n          <strong>Run only one build agent at a time, per build machine if you\xE2\x80\x99re running MSTest.</strong> If\r\n\
      you have one build machine, one build. Two machines, two builds. One per machine.\r\n\
      Why, you ask? MSTest aborts test runs if you run two MSTest runs simultaneously. I\r\n\
      don\xE2\x80\x99t know why. If you run NUnit or just skip unit tests altogether, you can run more\r\n\
      simultaneous builds. But to avoid phantom build failures, don\xE2\x80\x99t cheat and just run\r\n\
      one build at a time.\r\n\
      </p>\r\n        <p>\r\n          <strong>Similarly, don\xE2\x80\x99t log into or log out of the build machine while MSTest is\r\n\
      running, as it will abort any running MSTest test run.</strong> Seriously. I have\r\n\
      a theory as to why this is so, but it doesn\xE2\x80\x99t really matter why. Just know that, if\r\n\
      you\xE2\x80\x99re running tests, don\xE2\x80\x99t log in or out.\r\n\
      </p>\r\n        <p>\r\n          <strong>TFS has a tray app called \xE2\x80\x9CBuild Notifications\xE2\x80\x9D. Use it.</strong> It works\r\n\
      for notifications, which arrive within a few minutes of build completion. One caveat:\r\n\
      unlike TeamCity, you are not notified when a test run <strong>begins</strong> to fail,\r\n\
      but when the test run <strong>completes</strong>.\r\n\
      </p>\r\n        <p>\r\n          <strong>The tray app\xE2\x80\x99s build status screen cannot be trusted </strong>to be accurate,\r\n\
      so leave the tray app alone and just use Visual Studio/Team Explorer to look at your\r\n\
      builds. In other words, use the TFS tray app only for the alerts.\r\n\
      </p>\r\n        <p>\r\n          <img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"buildnotifications1\" border=\"0\" alt=\"buildnotifications1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/TFS-As-Your-CI-Server-Only-Positive-Take_DC45/buildnotifications1_3.png\" width=\"277\" height=\"520\" />\r\n        </p>\r\n        <p>\r\n          <strong>Refresh doesn\xE2\x80\x99t work on the build status screen in Visual Studio.</strong> It\xE2\x80\x99s\r\n\
      buggy and doesn\xE2\x80\x99t properly refresh all the time, sometimes misplacing running or completed\r\n\
      builds. To work around this behavior and truly refresh, close and reopen the window.\r\n\
      </p>\r\n        <h3>Work in progress \xE2\x80\x93 part 2 to come\r\n\
      </h3>\r\n        <p>\r\n\
      Hello everybody! If I\xE2\x80\x99m ignorant of something that would solve any of the problems\r\n\
      I\xE2\x80\x99ve experienced above (notably, speeding up test runs would be GREAT), let me know.\r\n\
      </p>\r\n        <p>\r\n\
      Assuming I get up the gumption, I\xE2\x80\x99m also going to write a second post covering:\r\n\
      </p>\r\n        <ul>\r\n          <li>\r\n\
      2 second template chooser workflow \r\n\
      </li>\r\n          <li>\r\n\
      JFHCI, which has poisoned me against workflow foundation forever and which informs\r\n\
      my \xE2\x80\xA6 am I allowed to use the word <em>philosophy</em> when describing build systems?\r\n\
      Let\xE2\x80\x99s go with it: \xE2\x80\xA6informs my build system philosophy. \r\n\
      <ul><li>\r\n\
      Preferring a malleable (i.e., code-based, not XML or XAML) build script, \r\n\
      </li><li>\r\n\
      Hardcoding developer configuration the smart way in my C# project, i.e. where it\xE2\x80\x99s\r\n\
      easiest to change \r\n\
      </li><li>\r\n\
      Minimizing premature configuration and thus, minimizing web.config/app.config file\r\n\
      sizes and the nightmare that is XML transforms \r\n\
      </li><li>\r\n\
      However, using WF where it works: adding build \xE2\x80\x9Carguments\xE2\x80\x9D for things that you actually\r\n\
      do change from build to build. E.g. changing the drop folder, turning off automated\r\n\
      deployment to a dev environment. \r\n\
      </li></ul></li>\r\n          <li>\r\n\
      Jailbreak from XAML prison: \r\n\
      <ul><li>\r\n\
      Calling out to MSBuild \r\n\
      </li><li>\r\n\
      Calling out to PowerShell \r\n\
      </li><li>\r\n\
      Calling out to custom Activities in C# (and why) \r\n\
      </li></ul></li>\r\n        </ul>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Pretend You\xE2\x80\x99re On The Domain With Runas /NetOnly</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/PretendYoureOnTheDomainWithRunasNetOnly.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,22d7823f-6b6b-4ebc-99c5-6e7656e20108.aspx</id>\r\n    <published>2011-02-01T22:00:00-08:00</published>\r\n    <updated>2011-01-29T13:37:38.947321-08:00</updated>\r\n    <category term=\"Awesomeness\" label=\"Awesomeness\" scheme=\"http://www.pseale.com/blog/CategoryView,category,Awesomeness.aspx\" />\r\n    <content type=\"html\">&lt;h3&gt;Bullet point summary, for the skimmers\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      Your attention is already waning, so I\xE2\x80\x99ll get with the bullet points:\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; is useful in surprising ways, including troubleshooting\r\n\
      build breakages, security testing, and running as your service account. This is the\r\n\
      old, boring runas. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; features the &lt;font size=\"3\" face=\"Courier New\"&gt;/netonly&lt;/font&gt; switch,\r\n\
      which &lt;strong&gt;makes the impossible possible&lt;/strong&gt; on VMs and off-domain machines.\r\n\
      I\xE2\x80\x99ll save some of the thunder for later. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;h3&gt;Introduction\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;a href=\"http://www.youtube.com/results?search_query=nick+burns\"&gt;&lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: right; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"Nick Burns\" border=\"0\" alt=\"You&amp;#39;re welcome!\" align=\"right\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/nick_burns_3.jpg\" width=\"240\" height=\"180\" /&gt;&lt;/a&gt;I\r\n\
      feel sorry for everyone who is forced to do their day-to-day work on a corporate machine.\r\n\
      It seems that in the last few years, virus scanners have dug their filthy, performance-sapping\r\n\
      claws into your network connection, your email, and your (Internet Explorer) browser.\r\n\
      All this added to the \xE2\x80\x9Cscan every file before it\xE2\x80\x99s accessed\xE2\x80\x9D behavior we\xE2\x80\x99ve all come\r\n\
      to know and love.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      On behalf of corporate IT everywhere: &lt;em&gt;&lt;strong&gt;you\xE2\x80\x99re welcome&lt;/strong&gt;&lt;/em&gt;.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      It\xE2\x80\x99s brutal out there for those of us beholden to the dreaded corporate desktop image.\r\n\
      Oops\xE2\x80\x94did I say us? I mean you. You\xE2\x80\x94you\xE2\x80\x99re beholden to whatever IT gives you. I\xE2\x80\x99m living\r\n\
      the high life*. \r\n\
      &lt;br /&gt;\r\n\
      &lt;font size=\"1\"&gt;* this is a metaphor&lt;/font&gt;&amp;#160;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      At work we\xE2\x80\x99ve run some tests (literally\xE2\x80\x94we routinely run a pile of integration tests),\r\n\
      and my old, busted laptop* is somewhere in the area of&lt;strong&gt; five times faster&lt;/strong&gt; than\r\n\
      the new hotness desktops running the corporate Windows XP image. But let\xE2\x80\x99s not belabor\r\n\
      the point. \r\n\
      &lt;br /&gt;\r\n\
      &lt;font size=\"1\"&gt;* \xE2\x80\x9CWhat a piece of junk!\xE2\x80\x9D \xE2\x80\x9CShe'll make point five past lightspeed.\r\n\
      She may not look like much, but she's got it where it counts, kid. I've made a lot\r\n\
      of special modifications myself.\xE2\x80\x9D&lt;/font&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      For those of you reading this on a corporate desktop, thanks for getting this far,\r\n\
      but the following blog post probably won\xE2\x80\x99t help you. You\xE2\x80\x99re already on the domain,\r\n\
      so you will rarely (if ever) need this trick! Enjoy running Windows XP for another\r\n\
      five-to-ten years!\r\n\
      &lt;/p&gt;\r\n\
      &lt;h3&gt;Now that we\xE2\x80\x99ve gotten rid of the losers\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      \xE2\x80\xA6let\xE2\x80\x99s get on with it. &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; allows you to impersonate\r\n\
      another user while running most any Windows app.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      For server admins, this means you can run with an unprivileged account for your day-to-day\r\n\
      tasks (like waiting patiently while Outlook runs &lt;font face=\"Courier New\"&gt;chkdsk&lt;/font&gt; on\r\n\
      your 4GB PST file) and perform your catastrophic admin mistakes (like accidentally\r\n\
      promote a domain controller) inside a management console or command shell running\r\n\
      as a Domain Admin. You still make catastrophic mistakes, but not catastrophic mistakes\r\n\
      specifically because you\xE2\x80\x99re running a Windows account with full administrative privileges\r\n\
      all the time. There\xE2\x80\x99s a whole world of catastrophic mistakes for you to discover and\r\n\
      experience as an admin. Moving along.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      This &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; behavor is the plain, vanilla &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; ,\r\n\
      and you can get this behavior by&lt;font face=\"Courier New\"&gt; SHIFT+RIGHTCLICKing&lt;/font&gt; on\r\n\
      pretty much anything in Windows. To make things easier, you can also create shortcuts\r\n\
      on your desktop to always prompt you to log in as someone else (AKA \xE2\x80\x9Crun as\xE2\x80\x9D someone\r\n\
      else).\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      For developers, this means you can run SQL Server Management Studio as your app\xE2\x80\x99s\r\n\
      service account so you can talk to your test database\xE2\x80\xA6your app\xE2\x80\x99s &lt;strong&gt;test&lt;/strong&gt; service\r\n\
      account, I\xE2\x80\x99m sure.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Also for developers, you can also launch a browser window as another Windows user.\r\n\
      This is a great trick for testing out security on web apps that use Integrated Windows\r\n\
      Authentication.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Also also for developers, you can impersonate your build service account to run your\r\n\
      build so that your prompt runs &lt;strong&gt;100.0% precisely the way TFS/TeamCity/Whatever\r\n\
      runs it&lt;/strong&gt;, in order to troubleshoot any weird problem with your build. &lt;strong&gt;&lt;font color=\"#ff0000\"&gt;&amp;lt;==THIS\r\n\
      IS A LIFESAVER&lt;/font&gt;&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      For SP admins, you can launch browser windows as your farm account or whatever admin\r\n\
      account you have, or of course, completely unprivileged accounts to test security\r\n\
      trimming.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Let\xE2\x80\x99s see this in action:\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"runas8\" border=\"0\" alt=\"runas8\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas8_3.png\" width=\"572\" height=\"367\" /&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Let\xE2\x80\x99s break down what just happened:&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ol&gt;\r\n\
      &lt;li&gt;\r\n\
      I ran PowerShell as myself (username \xE2\x80\x9CP\xE2\x80\x9D). This is evidenced when I interrogate the\r\n\
      USERNAME environment variable. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      From PowerShell, I perform a &lt;font face=\"Courier New\"&gt;Runas&lt;/font&gt; &lt;font face=\"Courier New\"&gt;cmd.exe&lt;/font&gt;.\r\n\
      This launches the cmd.exe shell.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      From the impersonated cmd.exe shell, I interrogate the USERNAME environment variable.\r\n\
      This shell is running as svc-sql. &lt;em&gt;So smooth&lt;/em&gt;.&lt;/li&gt;\r\n\
      &lt;/ol&gt;\r\n\
      &lt;p&gt;\r\n\
      And yes, I give the SQL instance running on my laptop its own service account\xE2\x80\xA6what\r\n\
      of it. I\xE2\x80\x99m &lt;strong&gt;not crazy&lt;/strong&gt;&lt;!&amp;#8212;EndFragment&amp;#8212;&gt;.\r\n\
      &lt;/p&gt;\r\n\
      &lt;h3&gt;But I knew all that already\xE2\x80\x94what if I\xE2\x80\x99m not on the domain?\r\n\
      &lt;/h3&gt;\r\n\
      &lt;blockquote&gt; \r\n\
      &lt;p&gt;\r\n\
      I\xE2\x80\x99ll &lt;a href=\"http://twitter.com/#!/pseale/status/12632534634463232\"&gt;bring the thunder&lt;/a&gt;,\r\n\
      I promise.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      First of all, a slight technicality. Wherever I say \xE2\x80\x9Cdomain\xE2\x80\x9D in this blog post, I\r\n\
      mean \xE2\x80\x9CAD forest\xE2\x80\x9D. Sometimes being precise with your vocabulary isn\xE2\x80\x99t helpful.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      So. There are two major scenarios wherein you need (absolutely NEED) to run as a user\r\n\
      on a different domain.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      ONE: you\xE2\x80\x99re running a virtual machine running in its own little virtual world on its\r\n\
      own virtual domain, and &lt;strong&gt;NEED&lt;/strong&gt; to talk to the real domain, so that\r\n\
      you can connect to the test database server and run some queries.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      TWO: you\xE2\x80\x99re running on a non-domain laptop running its own brand of non-corporate-imaged\r\n\
      bliss, and &lt;strong&gt;NEED&lt;/strong&gt; to talk to the real domain, so that you can connect\r\n\
      to the test database server and run some queries. Maybe accidentally DROP some databases\r\n\
      while your users are testing.\r\n\
      &lt;/p&gt;\r\n\
      &lt;/blockquote&gt; \r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;NEED. This is the face of NEED.&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Also, more rarely, if you NEED to connect Microsoft Excel directly to your database\r\n\
      server to run a query, but must authenticate with Integrated authentication as another\r\n\
      user? And you\xE2\x80\x99re running off-domain? Don\xE2\x80\x99t puke: pivot tables are really, really beautiful,\r\n\
      and I mean that sincerely. My love for pivot tables is pure as the driven snow. Anyway,\r\n\
      I\xE2\x80\x99m not here to defend my Excel+SQL abomination, I\xE2\x80\x99m here to bring the thunder.\r\n\
      &lt;/p&gt;\r\n\
      &lt;h3&gt;Enter the /netonly switch\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      Using &lt;font face=\"Courier New\"&gt;runas /netonly&lt;/font&gt; allows you to run your app locally\r\n\
      as you (in my case, the user named \xE2\x80\x9CP\xE2\x80\x9D), while authenticating over a network with\r\n\
      another user. It\xE2\x80\x99s like a rare kind of magic, like a hornless unicorn.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Also like rare magic, I have no idea how &lt;font face=\"Courier New\"&gt;runas /netonly&lt;/font&gt; works.\r\n\
      There\xE2\x80\x99s probably somebody who knows how it works (&lt;a href=\"http://blogs.msdn.com/b/oldnewthing/archive/2004/11/29/271551.aspx\"&gt;someone\r\n\
      who has gazed into Win32, and Win32 has gazed back into them&lt;/a&gt;), but not me. It\xE2\x80\x99s\r\n\
      good enough for me to know that &lt;font face=\"Courier New\"&gt;runas &lt;/font&gt;works\xE2\x80\xA6somehow.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"runas1\" border=\"0\" alt=\"runas1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas1_3.png\" width=\"704\" height=\"251\" /&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Let me try to break down what just happened in the screenshot above (and note the\r\n\
      differences with between vanilla &lt;font face=\"Courier New\"&gt;runas &lt;/font&gt;and &lt;font face=\"Courier New\"&gt;runas\r\n\
      /netonly&lt;/font&gt;):\r\n\
      &lt;/p&gt;\r\n\
      &lt;ol&gt;\r\n\
      &lt;li&gt;\r\n\
      I ran PowerShell as myself (username \xE2\x80\x9CP\xE2\x80\x9D). This is evidenced when I interrogate the\r\n\
      USERNAME environment variable. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      From PowerShell, I perform a &lt;font face=\"Courier New\"&gt;runas /netonly cmd.exe&lt;/font&gt;.\r\n\
      This launches the cmd.exe shell.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      From the cmd.exe shell, I interrogate the USERNAME environment variable. The impersonated\r\n\
      shell is still running as \xE2\x80\x9CP\xE2\x80\x9D. &lt;strong&gt;However&lt;/strong&gt;, were I to authenticate with\r\n\
      resources on another domain, Windows would send the credentials for \xE2\x80\x9COnTheINTERNET\\NobodyKnowsYoureADOG\xE2\x80\x9D.&lt;/li&gt;\r\n\
      &lt;ol&gt;\r\n\
      &lt;li&gt;\r\n\
      This is the point where I should try to prove that, as far as authenticating over\r\n\
      the network, your program behaves as if it\xE2\x80\x99s the impersonated user. Unfortunately\r\n\
      I just tried to connect to CodePlex\xE2\x80\x99s TFS as my example, and the work involved connecting\r\n\
      to CodePlex via TFS depressed me, so, I won\xE2\x80\x99t be attempting this today. Just try out\r\n\
      one of my sample scripts for yourself; it will take all of 10 seconds to verify. Side\r\n\
      note: THANK YOU, CodePlex team, for first funding SVNBridge, THEN including direct\r\n\
      SVN support, then providing direct Mercurial support.&lt;/li&gt;\r\n\
      &lt;/ol&gt;\r\n\
      &gt;\r\n\
      &lt;h4&gt;Bringing the thunder: SQL 2005 management studio\r\n\
      &lt;/h4&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;font size=\"3\" face=\"Courier New\"&gt;REM the following script assumes a 64-bit system, \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM and assumes you installed SQL 2005 in\r\n\
      the default folder \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM change the parts below in &lt;font color=\"#ff0000\"&gt;RED&lt;/font&gt; \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;runas /netonly /user:&lt;font color=\"#ff0000\"&gt;REALDOMAIN&lt;/font&gt;\\&lt;font color=\"#ff0000\"&gt;YOURDOMAINUSERNAME&lt;/font&gt; &amp;quot;C:\\Program\r\n\
      Files (x86)\\Microsoft SQL Server\\90\\Tools\\Binn\\VSShell\\Common7\\IDE\\SqlWb.exe&amp;quot;&lt;/font&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"runas2\" border=\"0\" alt=\"runas2\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas2_3.png\" width=\"681\" height=\"346\" /&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;h4&gt;Bringing the thunder: SQL 2008 (&lt;font color=\"#ff0000\"&gt;eight&lt;/font&gt;) management\r\n\
      studio\r\n\
      &lt;/h4&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;font size=\"3\" face=\"Courier New\"&gt;REM the following script assumes a 64-bit system, \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM and assumes you installed SQL 2008 in\r\n\
      the default folder \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM change the parts below in &lt;font color=\"#ff0000\"&gt;RED&lt;/font&gt; \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;runas /netonly /user:&lt;font color=\"#ff0000\"&gt;REALDOMAIN&lt;/font&gt;\\&lt;font color=\"#ff0000\"&gt;YOURDOMAINUSERNAME&lt;/font&gt; &amp;quot;C:\\Program\r\n\
      Files (x86)\\Microsoft SQL Server\\100\\Tools\\Binn\\VSShell\\Common7\\IDE\\ssms.exe&amp;quot;&lt;/font&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"runas3\" border=\"0\" alt=\"runas3\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas3_3.png\" width=\"681\" height=\"346\" /&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;h4&gt;Bringing the thunder: Excel 2007\r\n\
      &lt;/h4&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;font size=\"3\" face=\"Courier New\"&gt;REM the following script assumes a 64-bit system, \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM and assumes you installed Office in the\r\n\
      default folder \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;REM change the parts below in &lt;font color=\"#ff0000\"&gt;RED&lt;/font&gt; \r\n\
      &lt;br /&gt;\r\n\
      &lt;/font&gt;&lt;font size=\"3\" face=\"Courier New\"&gt;runas /netonly /user:&lt;font color=\"#ff0000\"&gt;REALDOMAIN&lt;/font&gt;\\&lt;font color=\"#ff0000\"&gt;YOURDOMAINUSERNAME&lt;/font&gt; &amp;quot;C:\\Program\r\n\
      Files (x86)\\Microsoft Office\\Office12\\EXCEL.EXE&amp;quot;&lt;/font&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"runas4\" border=\"0\" alt=\"runas4\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas4_3.png\" width=\"681\" height=\"346\" /&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;h3&gt;Still not perfect\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      There are a few scenarios where this still doesn\xE2\x80\x99t work:\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      TFS command-line client running from inside a cmd.exe prompt. To be fair to the TFS\r\n\
      command-line client, it goes out of its way to let you type in credentials at runtime.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Remote debugging off-domain in Visual Studio is still a challenge. I just tried to\r\n\
      set it up on my laptop this last week, and &lt;strong&gt;failed&lt;/strong&gt;. Note remote debugging\r\n\
      requires some firewall tweaking as well, so maybe this is a PEBKAC-type problem and\r\n\
      not a &lt;font face=\"Courier New\"&gt;runas /netonly&lt;/font&gt; problem.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;h3&gt;You\xE2\x80\x99re welcome\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      The pattern is simple: give &lt;font face=\"Courier New\"&gt;runas&lt;/font&gt; your name, full\r\n\
      path to the exe, and type in your password when prompted. If you have NEED to run\r\n\
      the command frequently, create a batch file and quickly make a &lt;a href=\"http://www.pseale.com/blog/SlickrunProtips.aspx\"&gt;SlickRun&lt;/a&gt; MagicWord. \r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Or, let\xE2\x80\x99s be honest, just drag a shortcut of your newly-created batch file to the\r\n\
      Windows 7 start menu and be done with it. Searching for items in the Start Menu is\r\n\
      almost as good as SlickRun\xE2\x80\x94a good enough experience such that program launchers aren\xE2\x80\x99t\r\n\
      necessary anymore.\r\n\
      &lt;/p&gt;\r\n\
      &lt;h3&gt;Credit where due\xE2\x80\xA6thanks, TWITTER! (and I guess, Ryan)\r\n\
      &lt;/h3&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;a href=\"http://twitter.com/#!/ryanmcintyre\"&gt;&lt;img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"runas5\" border=\"0\" alt=\"runas5\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Off-Domain_13D80/runas5_3.png\" width=\"761\" height=\"624\" /&gt;&lt;/a&gt;\r\n\
      &lt;/p&gt;</content>\r\n  </entry>\r\n  <entry>\r\n    <title>Use The PowerShell Host As A Better Shell</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/UseThePowerShellHostAsABetterShell.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,b7d666be-a22c-46c1-bed1-9efa99402aab.aspx</id>\r\n    <published>2011-01-17T08:00:00-08:00</published>\r\n    <updated>2011-01-14T20:29:01.471696-08:00</updated>\r\n    <category term=\"Awesomeness\" label=\"Awesomeness\" scheme=\"http://www.pseale.com/blog/CategoryView,category,Awesomeness.aspx\" />\r\n    <category term=\"PowerShell\" label=\"PowerShell\" scheme=\"http://www.pseale.com/blog/CategoryView,category,PowerShell.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      Welcome to 2011. It smells terrific here!\r\n\
      </p>\r\n        <h3>The problem\r\n\
      </h3>\r\n        <p>\r\n\
      You may not know it, but you have a problem. You\xE2\x80\x99re using the standard Windows command\r\n\
      shell. This is a problem.\r\n\
      </p>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/image_2.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/image_thumb.png\" width=\"681\" height=\"346\" />\r\n          </a>\r\n        </p>\r\n        <p>\r\n\
      The problems are manyfold and boring, so I\xE2\x80\x99ll briefly summarize:\r\n\
      </p>\r\n        <ul>\r\n          <li>\r\n\
      Cutting and pasting is a problem.</li>\r\n          <li>\r\n\
      The cmd shell\xE2\x80\x99s default history is 100 lines. This is a problem.</li>\r\n          <li>\r\n\
      DOS\xE2\x80\x99s autocomplete featureset predates the word intellisense. It\xE2\x80\x99s bad.</li>\r\n          <li>\r\n\
      DOS hates double-quotes. A lot. \r\n\
      </li>\r\n          <li>\r\n\
      DOS also hates the less-than/greater-than characters. Try this on: runas /user:PC\\windersUser\r\n\
      /password:\xE2\x80\x9DI believe in using long passphrases and good security etc and so forth\r\n\
      so I\xE2\x80\x99ll throw in some special characters, like double-quotes (\xE2\x80\x9C) and a bunch of other\r\n\
      random stuff: &lt;&gt;file1\"</li>\r\n          <ul>\r\n            <li>\r\n\
      I waxed a little eloquent on the point above, and could go into futher boring detail,\r\n\
      but just take my word for it. DOS doesn\xE2\x80\x99t do windows, and DOS doesn\xE2\x80\x99t escape special\r\n\
      characters. Ever.</li>\r\n          </ul>\r\n        </ul>\r\n        <h3>The solution\r\n\
      </h3>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk1_4.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"junk1\" border=\"0\" alt=\"junk1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk1_thumb_1.png\" width=\"417\" height=\"526\" />\r\n          </a>\r\n        </p>\r\n        <p>\r\n\
      The solution is to launch PowerShell. For the privileged few running Windows 7, it\r\n\
      comes pre-installed. For the rest of us, minus the crazy dude still running Windows\r\n\
      2000 for security/paranoia reasons, PowerShell can be downloaded.\r\n\
      </p>\r\n        <p>\r\n\
      A small aside: the Start menu in Windows 7 is excellent. I don\xE2\x80\x99t maintain icons on\r\n\
      my desktop, the quick launch, pin programs to the taskbar, clicking through the Start\r\n\
      Menu. I just tap the Windows key and tap in a few letters. For PowerShell, WINDOWS,\r\n\
      \xE2\x80\x9Cp\xE2\x80\x9D \xE2\x80\x9Co\xE2\x80\x9D \xE2\x80\x9Cw\xE2\x80\x9D, then ENTER. That\xE2\x80\x99s it.\r\n\
      </p>\r\n        <p>\r\n\
      I rarely use <a href=\"http://www.pseale.com/blog/SlickrunProtips.aspx\">SlickRun</a> nowadays.\r\n\
      </p>\r\n        <p>\r\n\
      Ahem. Onward.\r\n\
      </p>\r\n        <h3>So now I\xE2\x80\x99m running PowerShell\xE2\x80\xA6now what?\r\n\
      </h3>\r\n        <p>\r\n\
      You get:\r\n\
      </p>\r\n        <ol>\r\n          <li>\r\n\
      Better autocomplete, especially with file and pathnames.</li>\r\n          <li>\r\n\
      Better default settings, including an output history that stores $HUGE_NUMBER lines.</li>\r\n          <li>\r\n\
      A shell that doesn\xE2\x80\x99t hate spaces and double-quotes, and by extension, you.</li>\r\n          <li>\r\n\
      Little neat things, like dynamic vertical <strong>and horizontal</strong> resizing,\r\n\
      and\xE2\x80\xA6</li>\r\n          <li>\r\n\
      Easy cutting and pasting. Allow me to give a full tutorial below:</li>\r\n        </ol>\r\n        <h3>Cutting to the clipboard\r\n\
      </h3>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk1_6.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"junk1\" border=\"0\" alt=\"junk1\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk1_thumb_2.png\" width=\"704\" height=\"600\" />\r\n          </a>\r\n        </p>\r\n        <h3>Pasting to the PowerShell host\r\n\
      </h3>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk2_4.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"junk2\" border=\"0\" alt=\"junk2\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk2_thumb_1.png\" width=\"704\" height=\"701\" />\r\n          </a>\xC2\xA0\r\n\
      </p>\r\n        <h3>It\xE2\x80\x99s The Little Things\r\n\
      </h3>\r\n        <p>\r\n\
      Tonight I\xE2\x80\x99m working through the Ruby koans. I know, who cares. But I\xE2\x80\x99m here to tell\r\n\
      you that, though there\xE2\x80\x99s not all that much difference tonight between using the cmd\r\n\
      shell and the PowerShell host, there\xE2\x80\x99s a few little things that add up. Here\xE2\x80\x99s a little\r\n\
      thing: just now, I made this simple, tiny improvement that combined the cls command\r\n\
      and the \xE2\x80\x9Crun the koans\xE2\x80\x9D command into one line, which made iterating through the Koans\r\n\
      that much more easier. Re-running the koans is now as easy as UPARROW, ENTER:\r\n\
      </p>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk3_2.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"junk3\" border=\"0\" alt=\"junk3\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk3_thumb.png\" width=\"704\" height=\"103\" />\r\n          </a>\r\n        </p>\r\n        <h3>Footnotes\r\n\
      </h3>\r\n        <p>\r\n\
      I haven\xE2\x80\x99t bothered trying Console2 yet.\r\n\
      </p>\r\n        <p>\r\n\
      I know cmd.exe is <em>technically</em> not the DOS shell. <em>Technically</em> it\r\n\
      still has all the interpreter problems DOS 3.3 had, so I\xE2\x80\x99m calling it DOS, plus the\r\n\
      full name for the built-in shell is probably something like Microsoft Windows Command\r\n\
      Shell 2011 for the Microsoft Windows 7 Operating System Administration Pack R2 (KB994112).\r\n\
      I just made that up, but if you think the name is a total exaggeration, go research\r\n\
      why we call \xE2\x80\x9CVSTO\xE2\x80\x9D by a four-letter acronym.\r\n\
      </p>\r\n        <h3>Running cmd.exe inside PowerShell (strictly for the lazy)\r\n\
      </h3>\r\n        <p>\r\n\
      If you love everything I\xE2\x80\x99ve said, but can\xE2\x80\x99t summon the mental energy to learn remedial\r\n\
      PowerShell, that\xE2\x80\x99s okay. You can still gain some benefit from the PowerShell host\r\n\
      running the DOS command shell! Just type \xE2\x80\x9Ccmd&lt;ENTER&gt;\xE2\x80\x9D at the prompt, to roll\r\n\
      into the land of LEGACY.\r\n\
      </p>\r\n        <p>\r\n          <a href=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk4_2.png\">\r\n            <img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"junk4\" border=\"0\" alt=\"junk4\" src=\"http://www.pseale.com/blog/content/binary/Windows-Live-Writer/Use-The-PowerShell-Host-As-A-Better-Shel_12420/junk4_thumb.png\" width=\"704\" height=\"255\" />\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Linkblogging: Hardcoding Vs. Configuration</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/LinkbloggingHardcodingVsConfiguration.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,c60e7830-c63c-4db2-abdf-5c870da6789e.aspx</id>\r\n    <published>2010-08-03T22:00:00-07:00</published>\r\n    <updated>2010-07-30T21:28:16.9029166-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      Sometimes you keep things \xE2\x80\x9Cin the family.\xE2\x80\x9D Other times, instead of crafting and sending\r\n\
      an email to your teammates with the assumption no one read it, you blog whatever you\r\n\
      were going to write in the email. Then, because (let\xE2\x80\x99s be honest) none of your teammates\r\n\
      read your blog, you cut-and-paste the content from your blog post and send the email\r\n\
      anyway. They\xE2\x80\x99re not reading your email either way, but at least you can now cite yourself\r\n\
      as an authority, now that you\xE2\x80\x99ve blogged about the topic. Everybody knows blogging\r\n\
      is a big deal.\r\n\
      </p>\r\n        <p>\r\n\
      This blog post is the latter case. In case you weren\xE2\x80\x99t taking careful notes from the\r\n\
      above paragraph, by \xE2\x80\x9Cthe latter\xE2\x80\x9D I mean \xE2\x80\x9Cthis post was inspired by a work argument,\r\n\
      and I promise not to sound too vindictive or passive/agressivey while presenting my\r\n\
      case.\xE2\x80\x9D Enjoy!\r\n\
      </p>\r\n        <p>\r\n          <strong>From Ayende </strong>(disclaimer: he wrote a book about DSLs):\r\n\
      </p>\r\n        <ul>\r\n          <li>\r\n            <a href=\"http://ayende.com/Blog/archive/2008/08/21/Enabling-change-by-hard-coding-everything.aspx\">Enabling\r\n\
      change by hard-coding everything</a> \xE2\x80\x93 Here Ayende teases at what is to come. Read\r\n\
      the comments, if only to hear speculative counter-arguments (or more specifically,\r\n\
      read about real-world scenarios where hardcoding is abused).</li>\r\n          <li>\r\n            <a href=\"http://ayende.com/Blog/archive/2008/08/21/Enabling-change-by-hard-coding-everything-the-smart-way.aspx\">Enabling\r\n\
      change by hard-coding everything: the smart way</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"http://ayende.com/Blog/archive/2008/08/22/JFHCI-The-evil-that-is-configuration.aspx\">JFHCI:\r\n\
      The evil that is configuration</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"http://ayende.com/Blog/archive/2008/08/22/JFHCI-Considering-Scale.aspx\">JFHCI:\r\n\
      Considering scale</a>\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          <strong>Similar posts I came across recently:</strong>\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <a href=\"http://laribee.com/configuration-come-to-jesus\">Configuration \xE2\x80\x98come to Jesus\xE2\x80\x99</a> \xE2\x80\x93\r\n\
      David Laribee talks about the evolution of developers away from XML configuration.\r\n\
      In the comments, he gets to the heart of the matter (so, read the comments).</li>\r\n          <li>\r\n\
      Okay, apparently I didn\xE2\x80\x99t come across anything else recently. \r\n\
      </li>\r\n        </ul>\r\n        <h3>A further (lazy) case for hardcoding\r\n\
      </h3>\r\n        <p>\r\n\
      This is by no means an exhaustive linkblog post; I just (lazily) skimmed the surface.\r\n\
      If you want to look at examples of people moving away from XML configuration, look\r\n\
      at the Castle/NHibernate stack. (Windsor XML configuration and .hbm schemas are dying,\r\n\
      being replaced with, dare I say it, \xE2\x80\x9Cfluent interfaces\xE2\x80\x9D. The point isn\xE2\x80\x99t the <em>fluent </em>part,\r\n\
      the point is they\xE2\x80\x99re code-based.) Witness the ascent of psake and rake in .NET for\r\n\
      build scripts. Witness MEF and the scenarios it enables (we probably won\xE2\x80\x99t need any\r\n\
      of them, honestly). Witness FubuMVC and it\xE2\x80\x99s nigh-empty web.config.\r\n\
      </p>\r\n        <p>\r\n\
      I\xE2\x80\x99d prefer to discuss this with a concrete example, but, alas, I\xE2\x80\x99m way too lazy. Let\xE2\x80\x99s\r\n\
      just try doing this without expending any effort:\r\n\
      </p>\r\n        <p>\r\n\
      If I can summarize, XML (and by extension MSBuild and NAnt) can die in flames, and\r\n\
      I hope it does so sooner rather than later. <strike>The love of money </strike>XML\r\n\
      configuration is the root of all evil. The end.\r\n\
      </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>I Took A Shot At Object Calisthenics</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/ITookAShotAtObjectCalisthenics.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,5bf036b7-3d60-443b-bff9-105be2984ced.aspx</id>\r\n    <published>2010-08-03T21:40:55.1544145-07:00</published>\r\n    <updated>2010-08-04T20:47:18.9182205-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <category term=\"Object Calisthenics\" label=\"Object Calisthenics\" scheme=\"http://www.pseale.com/blog/CategoryView,category,ObjectCalisthenics.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n          <strong>\r\n            <font color=\"#ff0000\">Updated 2010-08-04:</font>\r\n          </strong> I\xE2\x80\x99ve fixed some\r\n\
      of my word awkwardness, and added several TODOs at the bottom of the list. For your\r\n\
      enjoyment!\r\n\
      </p>\r\n        <p>\r\n\
      The problem with coding dojos is that no one else seems to want to run them. I\xE2\x80\x99ve\r\n\
      long desired to participate in a coding dojo where we work through the object calisthenics\r\n\
      rules. We\xE2\x80\x99ve attempted it as a group once before, but the results were poor. So poor,\r\n\
      in fact, that when reminded of it recently, one participant gave such a look of horror\r\n\
      and shouted \xE2\x80\x9Coh no!\xE2\x80\x9D It was as if he\xE2\x80\x99d seen a chupacabra and was looking to escape\r\n\
      out the window. But it wasn\xE2\x80\x99t a chupacabra\xE2\x80\x94he\xE2\x80\x99s just been through our group object\r\n\
      calisthenics dojo and suffered a flashback. No worries Michael, you\xE2\x80\x99ll remain anonymous.\r\n\
      </p>\r\n        <p>\r\n\
      Despite distasteful memories and general horribleness surrounding everything I knew\r\n\
      about object calisthenics, I plodded onward. Slowly. And, some year or so later, here\r\n\
      I am, blogging about it, and here you are, skimming my blog post, reading every fifth\r\n\
      sentence or so. I don\xE2\x80\x99t blame you.\r\n\
      </p>\r\n        <p>\r\n\
      I\xE2\x80\x99m working through object calisthenics because I want to try out the rules, and because\r\n\
      I\xE2\x80\x99m preparing for the <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/223/Default.aspx\">upcoming\r\n\
      public Houston TechFest dojo</a>. I plan to use examples from this codebase to explain\r\n\
      each of the rules, so it\xE2\x80\x99s important to get it right. You don\xE2\x80\x99t have to agonize over\r\n\
      every tiny detail as much as me. Agonizing over code is <strong>not</strong> a rule\r\n\
      of object calisthenics; for this you can be thankful.\r\n\
      </p>\r\n        <p>\r\n\
      The problem with coding dojos is that no one else seems to want to run them. So I\xE2\x80\x99ll\r\n\
      do the best I can come October 9th. I hope I\xE2\x80\x99m prepared.\r\n\
      </p>\r\n        <h3>A note about object calisthenics\r\n\
      </h3>\r\n        <p>\r\n\
      I wrote this project following the rules (and over-arching goals) outlined in <a href=\"http://webcache.googleusercontent.com/search?q=cache:www.xpteam.com/jeff/writings/objectcalisthenics.rtf+object+calisthenics\">the\r\n\
      original object calisthenics essay [Warning: RTF; will blow your mind]</a>. One major\r\n\
      problem with choosing KataPotter to solve, is that I solved the problem without creating\r\n\
      many collaborating objects. The essay says to \xE2\x80\x9Cspend 20 hours and 1000 lines writing\r\n\
      code that conforms 100% to these rules.\xE2\x80\x9D KataPotter is too small.\r\n\
      </p>\r\n        <p>\r\n\
      If I get in a blogging frenzy, I\xE2\x80\x99ll blog in more detail about my experiences, and\r\n\
      I\xE2\x80\x99ll go into depth into each rule and how I learned something from it. But, definitely\r\n\
      not right now.\r\n\
      </p>\r\n        <h3>I\xE2\x80\x99ve uploaded it to GitHub\r\n\
      </h3>\r\n        <p>\r\n\
      I\xE2\x80\x99ll cut to the chase: <a title=\"http://github.com/pseale/KataPotterObjectCalisthenics\" href=\"http://github.com/pseale/KataPotterObjectCalisthenics\">http://github.com/pseale/KataPotterObjectCalisthenics</a> \xE2\x80\x93 <strong>this\r\n\
      is the 90% finished product.</strong> I\xE2\x80\x99ll list the remaining effort below.\r\n\
      </p>\r\n        <h3>Now for the remaining 90%\r\n\
      </h3>\r\n        <p>\r\n          <strong>Obvious things I\xE2\x80\x99ve missed?</strong>\r\n        </p>\r\n        <p>\r\n\
      Let me know. I don\xE2\x80\x99t know what I don\xE2\x80\x99t know. These are the rumsfeldian unknown unknowns.\r\n\
      Help me make them known unknowns, or known knowns, or known known knowns. Whatever\r\n\
      they are, let me know.\r\n\
      </p>\r\n        <p>\r\n          <strong>Allow my custom collections to implement IEnumerable&lt;T&gt;; remove now-extraneous\r\n\
      methods.</strong>\xC2\xA0\r\n\
      </p>\r\n        <p>\r\n\
      Originally I decided IEnumerable&lt;T&gt; would be \xE2\x80\x9Ccheating\xE2\x80\x9D, but you know what?\r\n\
      It\xE2\x80\x99s a collection. It\xE2\x80\x99s not cheating. I have some <em><strong><font color=\"#800080\">dumb</font></strong></em> code\r\n\
      in there because I didn\xE2\x80\x99t allow myself to deal with the collection as a collection.\r\n\
      </p>\r\n        <p>\r\n          <strong>Is this method signature a violation?</strong>\r\n        </p>\r\n        <p>\r\n\
      public Money Add(decimal amount);\r\n\
      </p>\r\n        <p>\r\n\
      Notice anything? It (potentially) violates rule #3 Wrap all primitives and strings.\r\n\
      The decimal is a primitive, and thus forbidden. I figure though, how else am I going\r\n\
      to add two Money objects to each other, if one of them can\xE2\x80\x99t tell the other Money\r\n\
      how much it has? <strong>That\xE2\x80\x99s just dumb</strong>. Too much time already has been\r\n\
      wasted thinking about this, and, seriously, how else are you going to add two objects\r\n\
      together?\r\n\
      </p>\r\n        <p>\r\n          <strong>Break up BookCollection.</strong>\r\n        </p>\r\n        <p>\r\n\
      It\xE2\x80\x99s doing too much. BookCollection should be about adding, removing, and clearing\r\n\
      books; it should be a first-class collection and nothing more. All non-collection\r\n\
      behavior should be broken into another class. Perhaps several classes, especially\r\n\
      isolating anything related to those impenetrable LINQ queries. Rule #4 says that we\r\n\
      should have first-class collections. Rule #7 says to Keep all entities small (50 lines\r\n\
      or less). Break it up.\r\n\
      </p>\r\n        <p>\r\n\
      Update: I should have been clued in by the fact that I have no less than 4 test files\r\n\
      for this class, split by behavior. Consider me thoroughly clued.\r\n\
      </p>\r\n        <p>\r\n          <strong>Write a console app that works.</strong>\r\n        </p>\r\n        <p>\r\n\
      Right now Program.cs sits alone, forlorn. It needs to a) get a list of books to calculate,\r\n\
      b) run the calculator, c) emit the result. It\xE2\x80\x99s not hard, I\xE2\x80\x99ve simply neglected it.\r\n\
      Also, for the record, I don\xE2\x80\x99t have to adhere to any rule craziness when writing the\r\n\
      console app.\r\n\
      </p>\r\n        <p>\r\n          <strong>Strategy pattern abuse? Investigate.</strong>\r\n        </p>\r\n        <p>\r\n\
      Investigate the *BookSetCostCalculator classes and figure out what the author meant\r\n\
      by Rule #2, Don\xE2\x80\x99t use the ELSE keyword. Side note: remember, his rule predated the <a href=\"http://www.antiifcampaign.com/\">anti-if\r\n\
      campaign</a>. I know that I would not allow such abomination to live in real code\r\n\
      I\xE2\x80\x99d check in. I don\xE2\x80\x99t like anything about the calculators. If there\xE2\x80\x99s any way you\r\n\
      can see to either a) expand the scope of this Strategy so that it\xE2\x80\x99s used more than\r\n\
      one place, and thus justify its existence, or b) at least find better names, let me\r\n\
      know.\r\n\
      </p>\r\n        <p>\r\n\
      Combine BookSet with the *BookSetCostCalculators somehow? For your sake, I won\xE2\x80\x99t even\r\n\
      attempt to explain my early thoughts.\r\n\
      </p>\r\n        <p>\r\n          <strong>Null object abuse? Investigate ZeroMoney.</strong>\r\n        </p>\r\n        <p>\r\n\
      Again we\xE2\x80\x99re hanging with our good buddy Rule #2, Don\xE2\x80\x99t use the ELSE keyword. This\r\n\
      time, the essay encourages us to try out using the null object pattern. I think I\xE2\x80\x99m\r\n\
      abusing the pattern with my ZeroMoney. I don\xE2\x80\x99t think that\xE2\x80\x99s what null objects are\r\n\
      for. Again, the simplicity of the problem has snagged us, and I\xE2\x80\x99ve tried to shoehorn\r\n\
      in a null object where I could have done without.\r\n\
      </p>\r\n        <p>\r\n\
      A second issue I have with the null object pattern is: I don\xE2\x80\x99t ever return null anyway,\r\n\
      at least not inside code that I control (both the caller and the called).\xC2\xA0 As\r\n\
      they say, what\xE2\x80\x99s up with that?\r\n\
      </p>\r\n        <p>\r\n          <strong>Namespaces</strong>\r\n        </p>\r\n        <p>\r\n\
      Rule #7 is Keep all entities small. That means ten (10) classes per namespace. My\r\n\
      KataPotter solution is small enough that it almost fits in a single namespace, but\r\n\
      I should adhere to the spirit of the rule and add some folders/namespaces. Maybe something\r\n\
      will emerge.\r\n\
      </p>\r\n        <p>\r\n\
      Update: I still hate that .NET makes it ugly/discouraging for me to name both a namespace,\r\n\
      and a class in that namespace the same thing. Take KataPotter.Core.Book (the namespace)\r\n\
      and its class Book. Every time I want to refer to the class Book, I have to either\r\n\
      put Book.Book or (what I consider worse) use namespace aliases. \r\n\
      </p>\r\n        <p>\r\n          <strong>What\xE2\x80\x99s the deal with some of those tests?</strong>\r\n        </p>\r\n        <p>\r\n\
      I don\xE2\x80\x99t know why I was so nervous at the time about .Clone() not working, but I was.\r\n\
      So sue me. I think it had something to do with taking baby steps and trying to make\r\n\
      .Clone() work while pretending IEnumerable&lt;T&gt; was forbidden. But still, delete\r\n\
      some of those tests. And call out the \xE2\x80\x9Cacceptance tests\xE2\x80\x9D for what they are.\r\n\
      </p>\r\n        <p>\r\n\
      Second note: move the dumb one-line SetUp() code into each test. DRY or no, the SetUp()\r\n\
      code is hurting readability.\r\n\
      </p>\r\n        <p>\r\n\
      Third note: remove tests that test non-production code. E.g. money.Add() tests cover\r\n\
      null values\xE2\x80\xA6why?\r\n\
      </p>\r\n        <p>\r\n          <strong>Fix \xE2\x80\x9Cthe .ToString()\xE2\x80\x9D cheating problem.</strong>\r\n        </p>\r\n        <p>\r\n\
      This will take a little explanation. The problem with Rule #9 of object calisthenics\r\n\
      (no getters, setters, or properties) is that eventually something outside your code\r\n\
      will want to interact with something adhering to the rules of object calisthenics,\r\n\
      without breaking rule #3! Okay. \r\n\
      </p>\r\n        <p>\r\n\
      Okay, let\xE2\x80\x99s do this by example. Let\xE2\x80\x99s say you\xE2\x80\x99re logging in somewhere. There\xE2\x80\x99s a method\r\n\
      called public LoginResult Login(Username username, Password password). Now, how do\r\n\
      you know if the login was successful? A bool property? No! A method called GetLoginSuccess()?\r\n\
      No! You can\xE2\x80\x99t even be clever and put a method on LoginResult called WasSuccessful()\xE2\x80\x94because\r\n\
      what would you return? A bool? That would almost make sense, except Rule #3 is \xE2\x80\x9CWrap\r\n\
      all primitives and strings.\xE2\x80\x9D If you try to do something clever like WasSuccessful(),\r\n\
      you\xE2\x80\x99ll have to return another custom object that wraps a bool, and, now you\xE2\x80\x99re back\r\n\
      facing the same problem with which you started!\r\n\
      </p>\r\n        <p>\r\n\
      It\xE2\x80\x99s a conundrum.\r\n\
      </p>\r\n        <p>\r\n\
      I got tired of thinking about it, and I figured, \xE2\x80\x9CHey, I\xE2\x80\x99m writing a console app,\r\n\
      at least in theory. I might as well implement ToString() and use it as my dead-simple\r\n\
      way to smuggle data out of these objects!\xE2\x80\x9D And I did.\r\n\
      </p>\r\n        <p>\r\n\
      If you look at the tests, you\xE2\x80\x99ll see that all of them compare strings. And in their\r\n\
      defense, they work, and others have resorted to ToString() to test.\r\n\
      </p>\r\n        <p>\r\n\
      If you bend your thinking a little, and pretend ToString() is called ProjectOntoViewObject()\r\n\
      that just so happens to return a string every time, maybe that would soothe your mind\r\n\
      a tad? Does it?\r\n\
      </p>\r\n        <p>\r\n\
      It still feels like cheating.\r\n\
      </p>\r\n        <p>\r\n\
      As I\xE2\x80\x99m supposed to adhere to the spirit of Rule #3 (Wrap all primitives and strings)\r\n\
      but as I\xE2\x80\x99m also supposed to be able to write code that can be observed (thus saving\r\n\
      us from the paradox of trees falling in the forest), I\xE2\x80\x99m permitted to break the rules\r\n\
      on the <strong>edges</strong> of the API I\xE2\x80\x99m building. In my case, in this KataPotter\r\n\
      solution, this means Book, Money, BookCollection, and RemoveSetResult all have ToString()\r\n\
      methods. These are the classes that either a) are at an API boundary, or b) I needed\r\n\
      to unit test badly.\r\n\
      </p>\r\n        <p>\r\n\
      There are known alternatives to the \xE2\x80\x9C.ToString()\xE2\x80\x9D problem, the most popular one for\r\n\
      testing being, implement .Equals(). I didn\xE2\x80\x99t like the idea, partially because we tried\r\n\
      that at our group dojo with horrible, horrible results, and partially because you\r\n\
      still can\xE2\x80\x99t observe the objects in question, though you can throw them at similar\r\n\
      objects in a supercollider at very high speeds and observe what happens. It seems\r\n\
      like every test becomes a heavy exercise in mocking.\r\n\
      </p>\r\n        <p>\r\n\
      I\xE2\x80\x99ll stew on this one some more. I need to get rid of the cheating, particularly on\r\n\
      internal classes where I can use mocks and expectations to figure out what\xE2\x80\x99s going\r\n\
      on. Maybe ToString() is legitimate enough on the boundary objects, and may be permitted\r\n\
      there. Will continue to stew and advise.\r\n\
      </p>\r\n        <p>\r\n          <strong>\r\n            <font color=\"#800000\">Updated: What is this property doing in there?!? Property?\r\n\
      Rule 9? CHEATER!</font>\r\n          </strong>\r\n        </p>\r\n        <p>\r\n\
      I have no excuse. My Book objects have a property getter named \xE2\x80\x9CTitle\xE2\x80\x9D, and other\r\n\
      objects make use of the Title directly. Oops!\r\n\
      </p>\r\n        <p>\r\n          <strong>\r\n            <font color=\"#800000\">Updated: What is \xE2\x80\x9Cbool IsEmpty()\xE2\x80\x9D doing in there?!?\r\n\
      bool? Rule 3? CHEATER!</font>\r\n          </strong>\r\n        </p>\r\n        <p>\r\n\
      Guilty again. BookCollection has declared a \xE2\x80\x9Cpublic bool IsEmpty()\xE2\x80\x9D, which is wrapped\r\n\
      by an identical method on another class, which is then used as part of a decision-making\r\n\
      process. If I\xE2\x80\x99m correct, it looks like I\xE2\x80\x99m going to have to introduce yet another\r\n\
      (abuse of the) strategy pattern to eliminate the bool returns.\r\n\
      </p>\r\n        <p>\r\n          <strong>\r\n            <font color=\"#800000\">Updated: what\xE2\x80\x99s all this dead code doing in there?</font>\r\n          </strong>\r\n        </p>\r\n        <p>\r\n\
      As I happily refactor away, I\xE2\x80\x99m making major changes to the internal organization.\r\n\
      There are casualties. Were I a careful C# citizen, I would use the internal keyword\r\n\
      instead of public, and R# (and for those of you without, FxCop as well) would be able\r\n\
      to easily determine which internal methods and classes are never used, and would be\r\n\
      able to highlight them for me. Too bad I\xE2\x80\x99m too lazy to change everything from public\r\n\
      to internal.\r\n\
      </p>\r\n        <p>\r\n\
      Thankfully, R# <strong>also includes solution-wide analysis</strong>, which lets me\r\n\
      know which public methods and classes are unused as well. So, this is just a reminder\r\n\
      to myself to make sure that solution-wide analysis is turned on, so I don\xE2\x80\x99t miss anything\r\n\
      obvious.\r\n\
      </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>#HTF2010</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/HTF2010.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,751c3d31-996c-403d-9f46-ab3a428521bc.aspx</id>\r\n    <published>2010-08-02T22:00:00-07:00</published>\r\n    <updated>2010-07-30T20:31:30.5430811-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      The Houston TechFest is coming!\r\n\
      </p>\r\n        <p style=\"text-align: center\">\r\n          <a title=\"Houston TechFest 2010 Agenda\" href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Agenda/tabid/55/Default.aspx\">\r\n            <img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.pseale.com/blog/content/binary/WindowsLiveWriter/HTF2010_136DC/image_3.png\" width=\"700\" height=\"280\" />\r\n            <br />\r\n\
      (click image to see full agenda)</a>\r\n        </p>\r\n        <blink>\r\n          <marquee>\r\n            <p>\r\n              <a style=\"padding-bottom: 0.3em; background-color: yellow; padding-left: 0.3em; padding-right: 0.3em; letter-spacing: -2px; color: red; font-size: 2.3em; text-decoration: blink; padding-top: 0.3em\" href=\"http://www.houstontechfest.com/\">#HTF2010:Houston\r\n\
      TechFest \xE2\x80\x93 October 9th, 2010, @UH</a>\r\n            </p>\r\n          </marquee>\r\n          <p>\r\n\
      \xC2\xA0\r\n\
      </p>\r\n          <p>\r\n            <strong>I\xE2\x80\x99m particularly interested in the following sessions:</strong>\r\n          </p>\r\n          <ul>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/223/Default.aspx\">CODING\r\n\
      DOJO (extended session\xE2\x80\x94bleeds into lunchtime)</a> \xE2\x80\x93 emphasis on <strong>bleed</strong>.\r\n\
      I have only one question: <strong>\xE2\x80\x9CWHO\xE2\x80\x99S THE CHUMP RUNNING THIS DOJO?\xE2\x80\x9D </strong>I <em>really </em>hope\r\n\
      the speaker comes prepared. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/191/Default.aspx\">The\r\n\
      Keynote</a> \xE2\x80\x93 Venkat is an excellent speaker. Assuming the projector in the main room\r\n\
      works at all, \xE2\x80\xA6 well, maybe even without the main room projector\xE2\x80\xA6 from the title it\r\n\
      sounds like this is some kind of call to arms. Sweet. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/273/Default.aspx\">Peer\r\n\
      code review \xE2\x80\x93 an Agile process</a> \xE2\x80\x93 assuming this talk is based on first-hand experience,\r\n\
      this could be the most useful session in the entire TechFest. Code review has been,\r\n\
      hmm, how to say, <em>an underserved need</em> thus far in my career, and I wouldn\xE2\x80\x99t\r\n\
      mind submitting myself to code reviews. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/235/Default.aspx\">Workflow\r\n\
      systems \xE2\x80\x93 myths</a> \xE2\x80\x93 from a Microsoft DE. This could be dynamite. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/214/Default.aspx\">Pair\r\n\
      programming</a> \xE2\x80\x93 Part of the Claudio-fest AKA .NET 1 track. I\xE2\x80\x99m not sure what\xE2\x80\x99s going\r\n\
      to happen here, but I\xE2\x80\x99ll give my stamp of approval sight/description unseen. \r\n\
      </li>\r\n            <li>\r\n\
      Two excellent, globally-applicable sessions disguised as SharePoint content: \r\n\
      <ul><li><a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/194/Default.aspx\">Customizing\r\n\
      the social aspects of SharePoint</a> \xE2\x80\x93 assuming this is a \xE2\x80\x9Clessons learned\xE2\x80\x9D-type session,\r\n\
      it will be excellent. \r\n\
      </li><li><a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/280/Default.aspx\">Using\r\n\
      social networking as a support model</a> \xE2\x80\x93 again, assuming this relies on direct experience,\r\n\
      which I believe it does, this short session will be more valuable than a day of traditional\r\n\
      SP curriculum. \r\n\
      </li></ul></li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/206/Default.aspx\">Advanced\r\n\
      object-oriented programming</a> \xE2\x80\x93 I\xE2\x80\x99m curious to see how this session goes. At some\r\n\
      point, the concepts become sufficiently advanced such that the best way to explain\r\n\
      them is to show code. However it\xE2\x80\x99s done, the content looks interesting. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/233/Default.aspx\">Agile\r\n\
      Adoption: curing the disease</a> \xE2\x80\x93 conflicts with my session, otherwise I\xE2\x80\x99m there.\r\n\
      Incidentally, I think that the lack of Agile-y coding skills (or as they\xE2\x80\x99re sometimes\r\n\
      called, \xE2\x80\x9Cagile engineering techniques\xE2\x80\x9D) are a huge barrier to Agile adoption. Just\r\n\
      that, and human nature.</li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/279/Default.aspx\">Zen\r\n\
      coding</a> \xE2\x80\x93 a more philosophical session.</li>\r\n            <li>\r\n\
      The Claudio-fest AKA .NET 1 track \xE2\x80\x93 I won\xE2\x80\x99t be attending because I\xE2\x80\x99ve seen these sessions\r\n\
      at some time or other: \r\n\
      <ul><li><a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/212/Default.aspx\">Design\r\n\
      patterns</a> \xE2\x80\x93 Claudio\xE2\x80\x99s session here is code-heavy, in the best way. He presents\r\n\
      each design pattern by example, writing the code as you go, so you can follow along. <strong>Highly </strong>recommended. \r\n\
      </li><li><a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/222/Default.aspx\">Tips\r\n\
      and tricks to boost productivity</a> \xE2\x80\x93 this session is where I first learned about <a href=\"http://www.pseale.com/blog/SlickRunProtips.aspx\">SlickRun</a>.\r\n\
      Claudio will introduce dozens of little, helpful tools in this session\xE2\x80\x94you\xE2\x80\x99ll pick\r\n\
      up something from this session. \r\n\
      </li></ul></li>\r\n          </ul>\r\n          <p>\r\n            <strong>These sessions tickle my fancy:</strong>\r\n          </p>\r\n          <ul>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/268/Default.aspx\">Distributed\r\n\
      Version Control with Mercurial</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/203/Default.aspx\">A\r\n\
      scalable Rails app deployed in 60 seconds</a> \xE2\x80\x93 for high comedy, click the link and\r\n\
      read the description! ho-ho! I think that\xE2\x80\x99s a typo, that or Ben is pulling a big,\r\n\
      big prank. Anyway, despite having never touched Rails, I\xE2\x80\x99m interested in Heroku\xE2\x80\x94the\r\n\
      featureset and testimonials are simply undeniable. \r\n\
      </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/270/Default.aspx\">Data\r\n\
      mining</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/236/Default.aspx\">Agile\r\n\
      planning: it\xE2\x80\x99s all relative</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/261/Default.aspx\">Debunking\r\n\
      Agile (not)</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/271/Default.aspx\">Developing\r\n\
      and debugging web content with Firebug</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/244/Default.aspx\">WPF\r\n\
      Styling</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://www.houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/253/Default.aspx\">MongoDB</a>\r\n            </li>\r\n          </ul>\r\n          <p>\r\n\
      I\xE2\x80\x99m not particularly interested in the introduction to * sessions, Azure (or anything\r\n\
      Cloud), Windows Phone 7, the SharePoint technical sessions, Java, or anything SQL.\r\n\
      Basically, <strong>any technical content I can\xE2\x80\x99t use within the next three months\r\n\
      is uninteresting to me</strong>. But that\xE2\x80\x99s not the point. The point<strong> isn\xE2\x80\x99t</strong> that\r\n\
      I\xE2\x80\x99m uninterested in attending most of the sessions; the point <strong>is</strong> that\r\n\
      I\xE2\x80\x99ve found something (in most cases, several somethings) in every time slot I <strong>do</strong> want\r\n\
      to attend. The Houston TechFest will have something for everybody. Even me.\r\n\
      </p>\r\n          <h3>Full Disclosure\r\n\
      </h3>\r\n          <p>\r\n\
      I am bound to disclose the fact that if you attend the Houston TechFest, you will\r\n\
      have to give up the following:\r\n\
      </p>\r\n          <p>\r\n            <img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"image\" border=\"0\" alt=\"image\" src=\"http://www.pseale.com/blog/content/binary/WindowsLiveWriter/HTF2010_136DC/image_6.png\" width=\"303\" height=\"902\" />\r\n          </p>\r\n          <p>\r\n\
      Yet again, the Houston TechFest has chosen to tempt fate and has scheduled itself\r\n\
      on the day of the largest UH football game of the year\xE2\x80\x94Miss. St. is coming to town.\r\n\
      Last year when Texas Tech took the field at Robertson Stadium just hours after the\r\n\
      TechFest\xE2\x80\x99s closing session, things ended badly for them. 29-28 badly!\r\n\
      </p>\r\n        </blink>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Linkblogging: Object Calisthenics</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/LinkbloggingObjectCalisthenics.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,a176368f-ea14-46f6-953b-1d9b15cb6e9a.aspx</id>\r\n    <published>2010-07-30T20:47:32.5232476-07:00</published>\r\n    <updated>2010-07-30T20:47:46.6881384-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <category term=\"Object Calisthenics\" label=\"Object Calisthenics\" scheme=\"http://www.pseale.com/blog/CategoryView,category,ObjectCalisthenics.aspx\" />\r\n    <content type=\"html\">&lt;blockquote&gt; \r\n\
      &lt;p&gt;\r\n\
      In preparation for the upcoming session at the &lt;a href=\"http://www.houstontechfest.com/\"&gt;Houston\r\n\
      TechFest&lt;/a&gt; (October 9th, 2010, UH campus), I\xE2\x80\x99m doing \xE2\x80\x9Cinternet research\xE2\x80\x9D AKA browsing\r\n\
      around a lot. I\xE2\x80\x99m collecting here a list of everything I could find on the topic.\r\n\
      Be warned, this will be exhaustive (and thus, exhausting to read). Apologies in advance.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &amp;#160;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;The original essay&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.xpteam.com/jeff/writings/objectcalisthenics.rtf\"&gt;Object Calisthenics\r\n\
      [warning: RTF document]&lt;/a&gt; by &lt;a href=\"http://www.xpteam.com/jeff/\"&gt;Jeff Bay&lt;/a&gt; \xE2\x80\x93\r\n\
      this also appears as a chapter in &lt;a href=\"http://pragprog.com/titles/twa/thoughtworks-anthology\"&gt;The\r\n\
      Thoughtworks Anthology&lt;/a&gt;. It\xE2\x80\x99s well-written, and if you\xE2\x80\x99re going to bother trying\r\n\
      out object calisthenics, &lt;strong&gt;please&lt;/strong&gt; read the original essay. The most\r\n\
      important thing to learn is &lt;strong&gt;not the rules themselves, but the reasons the\r\n\
      rules exist&lt;/strong&gt;, and thus, what you\xE2\x80\x99re supposed to take away from the entire\r\n\
      experience. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Retrospectives from people who have attempted object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.markhneedham.com/blog/2008/11/06/object-calisthenics-first-thoughts/\"&gt;Object\r\n\
      calisthenics: first thoughts&lt;/a&gt; by Mark Needham. Notable takeaways: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      he was \xE2\x80\x9Csurprised how difficult the problem was to solve using the Object Calisthenics\r\n\
      rules.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CI noticed [after trying object calisthenics] that I was always on the lookout for\r\n\
      ways to ensure that we didn't expose any state, so it's had a slight influence on\r\n\
      my approach already.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Unit testing is hard: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      Mark\xE2\x80\x99s group implemented .Equals() and .ToHashCode() for the sole purpose of being\r\n\
      able to unit test while adhering to the rules of object calisthenics. (It is generally\r\n\
      frowned upon to implement production code for the sole purpose of building tests.) \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Another group used baby steps TDD and triangulation to build unit test. While Mark\r\n\
      (in the blog post) was supportive of this approach, I had less than stellar results\r\n\
      trying this out in our coding dojo last year. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      They didn\xE2\x80\x99t finish solving the problem. For those of you surprised by this, trust\r\n\
      me: if anyone ever finishes a problem in a coding dojo environment, it\xE2\x80\x99s something\r\n\
      of a miracle. So, with this context, you may read the sentence as \xE2\x80\x9CToday, no miracle\r\n\
      occurred; we didn\xE2\x80\x99t finish the problem during the coding dojo.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Notes from the comments: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      From Kris: Possibly encourage people solve a small part of the problem by breaking\r\n\
      the rules, then, slowly refactor their code to \xE2\x80\x9Cmake the rules pass\xE2\x80\x9D in a manner conceptually\r\n\
      similar to TDD\xE2\x80\x99s red/green/refactor. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blog.m.artins.net/first-sydney-coding-dojo/\"&gt;First Sydney Coding Dojo&lt;/a&gt; (NOTE:\r\n\
      this is another perspective on the same dojo mentioned above by Mark Needham) \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      Coding dojos as a means of idea exchange: \xE2\x80\x9CApart from being an amusing experience,\r\n\
      it was quite interesting to see the different approaches that people take to solve\r\n\
      the same problem, - the design, the way they write tests, the code style, pretty cool.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Also interesting to note, the author suggested improvements that would \xE2\x80\x9Cimprove productivity.\xE2\x80\x9D\r\n\
      Coding dojo productivity seems to ALWAYS be abysmal. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://schneide.wordpress.com/2009/11/29/follow-up-to-our-dev-brunch-november-2009/\"&gt;Object\r\n\
      calisthenics: by example; inspected&lt;/a&gt; \xE2\x80\x93 quotes: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9C\xE2\x80\xA6his techniques included the use of the &lt;a href=\"http://en.wikipedia.org/wiki/Visitor_pattern\"&gt;Visitor\r\n\
      design pattern&lt;/a&gt;, which wasn\xE2\x80\x99t the author\xE2\x80\x99s first choice beforehand. Test Driven\r\n\
      Development alone wouldn\xE2\x80\x99t have led to this solution\xE2\x80\xA6\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CThe first observation was that the rules follow a dramatic composition that orders\r\n\
      them from \xE2\x80\x9Cmost obvious and immediate code improvement\xE2\x80\x9D to \xE2\x80\x9Chardest to achieve code\r\n\
      improvement\xE2\x80\x9D and in the same order from \xE2\x80\x9Ceasiest to acknowledge\xE2\x80\x9D to \xE2\x80\x9Cmost controversial\xE2\x80\x9D.\r\n\
      At the end of the list, the audience rioted most of the time. But if you reject the\r\n\
      last few rules, you\xE2\x80\x99ve silently agreed to the first ones, the ones with the greatest\r\n\
      potential for immediate improvement.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CIt\xE2\x80\x99s a &lt;strong&gt;learning catalyst&lt;/strong&gt; for those of us that aren\xE2\x80\x99t born as programming\r\n\
      super-heros. To speak &lt;a href=\"http://www.infoq.com/articles/implementations-patterns-br\"&gt;in\r\n\
      terms Kent Beck coined&lt;/a&gt;: Object Calisthenics provide some handy practices that\r\n\
      might eventually lead to a better understanding of their underlying principles. Even\r\n\
      beginners can follow the practices and review their code on compliance. When they\r\n\
      fully get to know the principles (like &lt;a href=\"http://en.wikipedia.org/wiki/Law_of_Demeter\"&gt;Law\r\n\
      Of Demeter&lt;/a&gt;, for example), they are already halfway there.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      This is yet another example of \xE2\x80\x9Ccoding dojos are a safe learning environment\xE2\x80\x9D: \xE2\x80\x9CAt\r\n\
      last, Object Calisthenics, if performed as a group exercise, can be a team solder.\r\n\
      You can rant over code together without regrets \xE2\x80\x93 the rules were made elsewhere. And\r\n\
      you can discuss different solutions without feeling pointless \xE2\x80\x93 fulfilling the rules\r\n\
      is the common goal for a short time.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.morkeleb.com/2009/11/11/alt-net-stockholm-coding-dojo/\"&gt;Alt.Net\r\n\
      Stockholm coding dojo&lt;/a&gt; \xE2\x80\x93 it appears that they didn\xE2\x80\x99t finish the problem, no miracle\r\n\
      occurred at this dojo either. The only other takeaway I have from this is that nobody\r\n\
      wants to stick to the object calisthenics rules. My pet theory is that people try\r\n\
      to avoid pain, and these rules cause a great deal of \xE2\x80\x9Cbrain owies.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blog.avegagroup.se/MarcusHammarberg/archive/2010/01/05/trying-coding-dojo-kata-and-extreme-oop.aspx\"&gt;Trying\r\n\
      Coding dojo, kata and Extreme OOP&lt;/a&gt; - \xE2\x80\x9CSecond - the rules are very hard to follow\xE2\x80\xA6\r\n\
      Very hard. We didn\xE2\x80\x99t get quite there I felt.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CBeing Cellfish\xE2\x80\x9D \xE2\x80\x93 a Microsoft employee\xE2\x80\x99s detailed experiences with object calisthenics: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/26/team-coding-dojo-5.aspx\"&gt;Team\r\n\
      Coding Dojo 5&lt;/a&gt; - \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      On refactoring as a tool of emergent design (or as Andy mentioned, \xE2\x80\x9Cserendipitous\r\n\
      design\xE2\x80\x9D): \xE2\x80\x9CThis time we had a lot of design discussions and we had to force our selfs\r\n\
      to just do some refactoring and see where it took us. I think it was great to see\r\n\
      how we refactored and created new classes just to later refactor these classes to\r\n\
      nothing and removing them. It was a great experience in how refactoring in steps reveals\r\n\
      the design for you. We also had the full test suite save us a bunch of times from\r\n\
      stupid bugs which is also nice.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      On lack of productivity: \xE2\x80\x9CBut refactoring existing code to follow the object calisthenics\r\n\
      rules is very hard and takes time.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/15/object-calisthenics-first-contact.aspx\"&gt;Object\r\n\
      calisthenics: first contact&lt;/a&gt; \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      On small classes: \xE2\x80\x9CI also learned that classes that I felt were really small and doing\r\n\
      only one thing actually could be split up when I had to in order to conform to the\r\n\
      rules. Reminds me of when people thought atoms were the smallest building blocks of\r\n\
      the universe and then it turned out to be something smaller&amp;hellip;\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CSo all in all I think doing a coding Kata while applying the object calisthenics\r\n\
      rules will improve my ability to write object oriented code\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Explanations of object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CBeing Cellfish\xE2\x80\x9D \xE2\x80\x93 a Microsoft employee\xE2\x80\x99s detailed experiences with object calisthenics: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/16/object-calisthenics-rule-1-use-one-level-of-indentation-per-method.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 1: Use one level of indentation per method&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/17/object-calisthenics-rule-2-don-t-use-the-else-keyword.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 2: Don't use the else keyword&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/18/object-calisthenics-rule-3-wrap-all-primitives-and-strings.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 3: Wrap all primitives and strings&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/19/object-calisthenics-rule-4-use-only-one-dot-per-line.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 4: Use only one dot per line&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/20/object-calisthenics-rule-5-don-t-abbreviate.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 5: Don't abbreviate&lt;/a&gt;&amp;#160; - \xE2\x80\x9CBut the explanation for this rule\r\n\
      is that you should not abbreviate anything &lt;strong&gt;and&lt;/strong&gt; &lt;font color=\"#800080\"&gt;&lt;strong&gt;each\r\n\
      class and method name should be one or two words only&lt;/strong&gt;&lt;/font&gt;.\xE2\x80\x9D (emphasis\r\n\
      added) \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/21/object-calisthenics-rule-6-keep-all-entities-small.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 6: Keep all entities small&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &amp;#160;&lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/22/object-calisthenics-rule-7-don-t-use-any-classes-with-more-than-two-instance-variables.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 7: Don't use any classes with more than two instance variables&lt;/a&gt; -\r\n\
      \xE2\x80\x9CAll that said, remember that this is a rule intended for practice, not necessarily\r\n\
      a good thing to always use in all code.\xE2\x80\x9D \xE2\x80\xA6agreed. This is by far my least favorite\r\n\
      rule, because I think that two instance variables is an arbitrary number. I also assume\r\n\
      that the author doesn\xE2\x80\x99t count dependencies injected via dependency injection toward\r\n\
      the 2-instance-variable count, or doesn\xE2\x80\x99t do dependency injection at all? Well, I\r\n\
      need to practice what I preach and just do it anyway and see what happens. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/23/object-calisthenics-rule-8-use-first-class-collections.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 8: Use first class collections&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/24/object-calisthenics-rule-9-don-t-use-any-getters-setters-or-properties.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 9: Don't use any getters, setters or properties&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/Lectures/calisthenics/\"&gt;Slides from lectures\r\n\
      on object calisthenics&lt;/a&gt; \xE2\x80\x93 all I can say about this is, &lt;em&gt;awesome&lt;/em&gt;. It appears\r\n\
      to be an OO programming course taught in Java at William &amp;amp; Mary. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://milano-xpug.pbworks.com/f/10080616-extreme-oop.pdf\"&gt;Extreme OOP [warning:\r\n\
      PDF]&lt;/a&gt; \xE2\x80\x93 this looks to be a variant of the &lt;a href=\"http://katas.softwarecraftsmanship.org/?p=80\"&gt;String\r\n\
      Calculator kata problem&lt;/a&gt; enforcing both TDD and Object Calisthenics, all at the\r\n\
      same time. No worries, I won\xE2\x80\x99t force TDD (I don\xE2\x80\x99t have the fortitude). This contains\r\n\
      abbreviated explanations of each rule. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.antiifcampaign.com/\"&gt;Rule 2: Don\xE2\x80\x99t use the ELSE keyword \xE2\x80\x93 the\r\n\
      anti-if campaign&lt;/a&gt; \xE2\x80\x93 and specifically, &lt;a href=\"http://www.antiifcampaign.com/articles/the-simplest-anti-if-code.html\"&gt;their\r\n\
      article that shows how to remove if\xE2\x80\x99s via a code sample&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://stackoverflow.com/questions/1937362/who-does-number-two-work-for\"&gt;Rule\r\n\
      2: Don\xE2\x80\x99t use the ELSE keyword \xE2\x80\x93&amp;#160; Can you write an algorithm without an if statement?\r\n\
      [StackOverflow]&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://codemonkeyism.com/never-never-never-use-string-in-java-or-at-least-less-often/\"&gt;Rule\r\n\
      3: Wrap all primitives and Strings \xE2\x80\x93 titled Never, never, never use String in Java\r\n\
      (or at least less often)&lt;/a&gt; \xE2\x80\x93 lots of comments here. I just couldn\xE2\x80\x99t bear reading\r\n\
      them all. You read them and tell me if there\xE2\x80\x99s anything here of use. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"https://dev.youdevise.com/YDBlog/index.php?title=my_new_favorite_extreme_oo_rule&amp;amp;more=1&amp;amp;c=1&amp;amp;tb=1&amp;amp;pb=1\"&gt;Rule\r\n\
      4: First-class collections \xE2\x80\x93 My favorite new extreme-OO rule&lt;/a&gt; - \xE2\x80\x9CThis new FooBarLookup\r\n\
      class also gave me the ability to write some &lt;a href=\"http://en.wikipedia.org/wiki/Higher-order_function\"&gt;high-order-function&lt;/a&gt;-esque\r\n\
      methods that &lt;a href=\"http://en.wikipedia.org/wiki/Map_%28higher-order_function%29\"&gt;map&lt;/a&gt; or &lt;a href=\"http://en.wikipedia.org/wiki/Filter_%28higher-order_function%29\"&gt;filter&lt;/a&gt; the\r\n\
      Foo\xE2\x80\x99s and Bar\xE2\x80\x99s in the Lookup. Happily, all of this iteration noise is hidden inside\r\n\
      the encapsulated collection, and away from my business logic.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dotnet.robertmao.com/2008/06/17/write-code-with-no-getters/\"&gt;Rule\r\n\
      9: No getters/setters/properties \xE2\x80\x93 Write code with no getters?&lt;/a&gt; This is a critical\r\n\
      review of articles written about the topic. The author is definitely not happy about\r\n\
      the prospect. References the article &lt;a href=\"http://www.javaworld.com/javaworld/jw-09-2003/jw-0905-toolbox.html\"&gt;Why\r\n\
      getters and setters are evil&lt;/a&gt;, which I remember reading a long time ago and thinking,\r\n\
      \xE2\x80\x9Cthat sounds crazy! but intriguing\xE2\x80\xA6\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Problem sets/source code of object calisthenics attempts&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/activity/calisthenics/\"&gt;Rewrite Card.java\r\n\
      using object calisthenics rules&lt;/a&gt; (&lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/activity/calisthenics/Card.java.txt\"&gt;Card.java&lt;/a&gt;)-\r\n\
      From the abovementioned univeristy lectures. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"https://www.ohloh.net/p/pokqs\"&gt;pokqs [Java, Apache license]&lt;/a&gt; \xE2\x80\x93 attempts\r\n\
      to implement QuickSort (??? WHY ???) using the object calisthenics rules. To each\r\n\
      his own I suppose. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Reviews from people who have read about (have not tried) object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://jimbarritt.com/non-random/2009/03/04/object-calisthenics-jeff-bay/\"&gt;Object\r\n\
      Calisthenics&lt;/a&gt; - \xE2\x80\x9CJeff explains in a great way a few principles and challenges the\r\n\
      reader to try them out in a rigorous way, just to see how it works out. This is a\r\n\
      great way to present it, its not saying \xE2\x80\x9CI know the right way and you must follow\r\n\
      the rules\xE2\x80\x9D, its suggesting that you should give it a chance and you might begin to\r\n\
      see some rewards, or \xE2\x80\x9CTry it, you might like it\xE2\x80\x9D.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://jimbarritt.com/non-random/2009/03/07/object-calisthenics-jeff-bay-part-2/\"&gt;Object\r\n\
      Calisthenics, Part 2&lt;/a&gt; \xE2\x80\x93 the author discusses how adding small methods eliminates\r\n\
      what people sometimes call \xE2\x80\x9Cmicro duplication\xE2\x80\x9D, and discusses the purpose of rule\r\n\
      #3 (No static methods other than factory methods) in further detail. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dubroy.com/blog/if-this-is-object-calisthenics-i-think-ill-stay-on-the-couch/\"&gt;If\r\n\
      this is object calisthenics, I think I\xE2\x80\x99ll stay on the couch&lt;/a&gt; \xE2\x80\x93 from the comments:\r\n\
      \xE2\x80\x9C\xE2\x80\xA6but if [object calisthenics is] an exercise, then you need to make sure that it\xE2\x80\x99s\r\n\
      working the right muscles, and not hurting your overall form. My belief is that these\r\n\
      exercises are not working the right muscles.\xE2\x80\x9D My counter-argument to the author is:\r\n\
      dude, you come from SmallTalk land. You have mastered the mama bear, (just-right!)\r\n\
      approach to object-oriented programming. Object calisthenics was written by a Java\r\n\
      programmer, for the (presumably) Java audience. Think of object calisthenics as the\r\n\
      papa bear object-oriented ruleset (too hot!) to counteract the standard baby bear\r\n\
      procedural-style programming practice (too cold!) . Once the baby bear programmers\r\n\
      have tried the papa bear\xE2\x80\x99s porridge, they\xE2\x80\x99ll\xE2\x80\xA6well\xE2\x80\xA6I sure hope they learn something.\r\n\
      Anyway, this article has good points \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://binstock.blogspot.com/2008/04/perfecting-oos-small-classes-and-short.html\"&gt;OO\xE2\x80\x99s\r\n\
      short classes and small methods&lt;/a&gt; \xE2\x80\x93 while the author endorses object calisthenics,\r\n\
      I\xE2\x80\x99m hesitant to quote him on anything, as he hasn\xE2\x80\x99t tried them out. In any event,\r\n\
      this article was linked from proggit and received lots of comments with a mix between\r\n\
      those expressing dubiousness, comments defending the \xE2\x80\x9Cjust try it\xE2\x80\x9D approach, and comments\r\n\
      completely misrepresenting the object calisthenics rules. &lt;a href=\"http://www.reddit.com/r/programming/comments/6gx7o/perfecting_oos_small_classes_and_short_methods/\"&gt;The\r\n\
      reddit comment thread is similar&lt;/a&gt;. Takeaway for me is, first, emphasize that the\r\n\
      rules make sense, and second, have a paper reference explaining the rules in further\r\n\
      detail. There will be misunderstanding, guaranteed. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;JACKPOT! Blog post citing research from SCIENCE! SCIENCE, whereupon we can\r\n\
      base our opinions, &lt;u&gt;as opposed to basing our opinions on other uninformed blog posts&lt;/u&gt;!\r\n\
      ggggggggggggggggggggggg-yes!&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dubroy.com/blog/method-length-are-short-methods-actually-worse/\"&gt;Are\r\n\
      short methods actually worse?&lt;/a&gt; \xE2\x80\x93 the author reviews the most commonly cited research\r\n\
      on method length (make sure to read the update for the updated conclusion). The author\r\n\
      also (separately, not influenced by the aforementioned research) introduces a concept\r\n\
      I can agree with: \xE2\x80\x9CBy making your methods shorter, you\xE2\x80\x99re just trading one kind of\r\n\
      complexity for another.\xE2\x80\x9D This I think is the #1 issue keeping people from adopting\r\n\
      object-oriented programming and the \xE2\x80\x9Cexplosion of objects\xE2\x80\x9D\xE2\x80\x94they can no longer find\r\n\
      their code once it\xE2\x80\x99s split between five objects, instead of the one object that did\r\n\
      EVERYTHING. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Related links&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://c2.com/cgi/wiki?RavioliCode\"&gt;Ravioli Code (from the original gangster\r\n\
      C2 wiki)&lt;/a&gt; \xE2\x80\x93 spaghetti is what happens when you have a procedural mess. Ravioli\r\n\
      is what happens when you have an object-oriented mess. In defense of XP, (next link\r\n\
      follows)\xE2\x80\xA6 \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://xprogramming.com/images/circles.jpg\"&gt;XP Practices diagram&lt;/a&gt;, from &lt;a href=\"http://xprogramming.com/xpmag/whatisxp\"&gt;What\r\n\
      is XP&lt;/a&gt; \xE2\x80\x93 \xE2\x80\x9CSimple Design\xE2\x80\x9D is a core element of XP. \xE2\x80\x9C[choosing the appropriate] Metaphor\xE2\x80\x9D\r\n\
      is also important to keep your code simple. Not mentioned in the XP diagram, but implied\r\n\
      is the concept of\xE2\x80\xA6 \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://c2.com/xp/YouArentGonnaNeedIt.html\"&gt;You Ain\xE2\x80\x99t Gonna Need It (YAGNI)\r\n\
      (from the original gangster C2 wiki)&lt;/a&gt; \xE2\x80\x93 don\xE2\x80\x99t add &lt;strong&gt;anything &lt;/strong&gt;to\r\n\
      your code for \xE2\x80\x9Cflexibility\xE2\x80\x9D, \xE2\x80\x9Cmodularity\xE2\x80\x9D, \xE2\x80\x9Cjust in case,\xE2\x80\x9D \xE2\x80\x9Csomething I will need\r\n\
      later.\xE2\x80\x9D YOU, your SOURCE CODE REPOSITORY, and your PROGRAM REQUIREMENTS are the most\r\n\
      flexible pieces. When you need something in your code later, add it &lt;strong&gt;only later&lt;/strong&gt;,\r\n\
      at the very last possible moment. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;/blockquote&gt; \r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Plugging myself:&lt;/strong&gt; \r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/CategoryView,category,ObjectCalisthenics.aspx\"&gt;Everything\r\n\
      tagged object calisthenics on my blog&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;</content>\r\n  </entry>\r\n  <entry>\r\n    <title>Linkblogging: Object Calisthenics</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/LinkbloggingObjectCalisthenics.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,c769eb8a-3497-40fa-ae68-8a86ae129f34.aspx</id>\r\n    <published>2010-07-17T12:17:01.6858036-07:00</published>\r\n    <updated>2010-07-17T12:17:01.6858036-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <category term=\"Object Calisthenics\" label=\"Object Calisthenics\" scheme=\"http://www.pseale.com/blog/CategoryView,category,ObjectCalisthenics.aspx\" />\r\n    <content type=\"html\">&lt;blockquote&gt; \r\n\
      &lt;p&gt;\r\n\
      In preparation for the upcoming session at the &lt;a href=\"http://www.houstontechfest.com/\"&gt;Houston\r\n\
      TechFest&lt;/a&gt; (October 9th, 2010, UH campus), I\xE2\x80\x99m doing \xE2\x80\x9Cinternet research\xE2\x80\x9D AKA browsing\r\n\
      around a lot. I\xE2\x80\x99m collecting here a list of everything I could find on the topic.\r\n\
      Be warned, this will be exhaustive (and thus, exhausting to read). Apologies in advance.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &amp;#160;\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;The original essay&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.xpteam.com/jeff/writings/objectcalisthenics.rtf\"&gt;Object Calisthenics\r\n\
      [warning: RTF document]&lt;/a&gt; by &lt;a href=\"http://www.xpteam.com/jeff/\"&gt;Jeff Bay&lt;/a&gt; \xE2\x80\x93\r\n\
      this also appears as a chapter in &lt;a href=\"http://pragprog.com/titles/twa/thoughtworks-anthology\"&gt;The\r\n\
      Thoughtworks Anthology&lt;/a&gt;. It\xE2\x80\x99s well-written, and if you\xE2\x80\x99re going to bother trying\r\n\
      out object calisthenics, &lt;strong&gt;please&lt;/strong&gt; read the original essay. The most\r\n\
      important thing to learn is &lt;strong&gt;not the rules themselves, but the reasons the\r\n\
      rules exist&lt;/strong&gt;, and thus, what you\xE2\x80\x99re supposed to take away from the entire\r\n\
      experience. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Retrospectives from people who have attempted object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.markhneedham.com/blog/2008/11/06/object-calisthenics-first-thoughts/\"&gt;Object\r\n\
      calisthenics: first thoughts&lt;/a&gt; by Mark Needham. Notable takeaways: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      he was \xE2\x80\x9Csurprised how difficult the problem was to solve using the Object Calisthenics\r\n\
      rules.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CI noticed [after trying object calisthenics] that I was always on the lookout for\r\n\
      ways to ensure that we didn't expose any state, so it's had a slight influence on\r\n\
      my approach already.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Unit testing is hard: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      Mark\xE2\x80\x99s group implemented .Equals() and .ToHashCode() for the sole purpose of being\r\n\
      able to unit test while adhering to the rules of object calisthenics. (It is generally\r\n\
      frowned upon to implement production code for the sole purpose of building tests.) \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Another group used baby steps TDD and triangulation to build unit test. While Mark\r\n\
      (in the blog post) was supportive of this approach, I had less than stellar results\r\n\
      trying this out in our coding dojo last year. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      They didn\xE2\x80\x99t finish solving the problem. For those of you surprised by this, trust\r\n\
      me: if anyone ever finishes a problem in a coding dojo environment, it\xE2\x80\x99s something\r\n\
      of a miracle. So, with this context, you may read the sentence as \xE2\x80\x9CToday, no miracle\r\n\
      occurred; we didn\xE2\x80\x99t finish the problem during the coding dojo.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Notes from the comments: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      From Kris: Possibly encourage people solve a small part of the problem by breaking\r\n\
      the rules, then, slowly refactor their code to \xE2\x80\x9Cmake the rules pass\xE2\x80\x9D in a manner conceptually\r\n\
      similar to TDD\xE2\x80\x99s red/green/refactor. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blog.m.artins.net/first-sydney-coding-dojo/\"&gt;First Sydney Coding Dojo&lt;/a&gt; (NOTE:\r\n\
      this is another perspective on the same dojo mentioned above by Mark Needham) \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      Coding dojos as a means of idea exchange: \xE2\x80\x9CApart from being an amusing experience,\r\n\
      it was quite interesting to see the different approaches that people take to solve\r\n\
      the same problem, - the design, the way they write tests, the code style, pretty cool.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Also interesting to note, the author suggested improvements that would \xE2\x80\x9Cimprove productivity.\xE2\x80\x9D\r\n\
      Coding dojo productivity seems to ALWAYS be abysmal. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://schneide.wordpress.com/2009/11/29/follow-up-to-our-dev-brunch-november-2009/\"&gt;Object\r\n\
      calisthenics: by example; inspected&lt;/a&gt; \xE2\x80\x93 quotes: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9C\xE2\x80\xA6his techniques included the use of the &lt;a href=\"http://en.wikipedia.org/wiki/Visitor_pattern\"&gt;Visitor\r\n\
      design pattern&lt;/a&gt;, which wasn\xE2\x80\x99t the author\xE2\x80\x99s first choice beforehands. Test Driven\r\n\
      Development alone wouldn\xE2\x80\x99t have led to this solution\xE2\x80\xA6\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CThe first observation was that the rules follow a dramatic composition that orders\r\n\
      them from \xE2\x80\x9Cmost obvious and immediate code improvement\xE2\x80\x9D to \xE2\x80\x9Chardest to achieve code\r\n\
      improvement\xE2\x80\x9D and in the same order from \xE2\x80\x9Ceasiest to acknowledge\xE2\x80\x9D to \xE2\x80\x9Cmost controversial\xE2\x80\x9D.\r\n\
      At the end of the list, the audience rioted most of the time. But if you reject the\r\n\
      last few rules, you\xE2\x80\x99ve silently agreed to the first ones, the ones with the greatest\r\n\
      potential for immediate improvement.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CIt\xE2\x80\x99s a &lt;strong&gt;learning catalyst&lt;/strong&gt; for those of us that aren\xE2\x80\x99t born as programming\r\n\
      super-heros. To speak &lt;a href=\"http://www.infoq.com/articles/implementations-patterns-br\"&gt;in\r\n\
      terms Kent Beck coined&lt;/a&gt;: Object Calisthenics provide some handy practices that\r\n\
      might eventually lead to a better understanding of their underlying principles. Even\r\n\
      beginners can follow the practices and review their code on compliance. When they\r\n\
      fully get to know the principles (like &lt;a href=\"http://en.wikipedia.org/wiki/Law_of_Demeter\"&gt;Law\r\n\
      Of Demeter&lt;/a&gt;, for example), they are already halfway there.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      This is yet another example of \xE2\x80\x9Ccoding dojos are a safe learning environment\xE2\x80\x9D: \xE2\x80\x9CAt\r\n\
      last, Object Calisthenics, if performed as a group exercise, can be a team solder.\r\n\
      You can rant over code together without regrets \xE2\x80\x93 the rules were made elsewhere. And\r\n\
      you can discuss different solutions without feeling pointless \xE2\x80\x93 fulfilling the rules\r\n\
      is the common goal for a short time.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.morkeleb.com/2009/11/11/alt-net-stockholm-coding-dojo/\"&gt;Alt.Net\r\n\
      Stockholm coding dojo&lt;/a&gt; \xE2\x80\x93 it appears that they didn\xE2\x80\x99t finish the problem, no miracle\r\n\
      occurred at this dojo either. The only other takeaway I have from this is that nobody\r\n\
      wants to stick to the object calisthenics rules. My pet theory is that people try\r\n\
      to avoid pain, and these rules cause a lot of thinking pain. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blog.avegagroup.se/MarcusHammarberg/archive/2010/01/05/trying-coding-dojo-kata-and-extreme-oop.aspx\"&gt;Trying\r\n\
      Coding dojo, kata and Extreme OOP&lt;/a&gt; - \xE2\x80\x9CSecond - the rules are very hard to follow\xE2\x80\xA6\r\n\
      Very hard. We didn\xE2\x80\x99t get quite there I felt.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CBeing Cellfish\xE2\x80\x9D \xE2\x80\x93 a Microsoft employee\xE2\x80\x99s detailed experiences with object calisthenics: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/26/team-coding-dojo-5.aspx\"&gt;Team\r\n\
      Coding Dojo 5&lt;/a&gt; - \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      On refactoring as a tool of emergent design: \xE2\x80\x9CThis time we had a lot of design discussions\r\n\
      and we had to force our selfs to just do some refactoring and see where it took us.\r\n\
      I think it was great to see how we refactored and created new classes just to later\r\n\
      refactor these classes to nothing and removing them. It was a great experience in\r\n\
      how refactoring in steps reveals the design for you. We also had the full test suite\r\n\
      save us a bunch of times from stupid bugs which is also nice.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      On lack of productivity: \xE2\x80\x9CBut refactoring existing code to follow the object calisthenics\r\n\
      rules is very hard and takes time.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/15/object-calisthenics-first-contact.aspx\"&gt;Object\r\n\
      calisthenics: first contact&lt;/a&gt; \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      On small classes: \xE2\x80\x9CI also learned that classes that I felt were really small and doing\r\n\
      only one thing actually could be split up when I had to in order to conform to the\r\n\
      rules. Reminds me of when people thought atoms were the smallest building blocks of\r\n\
      the universe and then it turned out to be something smaller&amp;hellip;\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CSo all in all I think doing a coding Kata while applying the object calisthenics\r\n\
      rules will improve my ability to write object oriented code\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Explanations of object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      \xE2\x80\x9CBeing Cellfish\xE2\x80\x9D \xE2\x80\x93 a Microsoft employee\xE2\x80\x99s detailed experiences with object calisthenics: \r\n\
      &lt;/li&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/16/object-calisthenics-rule-1-use-one-level-of-indentation-per-method.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 1: Use one level of indentation per method&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/17/object-calisthenics-rule-2-don-t-use-the-else-keyword.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 2: Don't use the else keyword&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/18/object-calisthenics-rule-3-wrap-all-primitives-and-strings.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 3: Wrap all primitives and strings&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/19/object-calisthenics-rule-4-use-only-one-dot-per-line.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 4: Use only one dot per line&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/20/object-calisthenics-rule-5-don-t-abbreviate.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 5: Don't abbreviate&lt;/a&gt;&amp;#160; - \xE2\x80\x9CBut the explanation for this rule\r\n\
      is that you should not abbreviate anything &lt;strong&gt;and&lt;/strong&gt; &lt;font color=\"#800080\"&gt;&lt;strong&gt;each\r\n\
      class and method name should be one or two words only&lt;/strong&gt;&lt;/font&gt;.\xE2\x80\x9D (emphasis\r\n\
      added)&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/21/object-calisthenics-rule-6-keep-all-entities-small.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 6: Keep all entities small&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &amp;#160;&lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/22/object-calisthenics-rule-7-don-t-use-any-classes-with-more-than-two-instance-variables.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 7: Don't use any classes with more than two instance variables&lt;/a&gt; -\r\n\
      \xE2\x80\x9CAll that said, remember that this is a rule intended for practice, not necessarily\r\n\
      a good thing to always use in all code.\xE2\x80\x9D \xE2\x80\xA6agreed. This is by far my least favorite\r\n\
      rule, because I think that two instance variables is an arbitrary number. I also assume\r\n\
      that the author doesn\xE2\x80\x99t count dependencies injected via dependency injection toward\r\n\
      the 2-instance-variable count, or doesn\xE2\x80\x99t do dependency injection at all? Well, I\r\n\
      need to practice what I preach and just do it anyway and see what happens.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/23/object-calisthenics-rule-8-use-first-class-collections.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 8: Use first class collections&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.msdn.com/b/cellfish/archive/2009/08/24/object-calisthenics-rule-9-don-t-use-any-getters-setters-or-properties.aspx\"&gt;Object\r\n\
      Calisthenics: Rule 9: Don't use any getters, setters or properties&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/Lectures/calisthenics/\"&gt;Slides from lectures\r\n\
      on object calisthenics&lt;/a&gt; \xE2\x80\x93 all I can say about this is, &lt;em&gt;awesome&lt;/em&gt;. It appears\r\n\
      to be an OO programming course taught in Java at William &amp;amp; Mary. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://milano-xpug.pbworks.com/f/10080616-extreme-oop.pdf\"&gt;Extreme OOP [warning:\r\n\
      PDF]&lt;/a&gt; \xE2\x80\x93 this looks to be the &lt;a href=\"http://katas.softwarecraftsmanship.org/?p=80\"&gt;String\r\n\
      Calculator kata problem&lt;/a&gt; enforcing both TDD and Object Calisthenics, all at the\r\n\
      same time. No worries, I won\xE2\x80\x99t force TDD (I don\xE2\x80\x99t have the fortitude). This contains\r\n\
      abbreviated explanations of each rule. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.antiifcampaign.com/\"&gt;Rule 2: Don\xE2\x80\x99t use the ELSE keyword \xE2\x80\x93 the\r\n\
      anti-if campaign&lt;/a&gt; \xE2\x80\x93 and specifically, &lt;a href=\"http://www.antiifcampaign.com/articles/the-simplest-anti-if-code.html\"&gt;their\r\n\
      article that shows how to remove if\xE2\x80\x99s via a code sample&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://stackoverflow.com/questions/1937362/who-does-number-two-work-for\"&gt;Rule\r\n\
      2: Don\xE2\x80\x99t use the ELSE keyword \xE2\x80\x93&amp;#160; Can you write an algorithm without an if statement?\r\n\
      [StackOverflow]&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://codemonkeyism.com/never-never-never-use-string-in-java-or-at-least-less-often/\"&gt;Rule\r\n\
      3: Wrap all primitives and Strings \xE2\x80\x93 titled Never, never, never use String in Java\r\n\
      (or at least less often)&lt;/a&gt; \xE2\x80\x93 lots of comments here. I just couldn\xE2\x80\x99t bear reading\r\n\
      them all. You read them and tell me if there\xE2\x80\x99s anything here of use. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"https://dev.youdevise.com/YDBlog/index.php?title=my_new_favorite_extreme_oo_rule&amp;amp;more=1&amp;amp;c=1&amp;amp;tb=1&amp;amp;pb=1\"&gt;Rule\r\n\
      4: First-class collections \xE2\x80\x93 My favorite new extreme-OO rule&lt;/a&gt; - \xE2\x80\x9CThis new FooBarLookup\r\n\
      class also gave me the ability to write some &lt;a href=\"http://en.wikipedia.org/wiki/Higher-order_function\"&gt;high-order-function&lt;/a&gt;-esque\r\n\
      methods that &lt;a href=\"http://en.wikipedia.org/wiki/Map_%28higher-order_function%29\"&gt;map&lt;/a&gt; or &lt;a href=\"http://en.wikipedia.org/wiki/Filter_%28higher-order_function%29\"&gt;filter&lt;/a&gt; the\r\n\
      Foo\xE2\x80\x99s and Bar\xE2\x80\x99s in the Lookup. Happily, all of this iteration noise is hidden inside\r\n\
      the encapsulated collection, and away from my business logic.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dotnet.robertmao.com/2008/06/17/write-code-with-no-getters/\"&gt;Rule\r\n\
      9: No getters/setters/properties \xE2\x80\x93 Write code with no getters?&lt;/a&gt; This is a critical\r\n\
      review of articles written about the topic. The author is definitely not happy about\r\n\
      the prospect. References the article &lt;a href=\"http://www.javaworld.com/javaworld/jw-09-2003/jw-0905-toolbox.html\"&gt;Why\r\n\
      getters and setters are evil&lt;/a&gt;, which I remember reading a long time ago and thinking,\r\n\
      \xE2\x80\x9Cthat sounds crazy! but intriguing\xE2\x80\xA6\xE2\x80\x9D&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Problem sets/source code of object calisthenics attempts&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/activity/calisthenics/\"&gt;Rewrite Card.java\r\n\
      using object calisthenics rules&lt;/a&gt; (&lt;a href=\"http://www.cs.wm.edu/~noonan/cs301/activity/calisthenics/Card.java.txt\"&gt;Card.java&lt;/a&gt;)-\r\n\
      From the abovementioned univeristy lectures. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"https://www.ohloh.net/p/pokqs\"&gt;pokqs [Java, Apache license]&lt;/a&gt; \xE2\x80\x93 attempts\r\n\
      to implement QuickSort (??? WHY ???) using the object calisthenics rules. To each\r\n\
      his own I suppose. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Reviews from people who have read about (have not tried) object calisthenics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://jimbarritt.com/non-random/2009/03/04/object-calisthenics-jeff-bay/\"&gt;Object\r\n\
      Calisthenics&lt;/a&gt; - \xE2\x80\x9CJeff explains in a great way a few principles and challenges the\r\n\
      reader to try them out in a rigorous way, just to see how it works out. This is a\r\n\
      great way to present it, its not saying \xE2\x80\x9CI know the right way and you must follow\r\n\
      the rules\xE2\x80\x9D, its suggesting that you should give it a chance and you might begin to\r\n\
      see some rewards, or \xE2\x80\x9CTry it, you might like it\xE2\x80\x9D.\xE2\x80\x9D \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://jimbarritt.com/non-random/2009/03/07/object-calisthenics-jeff-bay-part-2/\"&gt;Object\r\n\
      Calisthenics, Part 2&lt;/a&gt; \xE2\x80\x93 the author discusses how adding small methods eliminates\r\n\
      what people sometimes call \xE2\x80\x9Cmicro duplication\xE2\x80\x9D, and discusses the purpose of rule\r\n\
      #3 (No static methods other than factory methods) in further detail. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dubroy.com/blog/if-this-is-object-calisthenics-i-think-ill-stay-on-the-couch/\"&gt;If\r\n\
      this is object calisthenics, I think I\xE2\x80\x99ll stay on the couch&lt;/a&gt; \xE2\x80\x93 from the comments:\r\n\
      \xE2\x80\x9C\xE2\x80\xA6but if [object calisthenics is] an exercise, then you need to make sure that it\xE2\x80\x99s\r\n\
      working the right muscles, and not hurting your overall form. My belief is that these\r\n\
      exercises are not working the right muscles.\xE2\x80\x9D My counter-argument to the author is:\r\n\
      dude, you come from SmallTalk land. You have mastered the mama bear, (just-right!)\r\n\
      approach to object-oriented programming. Object calisthenics was written by a Java\r\n\
      programmer, for the (presumably) Java audience. Think of object calisthenics as the\r\n\
      papa bear object-oriented ruleset (too hot!) to counteract the standard baby bear\r\n\
      procedural-style programming practice (too cold!) . Once the baby bear programmers\r\n\
      have tried the papa bear\xE2\x80\x99s porridge, they\xE2\x80\x99ll\xE2\x80\xA6well\xE2\x80\xA6I sure hope they learn something.\r\n\
      Anyway, this article has good points \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://binstock.blogspot.com/2008/04/perfecting-oos-small-classes-and-short.html\"&gt;OO\xE2\x80\x99s\r\n\
      short classes and small methods&lt;/a&gt; \xE2\x80\x93 while the author endorses object calisthenics,\r\n\
      I\xE2\x80\x99m hesitant to quote him on anything, as he hasn\xE2\x80\x99t tried them out. In any event,\r\n\
      this article was linked from proggit and received lots of comments with a mix between\r\n\
      those expressing dubiousness, comments defending the \xE2\x80\x9Cjust try it\xE2\x80\x9D approach, and comments\r\n\
      completely misrepresenting the object calisthenics rules. &lt;a href=\"http://www.reddit.com/r/programming/comments/6gx7o/perfecting_oos_small_classes_and_short_methods/\"&gt;The\r\n\
      reddit comment thread is similar&lt;/a&gt;. Takeaway for me is, first, emphasize that the\r\n\
      rules make sense, and second, have a paper reference explaining the rules in further\r\n\
      detail. There will be misunderstanding, guaranteed. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;JACKPOT! Blog post citing research from SCIENCE! SCIENCE, whereupon we can\r\n\
      base our opinions, &lt;u&gt;as opposed to basing our opinions on other uninformed blog posts&lt;/u&gt;!\r\n\
      ggggggggggggggggggggggg-yes!&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://dubroy.com/blog/method-length-are-short-methods-actually-worse/\"&gt;Are\r\n\
      short methods actually worse?&lt;/a&gt; \xE2\x80\x93 the author reviews the most commonly cited research\r\n\
      on method length (make sure to read the update for the updated conclusion). The author\r\n\
      also (separately, not influenced by the aforementioned research) introduces a concept\r\n\
      I can agree with: \xE2\x80\x9CBy making your methods shorter, you\xE2\x80\x99re just trading one kind of\r\n\
      complexity for another.\xE2\x80\x9D This I think is the #1 issue keeping people from adopting\r\n\
      object-oriented programming and the \xE2\x80\x9Cexplosion of objects\xE2\x80\x9D\xE2\x80\x94they can no longer find\r\n\
      their code once it\xE2\x80\x99s split between five objects, instead of the one object that did\r\n\
      EVERYTHING. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Related links&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://c2.com/cgi/wiki?RavioliCode\"&gt;Ravioli Code (from the original gangster\r\n\
      C2 wiki)&lt;/a&gt; \xE2\x80\x93 spaghetti is what happens when you have a procedural mess. Ravioli\r\n\
      is what happens when you have an object-oriented mess. In defense of XP, (next link\r\n\
      follows)\xE2\x80\xA6 \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://xprogramming.com/images/circles.jpg\"&gt;XP Practices diagram&lt;/a&gt;, from &lt;a href=\"http://xprogramming.com/xpmag/whatisxp\"&gt;What\r\n\
      is XP&lt;/a&gt; \xE2\x80\x93 \xE2\x80\x9CSimple Design\xE2\x80\x9D is a core element of XP. \xE2\x80\x9C[choosing the appropriate] Metaphor\xE2\x80\x9D\r\n\
      is also important to keep your code simple. Not mentioned in the XP diagram, but implied\r\n\
      is the concept of\xE2\x80\xA6 \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://c2.com/xp/YouArentGonnaNeedIt.html\"&gt;You Ain\xE2\x80\x99t Gonna Need It (YAGNI)\r\n\
      (from the original gangster C2 wiki)&lt;/a&gt; \xE2\x80\x93 don\xE2\x80\x99t add &lt;strong&gt;anything &lt;/strong&gt;to\r\n\
      your code for \xE2\x80\x9Cflexibility\xE2\x80\x9D, \xE2\x80\x9Cmodularity\xE2\x80\x9D, \xE2\x80\x9Cjust in case,\xE2\x80\x9D \xE2\x80\x9Csomething I will need\r\n\
      later.\xE2\x80\x9D YOU, your SOURCE CODE REPOSITORY, and your PROGRAM REQUIREMENTS are the most\r\n\
      flexible pieces. When you need something in your code later, add it later, at the\r\n\
      moment you need it. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/blockquote&gt;</content>\r\n  </entry>\r\n  <entry>\r\n    <title>Houston TechFest Coding Dojo</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/HoustonTechFestCodingDojo.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,3e51dff1-53df-4440-8a79-c7136e42e8d1.aspx</id>\r\n    <published>2010-06-14T08:47:25.3593582-07:00</published>\r\n    <updated>2010-06-14T08:47:25.3593582-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      This is a placeholder in case my session is accepted. I will post the details of the\r\n\
      problem, object calisthenics rules, the philosophy behind coding dojos, and GitHub\r\n\
      project details, all as needed. For the rest of you reading this, if you're interested\r\n\
      in helping out (again assuming the session is accepted), find me and I will gladly\r\n\
      accept help (especially during the session!). I would also like to do a public \"test\r\n\
      run\" of the object calisthenics rules before inflicting it upon the TechFest audience.\r\n\
      Let me know if you're interested.\r\n\
      </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Tech Diary, H1 2010</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/TechDiaryH12010.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,4fb7a472-40a1-4fb9-aea9-fd3e0fb4d1ea.aspx</id>\r\n    <published>2010-06-06T22:52:18.5497169-07:00</published>\r\n    <updated>2010-06-06T22:52:18.5497169-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n        </p>\r\n        <p>\r\n\
      Recently I\xE2\x80\x99ve been working with WPF on my first medium-or-large development project.\r\n\
      Am I allowed to acknowledge that I don\xE2\x80\x99t have seven thousand-plus (7000+) of these\r\n\
      big apps already under my belt, career-wise? I guess i just did. Anyway, it\xE2\x80\x99s been\r\n\
      fascinating. All these principles that you read about and that sound nice, but aren\xE2\x80\x99t\r\n\
      causing you pain in your 400LOC web part project, become ugly quickly on a large,\r\n\
      connected codebase. I\xE2\x80\x99ve now had the time to experience the following concepts personally.\r\n\
      Notably: \r\n\
      </p>\r\n        <ul>\r\n          <li>\r\n\
      The DRY principle, and how duplication in your code creates bugs. I think I\xE2\x80\x99ve seen\r\n\
      someone with more authority say this elsewhere, but, let me pretend to be the first\r\n\
      to say it: <strong>if you only focus on one thing to improve in your codebase, start\r\n\
      with removing duplication</strong>. Removing duplication has been eye-opening for\r\n\
      me. Once you remove all the duplication, then you can worry about restructuring the\r\n\
      code, but not until you\xE2\x80\x99ve removed the duplication.</li>\r\n          <li>\r\n\
      Allowing broken windows to remain broken leads to a downward spiral of code quality.\xC2\xA0\r\n\
      This is one of the opening sections of the Pragmatic Programmer book.</li>\r\n          <li>\r\n\
      The need for unit testing to ensure specific behaviors work as designed, and to help\r\n\
      you express intent, and to ensure that the code remains working down the line, when\r\n\
      everyone has forgotten what the code is supposed to do. Tests also break a lot (we\xE2\x80\x99re\r\n\
      working on making them more unit-ish).</li>\r\n          <li>\r\n\
      Integration testing and how, in conjunction with unit tests, it helps ensure your\r\n\
      system works, and allows large-scale restructurings (and allows dangerous merges using\r\n\
      the team suite source control product from the unnamed vendor). \r\n\
      </li>\r\n          <li>\r\n\
      The importance of continuous integration (and as much as possible, continuous deployment)\r\n\
      as a means of chaos control on a team project. \xE2\x80\x9CWho broke the build\xE2\x80\x9D actually matters\r\n\
      on a team. If you ask \xE2\x80\x9Cwho broke the build\xE2\x80\x9D on your one-man project, you get funny\r\n\
      looks because you\xE2\x80\x99re mumbling to yourself again.</li>\r\n          <li>\r\n\
      SOLID (particularly the Liskov substitution principle) and how it leads to more readable/easily-digestible/composable\r\n\
      code. \r\n\
      </li>\r\n          <li>\r\n\
      Object modeling and carefully selecting object responsibilities (which ties into SOLID)\r\n\
      and how drastically a seemingly-small change in the responsibilities of objects drastically\r\n\
      changes the way your code works and looks. I\xE2\x80\x99m still struggling with choosing the\r\n\
      right seams between object responsibilities.</li>\r\n          <li>\r\n\
      BDD or STDD or ATDD or whatever you\xE2\x80\x99re calling it \xE2\x80\x93 honestly we\xE2\x80\x99re not doing anything\r\n\
      like this on our project, but I\xE2\x80\x99m feeling the pain nonetheless. Part of the problem\r\n\
      is that Agile is hard to do 100% well, and part of doing a good job is putting away\r\n\
      the pride and not doing Agile 100% well in order to get the job done. I may sound\r\n\
      like a luddite here, and I\xE2\x80\x99m sorry, but the truth remains: if we have a skill gap\r\n\
      between the ideal Agile team, and us, and we need to deliver, we work at our current\r\n\
      skill level. No regrets. \xE2\x80\xA6Back to BDD. Another part of the problem is that BDD (and\r\n\
      unit testing) get into this fuzzy area where it\xE2\x80\x99s difficult for the unskilled practitioner\r\n\
      (read: me) to follow a rigid set of rules that will get me to the land of BDD goodness,\r\n\
      where our customers tell us a story of just the right size with just the right level\r\n\
      of detail, and we take those very same words and create a behavior test, and that\r\n\
      behavior test is written with just the write level of granularity, and it\xE2\x80\x99s all effortless\r\n\
      and the tooling is excellent and we review all the behaviors as a team, and lo and\r\n\
      behold! The customer spots a design bug just by reading the names of our behavior\r\n\
      tests, and we\xE2\x80\x99ve saved 5000 man hours because we caught it before it was implemented.\r\n\
      I\xE2\x80\x99m still not there. And neither is the team of which I\xE2\x80\x99m a member.</li>\r\n          <li>\r\n\
      Technologies are still frustrating, but not on the same level. I\xE2\x80\x99ve had to implement\r\n\
      one (1) ugly workaround involving a WPF data grid, and while it was unsavory, at least\r\n\
      it wasn\xE2\x80\x99t a complete brick wall. It\xE2\x80\x99s kind of funny how the grizzled veteran SP developer\r\n\
      within me jumps to create an ugly workaround that gets the job done, instantly, without\r\n\
      a moment of hesitation or regret. My lead asked me, \xE2\x80\x9Care you sure there\xE2\x80\x99s not a way\r\n\
      to fix the problem properly?\xE2\x80\x9D Because most people are trained to solve the problem,\r\n\
      the right way. Nope, I\xE2\x80\x99ll just do an ugly workaround and move on. \r\n\
      </li>\r\n          <li>\r\n\
      LightSpeed ORM works, but I have two major complaints: \r\n\
      <ul><li>\r\n\
      One: we are forced to inherit from a base class. This means that we have to carry\r\n\
      the LightSpeed DLL into every project in which our model objects are used (hint: all\r\n\
      of them). Also, arising from LightSpeed\xE2\x80\x99s ID column magic in the base class, is the\r\n\
      problem that you can\xE2\x80\x99t set an entity\xE2\x80\x99s ID field for unit tests without even deeper\r\n\
      magic. It\xE2\x80\x99s an ID column, I want to set it so I can test equality, without ugly hacks\r\n\
      or counterspells to counter the LightSpeed magic.</li><li>\r\n\
      Two: (and perhaps more importantly) using LightSpeed means that we can\xE2\x80\x99t use interfaces\r\n\
      in our model. <font color=\"#800080\">[removed 300 word attempt to summarize the problem.\r\n\
      Take my word for it, we can\xE2\x80\x99t do it easily, and we want to. Included in the 300 words\r\n\
      I deleted is the phrase \xE2\x80\x9Cby jove,\xE2\x80\x9D which I think needs to get more playtime. -ed]</font> This\r\n\
      is probably also why the POCO (plain old C# objects) crowd is so militant about POCO\r\n\
      itself\xE2\x80\x94this whole business about using a base class and relying on attributes to do\r\n\
      relationship mapping gets ugly in a hurry. Composability again\xE2\x80\x94it\xE2\x80\x99s important. \r\n\
      </li><li>\r\n\
      Three: some of the features are buggy. it\xE2\x80\x99s hard to say how much of the bugginess\r\n\
      is our misuse (PEBKAC error) or our unique scenario, but bugs kill productivity and\r\n\
      sap energy. I wish we had NHibernate instead of this paid product, and would not be\r\n\
      dismayed if we moved to the Entity Framework v37\xC2\xA0 or whatever number is assigned\r\n\
      for this year\xE2\x80\x99s release.</li></ul></li>\r\n          <li>\r\n\
      MVVM is much better than not having MVVM. I\xE2\x80\x99ve seen code that uses the codebehind\r\n\
      approach when an MVVM approach would have worked, and the MVVM code is SO MUCH EASIER\r\n\
      (!!!)!!)!(!)!)!(!(!) to figure out and modify. Craziness. Small note: once I\xE2\x80\x99m beyond\r\n\
      the remedial MVVM stage, I need to venture out and see what other presentation models\r\n\
      exist. Later. Not now. \r\n\
      </li>\r\n          <li>\r\n\
      I\xE2\x80\x99m sure we could be doing MVVM better, but it\xE2\x80\x99s a small fry issue in the grand scheme\r\n\
      of things. It\xE2\x80\x99s not the root cause of any of our pain, though I\xE2\x80\x99m nervous about holding\r\n\
      child viewmodels, and then children of the child viewmodels, and so on. Also don\xE2\x80\x99t\r\n\
      ask us whether we\xE2\x80\x99re viewmodel-first or view-first, we\xE2\x80\x99re more a federation of fiercely\r\n\
      independent states, like the united federation of planets, only with views and viewmodels.\r\n\
      We are unique and we make our own decisions, and you can make your own decisions.\r\n\
      Vulcans are strictly ViewModel-first.</li>\r\n          <li>\r\n\
      The Prism event aggregator is just beautiful. Maybe I\xE2\x80\x99m biased, because I\xE2\x80\x99m comparing\r\n\
      it to not using an event aggregator at all, and attempting to cobble together an event\r\n\
      notification solution using property change notifications on child and (great?)-grandchild-viewmodels.\r\n\
      I assure you the previous sentence gives me NIGHT TERRORS just thinking about it.\r\n\
      Trust me on this. It\xE2\x80\x99s like trying to follow code written by Macguyver\xE2\x80\x94clever, and\r\n\
      gets the work done, but cobbled together with bailing wire, a bar of soap, and a lit\r\n\
      cigar. I should make a law out of this: You Don\xE2\x80\x99t Want To Maintain Macguyver\xE2\x80\x99s Codebase.\r\n\
      Peter\xE2\x80\x99s Law #59 \xC2\xA92010, All Rights Reserved, \xC2\xAE, TM, Patent Pending.</li>\r\n          <li>\r\n\
      Unity is a problem, because it doesn\xE2\x80\x99t allow us to pass parameters into the constructor\r\n\
      at runtime (think data) while injecting the rest of the dependencies (think services).\r\n\
      I\xE2\x80\x99m somewhat new to the fanciness of IoC tools, but I\xE2\x80\x99m pretty sure on this\xE2\x80\x94the other\r\n\
      tools allow you to do what I\xE2\x80\x99m asking. Unity DOES allow us to work around the problem\r\n\
      but\xE2\x80\xA6without going into a long boring exposition on code via a blog post\xE2\x80\xA6the workaround\r\n\
      is not ideal. It\xE2\x80\x99s hard to tell at this point whether we\xE2\x80\x99re misusing Unity or if Unity\r\n\
      is limiting us. I\xE2\x80\x99m going to say both\xE2\x80\xA6but what happens when we stop misusing the tool\r\n\
      and are at that point restricted only by its limitations? Well, we\xE2\x80\x99ll get there when\r\n\
      we get there. We\xE2\x80\x99re not there yet.</li>\r\n          <li>\r\n\
      Gathering requirements is still a problem, and it turns out business analysis skills\r\n\
      are still valuable. The sky also remains blue.</li>\r\n          <li>\r\n\
      I\xE2\x80\x99m not a fan of developing for the third-party grid we use, mostly because it reminds\r\n\
      me of SharePoint, in how if you stretch the grid\xE2\x80\x99s functionality in ways it was not\r\n\
      designed to stretch, you end up in a world of hurt. And, it\xE2\x80\x99s not a true WPF citizen,\r\n\
      which affects a lot of things. Grids are the root of all evil. Strike that, the LOVE\r\n\
      OF grids is the root of all evil.</li>\r\n          <li>\r\n\
      We desperately need end-to-end testing for WPF. And by we, I mean me. I\xE2\x80\x99ve heard <a href=\"http://white.codeplex.com/\">Project\r\n\
      White</a> works but is slow, but I haven\xE2\x80\x99t heard any mention of anyone using it. Allegedly\r\n\
      VS2010 also has UI automation facilities. Hopefully there\xE2\x80\x99s a solution for this soon,\r\n\
      and specifically, hopefully someone else invests <strong>their </strong>time, not\r\n\
      mine, figuring all this out.</li>\r\n          <li>\r\n\
      I finally shelled out the money for R#. For code construction, you can probably do\r\n\
      without R# and just use the built-in Visual Studio tooling (which I did for the longest\r\n\
      time). But, on our medium-ish sized project, the navigation features alone are worth\r\n\
      the price. I\xE2\x80\x99ve also noticed that I seem to be the only person in my room that uses\r\n\
      both a) the navigation menu (CTRL+SHIFT+G IntelliJ bindings) and b) the refactor menu\r\n\
      (CTRL+SHIFT+R). \r\n\
      </li>\r\n          <li>\r\n\
      I\xE2\x80\x99m also frustrated by how R#\xE2\x80\x99s intellisense gets in the way of typing more often\r\n\
      that vanilla Visual Studio.\xC2\xA0 When attempting to close R#\xE2\x80\x99s intellisense, If in\r\n\
      doubt, hit ESC five or seven times. Then wait a few seconds, then hit it another sixteen\r\n\
      or seventeen times, to be sure.</li>\r\n          <li>\r\n\
      Third crucial R# keystroke: SHIFT+ALT+L \xE2\x80\x93 works almost like CTRL+ALT+L, but better.\r\n\
      Having just typed these words, I know how dumb the last sentence reads, and I\xE2\x80\x99m sorry,\r\n\
      but there\xE2\x80\x99s no improving it. Either you\xE2\x80\x99re feeling the pain of CTRL+SHIFT+L, and discovering\r\n\
      SHIFT+ALT+L fills you with great joy\xE2\x80\xA6or you have no idea what I\xE2\x80\x99m talking about.</li>\r\n          <li>\r\n\
      R# 5.0 feature \xE2\x80\x93 update namespaces to match folders, <strong>or</strong> update folders\r\n\
      to match namespaces \xE2\x80\x93 BOTH OPERATIONS WORK IN BULK! YESSSSSSSSSSSSSssssssssssssssssssss.\r\n\
      Also, related, you can move entire folders at once. That scary namespace change is\r\n\
      no longer scary.</li>\r\n        </ul>\r\n        <h3>Takeaways\r\n\
      </h3>\r\n        <p>\r\n\
      I don\xE2\x80\x99t know if any of you made it all the way through the long list, but even for\r\n\
      those of you who got a flavor of what the updates are\xE2\x80\x94for the most part these things\r\n\
      that have held my attention for the last several months tend toward fundamental, classic\r\n\
      issues. \r\n\
      </p>\r\n        <p>\r\n\
      This is my first time to blog directly about work, and I\xE2\x80\x99m trying to toe the line\xE2\x80\x94I\r\n\
      don\xE2\x80\x99t want to turn this into a \xE2\x80\x9Cwinning a work argument via my blog\xE2\x80\x9D blog entry. You\r\n\
      know\xE2\x80\x94when you argue about something dumb at work, summarily lose the argument, then\r\n\
      later, still fuming, blog about how you would totally make Data human instead of give\r\n\
      Geordi back his eyesight, totally, and how any dissenting opinions are wrong and weak.\r\n\
      Then shift backwards in your beanbag, in a sort of smug, self-satisfied way. You\xE2\x80\x99ve\r\n\
      won! Sweet victory. Oh yes, sweet sweet internet victory.\r\n\
      </p>\r\n        <p>\r\n\
      Previously I\xE2\x80\x99ve been the lone ranger, able to resolve arguments with myself peacably\r\n\
      and without a public stir. But now I\xE2\x80\x99m on a team of lone rangers\xE2\x80\xA6a loosely united\r\n\
      federation of lone rangers. Or planets. The point is, there\xE2\x80\x99s a bunch of us. And some\r\n\
      of us speak fluent Klingon. I\xE2\x80\x99ve got to watch myself a little more now, to make sure\r\n\
      I\xE2\x80\x99m not rehashing work arguments, or posting things that we need to \xE2\x80\x9Ckeep in the family.\xE2\x80\x9D \r\n\
      </p>\r\n        <p>\r\n\
      Hopefully the new content (content, not the jokes) is found useful by someone besides\r\n\
      myself.\r\n\
      </p>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n  <entry>\r\n    <title>Linkblogging: 2009 Q4</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/Linkblogging2009Q4.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,b1704482-daad-4139-b332-67e16eb53c6c.aspx</id>\r\n    <published>2010-03-17T20:54:58.6673507-07:00</published>\r\n    <updated>2010-03-17T20:54:58.6673507-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <content type=\"html\">&lt;p&gt;\r\n\
      Hello! I'm Peter and I'm here to present another sweet, sweet linkblog post. I've\r\n\
      done this a few times before (&lt;a href=\"http://www.pseale.com/blog/FirstIrregularlyScheduledLinkblog.aspx\"&gt;[1]&lt;/a&gt; &lt;a href=\"http://www.pseale.com/blog/LinkblogTheSequel.aspx\"&gt;[2]&lt;/a&gt;).\r\n\
      My goal with these linkblog posts (which are becoming a habit) is to expose you to\r\n\
      new concepts, point you to useful resources, and wow you with a dazzling laser show.\r\n\
      I've pulled together anything tangentially related to software development in the\r\n\
      .NET space, salted each link with commentary, and grouped them into sections. I'm\r\n\
      not an authority on most of the articles to which I link.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      Also you may be noticing that this is the \xE2\x80\x9CQ4 2009\xE2\x80\x9D edition of the linkblog, and are\r\n\
      perhaps concerned that your blog aggregator is some 3-6 months out of date, or that\r\n\
      you\xE2\x80\x99ve somehow mistakenly traveled backwards through time. Nope. I refuse to change\r\n\
      the post title out of principle. It\xE2\x80\x99s important to stick to your principles.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Community events&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      April 30th-May 2nd&amp;#8212; &lt;a title=\"http://www.altnethouston.com/\" href=\"http://www.altnethouston.com/\"&gt;http://www.altnethouston.com/&lt;/a&gt; open\r\n\
      spaces event. It\xE2\x80\x99s going to be intense! It\xE2\x80\x99s going to be &lt;a href=\"http://www.yaledailynews.com/opinion/staff-columns/2007/02/08/the-astronaut-and-the-diaper-a-sordid-tale/\"&gt;don-your-adult-diapers\r\n\
      intense (you won\xE2\x80\x99t want to leave, for &lt;em&gt;any reason&lt;/em&gt;)!&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.virtualaltnet.com/\"&gt;MONTHLY: Virtual ALT.NET&lt;/a&gt; at &lt;a href=\"http://snipr.com/virtualaltnet\"&gt;http://snipr.com/virtualaltnet&lt;/a&gt; -\r\n\
      meetings are held on Wednesday nights American time; for meetings held in your continent's\r\n\
      time zone check the website. Ok, admittedly I'm &lt;a href=\"http://twitter.com/thedavidmorton\"&gt;pulling\r\n\
      a Morton&lt;/a&gt;* by promoting an event I'm not attending (I haven't made the time for\r\n\
      it recently, no excuses), but I hold the opinion that these LiveMeeting-based user\r\n\
      group events provide more value than than the local .NET user group meeting. What's\r\n\
      also valuable is that Virtual ALT.NET meetings are recorded and &lt;a href=\"http://www.virtualaltnet.com/Recordings\"&gt;posted\r\n\
      for on-demand viewing&lt;/a&gt;. \r\n\
      &lt;br /&gt;\r\n\
      &lt;font size=\"1\"&gt;*ask him about it&lt;/font&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Um, hmm, I guess it\xE2\x80\x99s a little late to post a notice? &lt;a href=\"http://www.lostechies.com/blogs/johnteague/archive/2009/11/16/pablo-s-fiesta-open-space-conference-in-austin-tx.aspx\"&gt;February\r\n\
      26th-28th - Los Techies' Fiesta - open spaces event in Austin, Texas&lt;/a&gt; - I've paid\r\n\
      the down payment and am making my monthly payments toward the exorbitant* registration\r\n\
      fee, and am looking forward to attending. This will not necessarily be an &amp;quot;ALT.NET\r\n\
      event&amp;quot;; instead, the three areas of focus are Sharpening the Saw, Multi-platform,\r\n\
      and Selling quality as a feature. This will be a good one. I'd like to rally early\r\n\
      support for a 3 hour plus-long coding dojo, also I'd like to rally support for &lt;em&gt;&lt;u&gt;someone\r\n\
      else&lt;/u&gt;&lt;/em&gt; to run said dojo. \r\n\
      &lt;br /&gt;\r\n\
      &lt;font size=\"1\"&gt;*yes I'm joking about the price&lt;/font&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://twitter.com/houstonrb\"&gt;Houston Ruby meetup&lt;/a&gt; - it exists, believe\r\n\
      it. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pyhou.org/\"&gt;PyHou&lt;/a&gt; - it exists, believe it. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://txjs.eventbrite.com/\"&gt;TXJS&lt;/a&gt; \xE2\x80\x93 I only know that this upcoming weekend\r\n\
      conference exists, and that the \xE2\x80\x9CJS\xE2\x80\x9D stands for JavaScript.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://frazzleddad.blogspot.com/2009/09/running-event-on-cheap.html\"&gt;Meta:\r\n\
      Running an Event on the Cheap&lt;/a&gt; - by Jim Holmes, who has done this very thing. Practical\r\n\
      advice gleaned from his experience.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Online video lectures, screencasts and workshops, or: Why conferences are\r\n\
      useless as a learning vehicle&lt;/strong&gt; - okay, admittedly I haven't made the time\r\n\
      to watch any of these, but I think that, if I ever WERE to make the time, this is\r\n\
      where I'd start. I'm almost making this list as a to-do for myself&amp;#8212;hey Peter,\r\n\
      check these out later! Also to be clear, I don't think conferences are useless, they\xE2\x80\x99re\r\n\
      just relatively useless\xE2\x80\xA6for learning things. The point here isn't to hate on conferences,\r\n\
      instead it's to say hey! Here's all these conference feeds with hundreds of session\r\n\
      videos. We're to the point where I can say &amp;quot;hundreds.&amp;quot; This is new. We weren't\r\n\
      able to say \xE2\x80\x9Chundreds of free conference videos\xE2\x80\x9D just a few years ago.\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.virtualaltnet.com/Recordings\"&gt;Virtual ALT.NET recordings&lt;/a&gt; -\r\n\
      some dynamite in-depth sessions can be found here. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.summerofnhibernate.com/\"&gt;Summer of NHibernate&lt;/a&gt; - 14 screencasts\r\n\
      taking you through NHibernate. This was the summer of 2008. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Norwegian Developer's Conference videos [visit links below]. Tracks include Connected\r\n\
      Systems, Enterprise Applications, General Development, Test Driven Development, Software\r\n\
      Engineering, Parallel Programming: \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://arkiv.ndc2009.no/agenda.aspx?cat=1071&amp;amp;id=1813\"&gt;Day 1&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://arkiv.ndc2009.no/agenda.aspx?cat=1071&amp;amp;id=1813&amp;amp;day=3727\"&gt;Day\r\n\
      2&lt;/a&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://arkiv.ndc2009.no/agenda.aspx?cat=1071&amp;amp;id=1813&amp;amp;day=3728\"&gt;Day\r\n\
      3&lt;/a&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://oredev.org/videos\"&gt;\xC3\x98redev 2009 videos&lt;/a&gt; (incomplete; more are available\r\n\
      each week) - videos for the Agile and Mobile (Mobile meaning Android+iPhone, not Windows\r\n\
      Mobile) tracks. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://microsoftpdc.com/Videos\"&gt;Microsoft's Professional Developer Conference\r\n\
      (PDC) videos&lt;/a&gt; - there's something close to 100 high-definition quality session\r\n\
      videos recorded here, so even if you're uninterested in 95% of what you see, you'll\r\n\
      still find something you DO like. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a title=\"http://www.asp.net/learn/\" href=\"http://www.asp.net/learn/\"&gt;http://www.asp.net/learn/&lt;/a&gt; -\r\n\
      quality videos targeting ASP.NET. And, specifically&amp;hellip; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.asp.net/learn/mvc-videos/\"&gt;the MVC storefront series of videos&lt;/a&gt; by\r\n\
      Rob Conery - wherein he tackles abstract concepts by example via the storefront application.\r\n\
      I think this is a great approach to learning; it's mixes the abstract and the practical.\r\n\
      Okay, I'll be honest, I just watched the one video on BDD and liked it, so I\xE2\x80\x99m kind\r\n\
      of extrapolating. But I like the &lt;strong&gt;&lt;em&gt;idea&lt;/em&gt;&lt;/strong&gt; of the approach, and\r\n\
      am interested to see more. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a title=\"http://www.tekpub.com/\" href=\"http://www.tekpub.com/\"&gt;http://www.tekpub.com/&lt;/a&gt; -\r\n\
      Rob Conery has opened a predominantly for-pay screencast service. There are some free\r\n\
      videos here, but the idea is that by charging for his videos he can invest more time\r\n\
      editing and can hire better quality guests. I'll state for the record that if you\r\n\
      have the time and need to learn about a subject he covers, this is totally worth whatever\r\n\
      pittance you have to pay. With all that said, I haven't bought any of his screencasts\r\n\
      yet. Yes, I'm &amp;quot;pulling a Morton*&amp;quot; again. \r\n\
      &lt;br /&gt;\r\n\
      &lt;font size=\"1\"&gt;*see above&lt;/font&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.infoq.com/\"&gt;Presentations hosted on InfoQ&lt;/a&gt; [right sidebar] \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Learning&lt;/strong&gt; \xE2\x80\x93 surprisingly similar advice from different worlds: advice\r\n\
      from a SharePoint MVP and advice from the guy &lt;a href=\"http://laribee.com/bag-of-tricks\"&gt;who\r\n\
      just blogged about his slide whistle&lt;/a&gt;.\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blogs.officezealot.com/mauro/archive/2009/09/05/21598.aspx\"&gt;Why I'm\r\n\
      an obsessive learner&lt;/a&gt; - summarized by &lt;font color=\"#800080\"&gt;&amp;quot;Obsessive learning\r\n\
      isn't about being a super geek; it's about discipline and investing in yourself and\r\n\
      staying focused on the areas where you want to stay &amp;quot;essential&amp;quot;&lt;/font&gt;.\r\n\
      I'm not sure what to say about this except that discipline is important. Duh, I know,\r\n\
      but just keep it in mind before you add yet another technical book to your ever-growing,\r\n\
      never-diminishing book queue or spend all your time on easy listening, edutainment\r\n\
      podcasts. All's well and good, and some things make learning easier than others, but &lt;strong&gt;for\r\n\
      the most part there are no shortcuts&lt;/strong&gt;&amp;#8212;it comes down to discipline. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://codebetter.com/blogs/david_laribee/archive/2009/09/08/the-secret-sauce.aspx\"&gt;The\r\n\
      secret sauce&lt;/a&gt; - I find it interesting that Mauro (link immediately above) and Dave\r\n\
      Laribee are in violent agreement on the importance of discipline. &lt;font color=\"#800080\"&gt;&amp;quot;Learning\r\n\
      and discipline are the two halves of continuous improvement. In short: live what you\r\n\
      learn, act on your new knowledge and skill.&amp;quot;&lt;/font&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;News about news aggregators &lt;/strong&gt;- today's trend is filtering the news\r\n\
      aggregators themselves -&amp;#160; aggregating the aggregators, meta-aggregating, so to\r\n\
      speak. Which makes the following a meta-aggregators list of&amp;#160; of sorts. This is\r\n\
      me showing restraint. I'd make a joke here, but I'm not going to. Meta-aggregators\r\n\
      list. We could have a discussion about the meta-aggregators list. But we won't.\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://hackerhackernews.com/\"&gt;Hacker Hacker News&lt;/a&gt; - filtering out the\r\n\
      politics/lifestyle/news/everything-that-is-not-programming from news.ycombinator.com.\r\n\
      Unfortunately whoever was running this, stopped.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.foldl.org/\"&gt;The Left Fold&lt;/a&gt; - weekly digest of actual programming\r\n\
      articles found on programming.reddit.com, with a smattering of commentary. \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.reddit.com/r/coding/\"&gt;coding.reddit.com&lt;/a&gt; - with a strict policy\r\n\
      of programming-related discussions. This community might even survive!&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Object-oriented development and composability&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.rebol.com/article/0425.html\"&gt;The problem with OOL is not the OO&lt;/a&gt; -\r\n\
      an interesting perspective that separates OOP concepts from OO language constructs.\r\n\
      A lot of us (me) have been exposed only to OOP concepts through Java/C#/C++ and are\r\n\
      blind to such issues. Or maybe this guy is crazy and hallucinating, I can't tell.\r\n\
      At times I think I should shut down the news aggregators entirely and just pretend\r\n\
      articles like this don't exist, because reading these &amp;quot;everything you know about\r\n\
      X is wrong&amp;quot; articles contribute greatly to code paralysis. \r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.reddit.com/r/programming/comments/9gdp7/the_problem_with_ool_object_oriented_languages_is/\"&gt;Counter-[counter-]arguments\r\n\
      at Reddit&lt;/a&gt; \xE2\x80\x93 it\xE2\x80\x99s entirely possible the original poster is just a &lt;a href=\"http://www.pseale.com/blog/\"&gt;crank\r\n\
      with a blog&lt;/a&gt;.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Test-driven development, unit testing, automated testing &lt;/strong&gt;- this category\r\n\
      is the catch-all for posts agonizing over the nitty-gritty details of effective unit\r\n\
      testing. Because effective unit testing isn't a skill that spontaneously appears in\r\n\
      your brain the first time you reference NUnit.Framework.dll in Visual Studio. Anyway.\r\n\
      As a result of my fumbling experience, I have found the following links &lt;strong&gt;&lt;font color=\"#ff8000\"&gt;completely\r\n\
      and absolutely fascinating!&lt;/font&gt;&lt;/strong&gt; I'm not crazy! These things are dy-no-mite,\r\n\
      particularly because they go over arguments I've witnessed at coding dojos or arguments\r\n\
      I've had with myself. This stuff is fascinating; I'm not crazy!\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://codebetter.com/blogs/aaron.jensen/archive/2009/10/05/a-recent-conversation-about-mspec-practices.aspx\"&gt;A\r\n\
      recent conversation about MSpec practices&lt;/a&gt; - at some point I attempted to follow\r\n\
      DRY in my test project, just to see what happens. MSpec supports DRY because it allows\r\n\
      you to inherit contexts via class inheritance. But, Aaron talks here about his preference\r\n\
      for limiting the use of contexts unless absolutely necessary. In this post his advice\r\n\
      tends to grow closer to &amp;quot;classicist TDD&amp;quot; advice. There are nuances. Also\r\n\
      I'll use the word &amp;quot;nuance&amp;quot; in every link to follow.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Agile/Post-Agile&lt;/strong&gt; - note I define Post-Agile as coming to grips with\r\n\
      the reality of failed Agile, and attempting to learn from these failures.\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.c2.com/cgi/wiki?HowToPissOffYourPair\"&gt;How to piss off your pair&lt;/a&gt; -\r\n\
      pair programming anti-patterns, collected on the original C2 wiki from the collective\r\n\
      experience. If you're a cynic, you'll read this as a list of reasons why pair programming\r\n\
      is worthless. If you're just trying to improve, this is a good (and hilarious) way\r\n\
      to avoid problems. Example anti-pattern: \r\n\
      &lt;br /&gt;\r\n\
      &lt;font color=\"#800080\"&gt;Complain &lt;em&gt;before&lt;/em&gt; your partner does something wrong.\r\n\
      Create elaborate theories about their failings. Never forgive, never forget.&lt;/font&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Procedural graphics&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.cgl.uwaterloo.ca/~csk/projects/escherization/\"&gt;Escherization&lt;/a&gt; -\r\n\
      code to help you tessellate anything, including portraits of MC Escher himself (or:\r\n\
      Escherizing Escher, or: meta-Escherizing). \r\n\
      &lt;br /&gt;\r\n\
      &lt;img border=\"0\" alt=\"image\" src=\"http://www.pseale.com/blog/content/binary/WindowsLiveWriter/Linkblogging2009Q4_11B9F/image_2f3c6dd5-07c5-446d-85ca-1230fea8b875.png\" width=\"200\" height=\"200\" /&gt; \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Hilarity, or links I couldn't fit into any other category&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://typicalprogrammer.com/?p=8\"&gt;Abject-oriented programming&lt;/a&gt; - have\r\n\
      you ever heard someone attempt to struggle through answering an interview question\r\n\
      they have no idea how to answer? Where they keep digging themselves deeper into the\r\n\
      hole? E.g. &amp;quot;Modularity: A modular program is one that is divided into separate\r\n\
      files that share a common header comment block.&amp;quot; Let the hilarity ensue! \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://codebetter.com/blogs/james.kovacs/archive/2009/10/14/releasing-psake-v1-00-amp-psake-v2-00.aspx\"&gt;Releasing\r\n\
      psake v1.00 and psake v2.00&lt;/a&gt; - PSake is the PowerShell build tool. It\xE2\x80\x99s easier\r\n\
      to learn how to do something in PowerShell than to fumble around with the NAnt and\r\n\
      NAnt Contrib and all the XML-ness. It\xE2\x80\x99s not that hard to try out PSake, so if you\xE2\x80\x99re\r\n\
      experiencing ANY pain with NAnt and MSBuild, go for it. Perhaps the best way to learn\r\n\
      is to look at others' scripts: \r\n\
      &lt;/li&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://ayende.com/Blog/archive/2009/08/30/on-psake.aspx\"&gt;Ayende's psake script&lt;/a&gt; -\r\n\
      Ayende used the Boo Build System previously \r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://blog.jpboodhoo.com/InterestedInTradingInYourNAntBuildsATeaser.aspx\"&gt;JP\r\n\
      Boodhoo's psake script&lt;/a&gt; - in a bit of irony, JP uses Rake now.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/ul&gt;</content>\r\n  </entry>\r\n  <entry>\r\n    <title>SharePoint 2007 Posts: Recap</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/SharePoint2007PostsRecap.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,ad67f0be-08e4-4ef0-8283-4f12a1cb8d1a.aspx</id>\r\n    <published>2009-10-28T00:01:27.4456038-07:00</published>\r\n    <updated>2009-10-28T00:01:27.4456038-07:00</updated>\r\n    <category term=\"SharePoint\" label=\"SharePoint\" scheme=\"http://www.pseale.com/blog/CategoryView,category,SharePoint.aspx\" />\r\n    <content type=\"html\">&lt;p&gt;\r\n\
      I think now's a good time to close out the SharePoint tag on this blog, marking the\r\n\
      end of SharePoint 2007-focused content. I'm creating this post as a sort of table\r\n\
      of contents for my SharePoint content. I'll attempt to group posts into themes and\r\n\
      then editorialize. Some of my earlier posts I'll even recant! Here goes.\r\n\
      &lt;/p&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Things I think anyone (SharePoint community or otherwise) would find interesting\r\n\
      or useful&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/ThinkingCreatively.aspx\"&gt;Thinking Creatively&lt;/a&gt; -\r\n\
      what I consider possibly my best SharePoint-related post, because it contains transferable\r\n\
      concepts. The idea is that we as developers must go beyond our traditional code monkey\r\n\
      role and do some critical thinking while specifying/designing solutions to problems.\r\n\
      This is illustrated with an excellent story told during an Agile conference session.\r\n\
      Also I recommend the linked Agile Toolkit podcast episode that inspired my post.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/TheSharePointPythonConnection.aspx\"&gt;The SharePoint-Python\r\n\
      connection&lt;/a&gt; - if anyone ever tells you \"SharePoint was written in Python\", I apologize.\r\n\
      Anyway, misquoting aside, this is a fun little bit of history.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointFarmsAndMySite.aspx\"&gt;Golden Rule of\r\n\
      Troubleshooting&lt;/a&gt; - I misdiagnosed an error, posted the erroneous diagnosis to my\r\n\
      blog, and to save face hurriedly changed the contents of this post to be about troubleshooting.\r\n\
      The golden rule of troubleshooting, for those of you too lazy to click through: &lt;strong&gt;beware\r\n\
      the invisible proxy&lt;/strong&gt;! It takes many forms! It strikes silently! Everyone will\r\n\
      think you're crazy when you tell them network gremlins are eating your incoming packets,\r\n\
      but leaving your outgoing packets alone!&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Hilarity&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/WelcomeToSharePoint.aspx\"&gt;Welcome to SharePoint&lt;/a&gt; -\r\n\
      a real-life nightmare scenario I encountered while troubleshooting a SharePoint 2003\r\n\
      \"desktop issue.\" It turns out, the 15 pages of IE settings + Active Directory group\r\n\
      policy + various Office ActiveX controls + virus scanners + IE version mix + network\r\n\
      security appliances + Kerberos + firewalls + IE Zone settings + DNS/DHCP issues +\r\n\
      AD replication issues + expired password issues + routing errors + spammy IE toolbars&amp;hellip;any\r\n\
      and all of these things, if out of whack, show the same \"username/password\" dialog.\r\n\
      The post was a joke, but after troubleshooting every flavor of this problem, it gets\r\n\
      to you a little. Anyway, welcome!&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/WhatsWrongWithThisPicture.aspx\"&gt;What's wrong with\r\n\
      this picture?&lt;/a&gt; - mildly amusing scenario involving disaster recovery documentation.\r\n\
      Trust me, this is as hilarious as disaster recovery documentation is going to get.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/STSADMEXESpotTheTypo.aspx\"&gt;STSADM: Spot the typo&lt;/a&gt; -\r\n\
      a lament for the endash. This is as much hilarity as you'll find on the topic of Word\r\n\
      AutoCorrect.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Frustration&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/AngryAtCAML.aspx\"&gt;Angry at CAML&lt;/a&gt; - I remember\r\n\
      writing this post after a three days of wrestling with GetListItems, most of which\r\n\
      was wasted learning idiosyncrasies. I then deleted most of the unhelpful angry comments,\r\n\
      so what remains is the milder parts. This was my first \"surprised by how difficult\r\n\
      it is compared to how easy everyone makes it sound\" experience. Visit for a link to\r\n\
      the &lt;a href=\"http://www.dba-oracle.com/redneck.htm\"&gt;greatest Oracle DBA ever&lt;/a&gt;.\r\n\
      Or visit for my graphical representation of the MSDN Rage Meter.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/ImLikeAngryAtNumbers.aspx\"&gt;I'm like, angry at\r\n\
      numbers&lt;/a&gt; - in burnout mode, and ranting. If there's anything to take away from\r\n\
      this, it's a) keep a sense of perspective (i.e. this stuff isn't important), and b)\r\n\
      don't invest time in new Microsoft frameworks as a rule.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/DisposingSharePointObjectsSurvivalMode.aspx\"&gt;Disposing\r\n\
      SharePoint Objects: Survival Mode&lt;/a&gt; - this was a tipping point wherein I realized\r\n\
      that no one does SharePoint development properly, even most of the MVPs. Keith eventually\r\n\
      discovered and wrote down all of the disposal rules, and from there someone at Microsoft\r\n\
      released SPDisposeCheck (which I believe covers most scenarios). Anyway, the subject\r\n\
      of disposing is now a moot point&amp;#8212;the more interesting bit is that, as of two\r\n\
      full years after RTM, we had incorrect guidance as to how to dispose ~2MB objects\r\n\
      on web servers typically running a maximum ~1000MB in the worker process. Sort of\r\n\
      an eye-opener.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/BeyondTechnicalChallenges.aspx\"&gt;Beyond technical\r\n\
      challenges&lt;/a&gt; - rant, wherein I close the SharePoint 2007 portion of my blog (oops&amp;#8212;the\r\n\
      ban lasted a full month anyway, until I couldn't hold out). There are some takeaways\r\n\
      here, notably that everyone's struggling with SharePoint, including the MVPs and \"experts.\"\r\n\
      I make the statement that every person working with SharePoint should look beyond\r\n\
      their immediate technical challenge and ask, is SharePoint the right solution? Also,\r\n\
      I challenge the assumption that SharePoint is a good developer platform.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;SharePoint as an app dev platform&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      [also referenced in the \"useful\" section above] &lt;a href=\"http://www.pseale.com/blog/ThinkingCreatively.aspx\"&gt;Thinking\r\n\
      Creatively&lt;/a&gt; - what I consider possibly my best SharePoint-related post, because\r\n\
      it contains transferable concepts. The idea is that we as developers must go beyond\r\n\
      our traditional code monkey role and do some critical thinking while specifying/designing\r\n\
      solutions to problems. This is illustrated with an excellent story told during an\r\n\
      Agile conference session. Also I recommend the linked Agile Toolkit podcast episode\r\n\
      that inspired my post.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/ArgueWithYourCustomer.aspx\"&gt;Argue with your customer&lt;/a&gt; -\r\n\
      I think I posted this after failing to convince my customer to go with less SharePoint\r\n\
      customization and more out-of-the-box features. I still get a lot of pushback when\r\n\
      I try to prevent SharePoint customizations. If there's something to take away from\r\n\
      this, especially as a non-SharePoint developer, it's that not all features cost the\r\n\
      same, and not all customizations cost the same. Making the relative costs clear to\r\n\
      your customer should (&lt;em&gt;should!&lt;/em&gt;) encourage them to avoid the more costly customizations.\r\n\
      I'm always shocked at how someone will tell you \"no, we need it to work exactly as\r\n\
      I've told you!\" and then turn around settle for a vendor product that does about half\r\n\
      of what they want, but costs more.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/80ThenStop.aspx\"&gt;80%, then stop&lt;/a&gt; - wherein\r\n\
      I tell a story about my experience with the Pareto principle as it applies to SharePoint\r\n\
      solutions. Also: you don't have to write your apps in SharePoint! If it doesn't save\r\n\
      time, and you don't know of any benefit you'll gain from using SharePoint, then why\r\n\
      are you attempting to use it?&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/EstimatingSharePointTasksCryForHelp.aspx\"&gt;Estimating\r\n\
      SharePoint tasks: cry for help&lt;/a&gt; - scary realization that I'm still unable to estimate\r\n\
      how long something's going to take, primarily because I'm constantly blazing new (new\r\n\
      to me?) trails in the SharePoint API, making bad assumptions about its behavior, triggering\r\n\
      bugs, and running into unexpected limitations. Any of these things can cause multi-day\r\n\
      delays. It does get better if you're writing a second or third app that deals with\r\n\
      the same part of the API.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Framework limitations or errors&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePoint2007HowManyIsTooManyItems.aspx\"&gt;How\r\n\
      many is too many [SharePoint list] items?&lt;/a&gt; - the SharePoint whitepaper announcing\r\n\
      the 2000 (now 3000) item limit per container was something of a blow. To say it clearly:\r\n\
      this limitation prevents you from using OOB lists for anything with real traffic.\r\n\
      There are over 3000 days in 10 years, so at 1 item added a day, you're running into\r\n\
      the recommended limit. Since then I've seen some crazy errors with large lists, mostly\r\n\
      revolving around OutOfMemory errors, crawl errors, using PRIME-derived features on\r\n\
      the lists, exporting to Excel, breaking the Grid-view, and so on. So the list size\r\n\
      limitation is real, if not a \"hard limit.\"&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointWorkflowNuttinessVolume1.aspx\"&gt;SharePoint\r\n\
      Workflow Nuttiness, Volume 1&lt;/a&gt; - My initial foray into SharePoint Workflow development\r\n\
      ended in pain, where I had to scrap an entire approach because Workflow doesn't support\r\n\
      state machines with replicator activites. Then I read Ayende's JFHCI series and it\r\n\
      poisoned me forever against WF. I wonder now what problem Workflow attempts to solve,\r\n\
      and why don't we just use a pure code solution instead? Note that Ayende wrote a book\r\n\
      on DSLs (Workflow is a form of a DSL), so don't just pretend he's some crank with\r\n\
      a blog*. Final note: this is one of my top 3 most visited posts, so apparently lots\r\n\
      of people have run into the specific issue.&lt;br&gt;\r\n\
      &lt;strong&gt;&lt;font size=\"1\"&gt;*I'm aware that by definition, I'm a crank with a blog&lt;/font&gt;&lt;/strong&gt;\r\n\
      &lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/Ken332DaysLaterTodayIsYourLuckyDay.aspx\"&gt;Illegitimate\r\n\
      ErrorWebParts&lt;/a&gt; - a crazy solution to a crazy problem&amp;#8212;here I use the \"crank\r\n\
      the chainsaw a few times\" metaphor to describe loading a SPLimitedWebPartManager.\r\n\
      Really, this is bad.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/DingoesStoleMyBabies.aspx\"&gt;Dingoes stole my babies!&lt;/a&gt; -\r\n\
      wherein I discuss a problem with moving wiki content via the PRIME API.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointAwesomenessUserProfiles.aspx\"&gt;SharePoint\r\n\
      awesomeness: User Profiles&lt;/a&gt; - wherein I discuss a potential benefit of functioning\r\n\
      User Profiles. Unfortunately this post was premature, because the scenario I envisioned/laid\r\n\
      out in the post wasn't possible out-of-the-box. Oops! Another framework limitation.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/ChangingThePDFIconInSharePoint.aspx\"&gt;SharePointPdfIcon\r\n\
      project&lt;/a&gt; - wherein I announce my (failed) CodePlex project. It works great for\r\n\
      single-server farms, incidentally. I just can't be bothered to spend the time to write\r\n\
      all the timer job junk to make it work on multi-server farms when even this souped-up\r\n\
      solution won't work when someone adds a new server to the farm after activating the\r\n\
      Feature&amp;hellip;this is one of those cases where using the SharePoint deployment framework\r\n\
      causes more pain than deploying changes the \"vanilla\" way. Ugh.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;PowerShell + SharePoint&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/LutzReflectorAndSharePointFindTheDLLs.aspx\"&gt;Find\r\n\
      the DLLs&lt;/a&gt; - After determining that Lutz' (now RedGate) Reflector is a core tool\r\n\
      for SharePoint development, the next step was acquiring the DLLs from wherever they\r\n\
      lay. Enter gratuitous use of PowerShell to solve the problem.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/PowerShellIsMagicPartOneOfInfinity.aspx\"&gt;PowerShell\r\n\
      is Magic: Part 1&lt;/a&gt; - wherein I demonstrate PowerShell calling STSADM but also calculating\r\n\
      on the fly. PowerShell is really, really useful.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/PowerShellIsMagicPartTwoOfInfinity.aspx\"&gt;PowerShell\r\n\
      is Magic: Part 2&lt;/a&gt; - wherein I describe (poorly) how the PowerShell REPL is powerful.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointPlusPowerShellWorkingWithWikis.aspx\"&gt;SP\r\n\
      + PS: Working with wikis&lt;/a&gt; - wherein I give a pretty weak (but like the movies say,\r\n\
      based on true events) example of how I use PowerShell to solve problems.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/WhyPowerShellReadability.aspx\"&gt;Why PowerShell:\r\n\
      Readability&lt;/a&gt; - wherein I take another shot at explaining how PowerShell launches\r\n\
      processes (console apps)&amp;hellip;and get the explanation wrong. I should probably post\r\n\
      an update or something. Also, PowerShell can be made to be readable (though like Perl\r\n\
      can be made to be abomination).&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/PowerShellPlusSharePointCornucopia.aspx\"&gt;PS +\r\n\
      SP: Cornucopia&lt;/a&gt; - wherein I list all the real-world uses I've found for PowerShell\r\n\
      working with SharePoint. PowerShell is uniquely useful for SharePoint, because SharePoint\r\n\
      has a) an incomplete admin UI, b) huge object model that's loaded into the GAC, c)\r\n\
      incomplete MSDN documentation, necessitating experimentation, and d) so much XML!\r\n\
      Probably other reasons, but those are the big ones. &lt;strong&gt;Also, Visual Studio post-build\r\n\
      tasks are the devil.&lt;/strong&gt; I'm now ashamed of me of a year ago. Shame on you, 2008-me.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      Useful PowerShell functions I've written. I've looked at others' PowerShell functions\r\n\
      and I think it's a lot simpler to do away with logging, comments, object disposal,\r\n\
      and attempts to improve performance. All things are appropriate in context, but for\r\n\
      me, these are mostly throwaway ad-hoc scripts, and are thus simple and focused.&lt;/li&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://poshcode.org/1251\"&gt;Write-ListDetails&lt;/a&gt; - particularly, discovering\r\n\
      (and recording useful information about) large lists&amp;#8212;and remember, this is PowerShell,\r\n\
      so you can pull ANY data you want, no matter how complex the criteria or where the\r\n\
      data originates.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://poshcode.org/1304\"&gt;Run-Query&lt;/a&gt; - think of this as a REPL for your\r\n\
      SharePoint Enterprise Search SQL queries. Returns pretty objects, not a DataTable.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://poshcode.org/1264\"&gt;Get-CrawlHealth&lt;/a&gt; - I used this to prototype\r\n\
      the functionality I wanted, then built it into a _layouts page. The script works though\r\n\
      (with the exception of the $contentSource.CrawlCompleted property, which is inaccurate\r\n\
      and worthless)&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://poshcode.org/925\"&gt;Update-SearchScopes&lt;/a&gt; - on demand! You can't do\r\n\
      this via the UI.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://poshcode.org/1306\"&gt;Get-UserProfile and Get-UserProfileData&lt;/a&gt; - the\r\n\
      first function retrieves the UserProfile object, the second function maps the (nigh-impenetrable)\r\n\
      property collection to real properties. Useful for bulk data export and for examining\r\n\
      your user profile data in a meaningful way. \r\n\
      &lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Informational (knowledge, not concepts)&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/BriefestIntroductionToGetListItemsUsingCAMLAndListsasmx.aspx\"&gt;Briefest\r\n\
      introduction to GetListItems using CAML and lists.asmx&lt;/a&gt; - by now there are much\r\n\
      better (and more accurate) guides to GetListItems. What may be amusing to you is the\r\n\
      comments I leave on each line of code&amp;#8212;wherein I document how uncertain I am\r\n\
      of what each element does. The MSDN documentation has improved since 2007. As a small\r\n\
      bonus, I'll note that this runs against WSSv2, not SharePoint 2007.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/DontDeleteTheDefaultAppPool.aspx\"&gt;Don't delete\r\n\
      the default app pool&lt;/a&gt; - nitty-gritty details on IIS configuration. Note to anyone\r\n\
      who has rolled out a SharePoint farm: congratulations, you're now qualified to roll\r\n\
      out any ASP.NET app! Personally I'm pumped this knowledge transfers.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/FirefoxSupportsAutoNTLMLogins.aspx\"&gt;Firefox supports\r\n\
      auto-NTLM logins&lt;/a&gt; - most of you aren't aware that you can use Firefox and visit\r\n\
      your SharePoint sites, and not be so aggravated by login boxes&amp;#8212;Firefox supports\r\n\
      automatic NTLM authentication in a manner similar to IE! Follow the directions to\r\n\
      enable it.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/CiscoNLBHealthCheckSetupInSharePoint.aspx\"&gt;Cisco\r\n\
      NLB setup in SharePoint&lt;/a&gt; - because I'm still the only resource for this in the\r\n\
      entire world. Ridiculous.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointSearchFasterThanYouThink.aspx\"&gt;SharePoint\r\n\
      search - faster than you think&lt;/a&gt; - wherein I complain about how slow IE is and how\r\n\
      it is to blame for many of SharePoint's \"performance issues.\" Honestly, it's true&amp;#8212;try\r\n\
      loading SharePoint pages in Firefox, they're way faster. Also it helps if the page\r\n\
      doesn't load 1MB of JavaScript and another 1MB of inline style text.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointTimerJobs.aspx\"&gt;SharePoint Timer Jobs&lt;/a&gt; -\r\n\
      here I attempt to shift from unhelpful ranting, to a post designed to help others\r\n\
      avoid pain. I'm happy to say this is one of the top 3 posts, and hopefully it's helping\r\n\
      people. Specifically, I mention that Timer Job updates require the manual reset of\r\n\
      each Timer service on each server, and provide a script to quickly reschedule a timer\r\n\
      job. Small footnote: I would rewrite the PowerShell script today such that it was\r\n\
      a single function that takes arguments instead of requiring customization of the script.\r\n\
      Functions are self-contained, and can easily be pasted into a PowerShell window (e.g.\r\n\
      a PS window running remotely on a server!) without accidentally executing anything.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.sharepointdevwiki.com/display/public/People+Search\"&gt;Project retrospective\r\n\
      on my People Search project&lt;/a&gt; - raw stream of consciousness, in bullet-point form.\r\n\
      I didn't want to spend much time prettying it up, but reading the list of limitations,\r\n\
      recommended customizations and preferred AD setup can save you weeks (and pain!) on\r\n\
      your People Search project.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Cruft&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointSearchFindBuriedContent.aspx\"&gt;My SharePoint\r\n\
      search page&lt;/a&gt; - to be clear, this is a static HTML page I made with search boxes\r\n\
      to to search Google, search USENET, search the Technet forums, and search Google Reader.\r\n\
      It's mostly broken now, and eventually I'll take it down. I used it A LOT while doing\r\n\
      farm architecture-y type work, and used it heavily when troubleshooting in the early\r\n\
      days. Now that I'm more development-focused, I've found I don't use it. Ever. Takeaway\r\n\
      for everybody: Technet forums search covers more than Google does. If you're desperate\r\n\
      enough, search both Google and the Technet forums (called MSDN Social now?).&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointSearchPageHottestOfTheHot.aspx\"&gt;SharePoint\r\n\
      search page - hottest of the hot!&lt;/a&gt; - wherein I add hotkey support to my (now-defunct)\r\n\
      search page.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;Op-ed (opinion pieces with almost no useful, actionable content&amp;#8212;sorry)&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/DearMSFTPleaseTalkToYourOfficeDivision.aspx\"&gt;Dear\r\n\
      MSFT, please talk to your Office division&lt;/a&gt; - op-ed, Sorry. Summary is, please don't\r\n\
      obfuscate all your DLLs. Side note: InfoPath is pain.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/OneLanguageAYear.aspx\"&gt;One Language A Year&lt;/a&gt; -\r\n\
      wherein I dedicate a year to learn C#&amp;#8212;that is, &lt;em&gt;actually&lt;/em&gt; learn C#. I'll\r\n\
      dig into Scala/Clojure/Haskell/Ruby/Python/Lisp/Scheme/Erlang/JavaScript/Io/Factor/OMeta/Smalltalk\r\n\
      some other day. Also, I outright deny the claim that you should learn one language\r\n\
      a year. It's cheap to give advice. It's not as cheap to &lt;em&gt;follow advice&lt;/em&gt;. I\r\n\
      have a new rule on following advice: does the person giving the advice actually do\r\n\
      what they say? I got similarly disgruntled when \"Uncle Bob\" said something to the\r\n\
      effect that you should dedicate 40 hours to work and 20 hours to learning. That's\r\n\
      just crazy talk.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointWikisAreAwesomeISwear.aspx\"&gt;SharePoint\r\n\
      wikis are awesome, I swear&lt;/a&gt; - another of my top 3 visited SharePoint pages. I now\r\n\
      apologize for defending SharePoint 2007 wikis. Afternote: I wish this wasn't such\r\n\
      a popular page. Of all things, a wiki op-ed piece is one of my top pages, ugh.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointNotUnitTesting.aspx\"&gt;SharePoint: not\r\n\
      unit testing&lt;/a&gt; - I've waffled a bit on this one. My current stance is that I'd really\r\n\
      like to do continuous, automated functional testing (i.e. drive a browser window with\r\n\
      code) to give me confidence my SharePoint solution actually works. True unit testing\r\n\
      wouldn't cover enough space to give me confidence in my project, and most of my SharePoint\r\n\
      projects are tiny, such that the \"designing your API via design-by-example TDD\" argument\r\n\
      for TDD doesn't apply. Also, read this post for a short anecdotal survey on what kind\r\n\
      of problems I run into when developing SharePoint solutions.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/StrongOpinionSayNoToMAKECABEXE.aspx\"&gt;Say no to\r\n\
      makecab.exe&lt;/a&gt; - Here I rant against using makecab. I think I had just read yet another\r\n\
      MSDN article that made casual use of MAKECAB.EXE and pretended like it was a good\r\n\
      idea. Also I apparently just read the CodingHorror post on \"Strong opinions, loosely\r\n\
      held\" which I now think is a terrible formula for my blog posts. At least I include\r\n\
      a somewhat-useful PowerShell snippet that bypasses makecab, that's something.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SurvivingYourFirstSharePointProjectPartOne.aspx\"&gt;Surviving\r\n\
      your first SharePoint project: Part 1&lt;/a&gt; - wherein I sloppily argue that WSPBuilder\r\n\
      is superior to STSDEV, VSeWSS, and makecab. It's true though, and &lt;em&gt;somebody's&lt;/em&gt; got\r\n\
      to counteract all these MSDN articles and books that pretend WSPBuilder doesn't exist&amp;hellip;&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/DoesThisDescribeYou.aspx\"&gt;Does this describe you?&lt;/a&gt; -\r\n\
      short, unhelpful post that quotes Niklaus Virth and laments SharePoint's accidental\r\n\
      complexity.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;SharePoint 2010/SharePoint 14 predictions&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePoint14EverythingWeKnow.aspx\"&gt;SharePoint\r\n\
      14: Everything we know&lt;/a&gt; - it turns out from what I've heard from SPC09, this was\r\n\
      dead-on accurate. They kept PowerPivot silent through the NDA period. Interestingly,\r\n\
      SPC09 was silent on \"Bulldog\", the MDM product Microsoft purchased. Also I apparently\r\n\
      missed out on the TownSquare bits, which they publicly discussed, and which evolved\r\n\
      into the Facebook-like features.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/PreparingYourselfForSharePoint14.aspx\"&gt;Preparing\r\n\
      yourself for SharePoint 14&lt;/a&gt; - I'm proud of my track record here, because I nailed\r\n\
      pretty much everything. Written a full year ago.&lt;/li&gt;\r\n\
      &lt;/ul&gt;\r\n\
      &lt;p&gt;\r\n\
      &lt;strong&gt;\"Other\" category&lt;/strong&gt;\r\n\
      &lt;/p&gt;\r\n\
      &lt;ul&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/YetAnotherSharePointVMRIP.aspx\"&gt;Yet another SharePoint\r\n\
      VM: RIP&lt;/a&gt; - there was a period of time where I was Doing Something Wrong with my\r\n\
      VMs. I now blame either/any of: a) saving state/restoring from saved state in Virtual\r\n\
      Server and Virtual PC, b) running my external USB hard drive off of laptop battery\r\n\
      power, c) lots of plugging and unplugging of said USB hard drive. I haven't had a\r\n\
      problem in a long while now. Takeaway: back up your VM every so often \"offsite\", just\r\n\
      in case.&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/ASPNETMVCFrameworkIsAMAGICFLYINGCARPET.aspx\"&gt;ASP.NET\r\n\
      MVC is a MAGIC FLYING CARPET&lt;/a&gt; - wow, it's been two full years since the announcement!\r\n\
      Anyway, here I mention how SharePoint development feels like alchemy sometimes, and\r\n\
      separately, how the SharePoint developer community doesn't seem to value the things\r\n\
      I like about ASP.NET MVC. Posting this had the side effect of sending lots of poor\r\n\
      souls to my blog from google searching on \"how to create an ASP.NET MVC app inside\r\n\
      SharePoint.\"&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SUGDCSummerConf2008Recap.aspx\"&gt;SUGDC Conference\r\n\
      2008: Recap&lt;/a&gt; - wherein I give a similarly-huge recap of each session I attended.\r\n\
      Also: layoffs drive big SharePoint adoption! So, get with the layoffs!&lt;/li&gt;\r\n\
      &lt;li&gt;\r\n\
      &lt;a href=\"http://www.pseale.com/blog/SharePointPlusASPNETMVC.aspx\"&gt;SharePoint + ASP.NET\r\n\
      MVC&lt;/a&gt; - wherein I troll for people searching for these keywords.&lt;/li&gt;\r\n\
      &lt;/ul&gt;</content>\r\n  </entry>\r\n  <entry>\r\n    <title>Website Background Services Are Hot</title>\r\n    <link rel=\"alternate\" type=\"text/html\" href=\"http://www.pseale.com/blog/WebsiteBackgroundServicesAreHot.aspx\" />\r\n    <id>http://www.pseale.com/blog/PermaLink,guid,4c339717-c8ae-4e4c-a69d-f8fa5b454b6f.aspx</id>\r\n    <published>2009-10-26T20:59:44.98917-07:00</published>\r\n    <updated>2009-10-26T20:59:44.98917-07:00</updated>\r\n    <category term=\".NET\" label=\".NET\" scheme=\"http://www.pseale.com/blog/CategoryView,category,NET.aspx\" />\r\n    <category term=\"ASP.NET MVC\" label=\"ASP.NET MVC\" scheme=\"http://www.pseale.com/blog/CategoryView,category,ASPNETMVC.aspx\" />\r\n    <content type=\"xhtml\">\r\n      <div xmlns=\"http://www.w3.org/1999/xhtml\">\r\n        <p>\r\n\
      This is a two-parter. The first part is to say, hey, look at this sweet hack I've\r\n\
      discovered in the <a href=\"http://oxite.codeplex.com/SourceControl/changeset/view/45053#438025\">Oxite\r\n\
      source</a>*! The second part is to ask, hey, is this a good idea?<br /><font size=\"1\">* </font><a href=\"http://erikporter.com/Blog/Oxite20090215-Released\"><font size=\"1\">the\r\n\
      refactored Oxite source, that is</font></a></p>\r\n        <h3>Background services\r\n\
      </h3>\r\n        <p>\r\n\
      First, let's give a little detail here\xE2\x80\x94<em>background services</em> are long-running\r\n\
      tasks that Oxite needs to run periodically. These are things like sending emails and\r\n\
      sending trackbacks\xE2\x80\x94necessary, certainly. But, they shouldn't be running while\r\n\
      some chump stares at his Netscape window waiting for the site to finish sending 1000\r\n\
      spam trackbacks. He should be able to post to his blog, receive an immediate response\r\n\
      indicating the post is now available, and the trackback spamming can commence later.\r\n\
      Background services are the things you can put off, the things that don't have to\r\n\
      finish before sending a response to your website patrons.\r\n\
      </p>\r\n        <p>\r\n\
      These background services are called by many names\xE2\x80\x94I've heard cron jobs, timer\r\n\
      jobs, background jobs, jobs, \"the heartbeat,\" services, and tasks.\xC2\xA0 In Oxite\r\n\
      they're called background services.\r\n\
      </p>\r\n        <h3>Look at this sweet hack!\r\n\
      </h3>\r\n        <p>\r\n\
      The full source is below, but I'll attempt a walkthrough of the solution here. First,\r\n\
      to explain the problem: we must <strong>achieve the impossible\xE2\x80\x94</strong>we must\r\n\
      somehow emulate a continuously-running Windows service inside an IIS worker process.\r\n\
      This means we must periodically trigger jobs to run, but we can't monopolize valuable\r\n\
      worker threads. And we <em>certainly </em>can't delay responses to send 30000 spam\r\n\
      trackbacks. We've got to run, but we can't run anywhere in the ASP.NET page/request\r\n\
      lifecycle! <em>It's a conundrum.</em></p>\r\n        <p>\r\n\
      What the Oxite team has done to achieve the impossible is, plainly, to cheat\xE2\x80\x94they\r\n\
      use a System.Threading.Timer.\r\n\
      </p>\r\n        <p>\r\n\
      How they manage the impossible is a lot like juggling\xE2\x80\x94<em><strong>magic juggling</strong></em>.\r\n\
      Enter stage left: Oxite, the juggler. Oxite takes a background task and throws it\r\n\
      in the air. He takes hold of the next background task (let's start calling these things\r\n\
      bowling pins) and throws <em>it </em>into the air, and moves on down the line. Before\r\n\
      anyone knows what's happened, Oxite has gathered up all the bowling pins, thrown them\r\n\
      all into the air, and made his getaway. <em>Unlike</em> most jugglers, Oxite makes\r\n\
      no attempt to catch bowling pins once thrown! And this is why it's magic.\r\n\
      </p>\r\n        <blockquote>\r\n          <p>\r\n\
      Let's try to break this back down into code. When Start() first executes [line 28],\r\n\
      the Timer object <strong>sets a callback</strong> without halting progress [line 43].\r\n\
      This is the juggler throwing a pin in the air.\r\n\
      </p>\r\n        </blockquote>\r\n        <p>\r\n\
      The callback method is eventually invoked. A thread is spun up* and runs the designated <strong>timerCallback()</strong> function\r\n\
      [line 56]\xE2\x80\x94and, let's make this clear\xE2\x80\x94timerCallback() doesn't block the\r\n\
      original Oxite web request; it lives in a new thread. And this new thread does its\r\n\
      first dose of work, as shown on line 68 (<strong>SPOILER ALERT:</strong> it calls\r\n\
      Run()).\xC2\xA0 We're not interested in what Run() does exactly\xE2\x80\x94for today it must\r\n\
      remain a spooky mystery, go look it up yourself.<br /><strong><font size=\"1\">* <font color=\"#ff0000\">precisely how</font> the thread is\r\n\
      spun up is in fact, real magic, or might as well be to my superstitious caveman brain</font></strong></p>\r\n        <p>\r\n\
      Ok. Here's where the \"magic\" part of magic juggling comes in. Because any dunce can\r\n\
      throw bowling pins, and any dunce can catch them, and any dunce, with practice, can\r\n\
      juggle. The magic here is inside the timerCallback() method, where the Timer once\r\n\
      again sets a callback. Each time a background service awakens, it does its work and,\r\n\
      before going back to sleep, sets up the next callback with another call to timer.Change()\r\n\
      [line 75]. That is to say, each time the bowling pin makes as if to land, it spins\r\n\
      back upward into the air!\r\n\
      </p>\r\n        <p>\r\n\
      So there you have it. Oxite takes a bunch of bowling pins, throws them all into the\r\n\
      air, and leaves. As the pins drop down to the ground, the \"mystical Timer callback\r\n\
      juggling force\" propels them back into the air.\r\n\
      </p>\r\n        <p>\r\n\
      And we're running background threads in the web process. Sweet.\r\n\
      </p>\r\n        <h3>Now the question is: is this a good idea?\r\n\
      </h3>\r\n        <p>\r\n\
      Now you understand how background tasks work in Oxite\xE2\x80\x94or can now juggle. I get\r\n\
      confused sometimes. In any case, congratulations!\r\n\
      </p>\r\n        <p>\r\n\
      Assuming I'm not misrepresenting anything, this is how background tasks work in Oxite.\r\n\
      So, now for the question. <strong>Is this a reasonably acceptable way to set up background\r\n\
      tasks for a site?</strong> I've discussed it some on twitter, but is there anything\r\n\
      particularly nasty I've missed? Will it kill the process? Will it hang all 25 threads?\r\n\
      Or some large portion of them?\r\n\
      </p>\r\n        <p>\r\n\
      I'm curious to hear if anyone has taken this approach, and what their experiences\r\n\
      were.\r\n\
      </p>\r\n        <h3>Full source\r\n\
      </h3>\r\n        <p>\r\n\
      From <a title=\"http://oxite.codeplex.com/SourceControl/changeset/view/45053#438025\" href=\"http://oxite.codeplex.com/SourceControl/changeset/view/45053#438025\">http://oxite.codeplex.com/SourceControl/changeset/view/45053#438025</a>:\r\n\
      </p>\r\n        <div style=\"font-family: consolas; background: #303030; color: #e0e0e0; font-size: 12pt\">\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 1</span>\xC2\xA0<span style=\"color: #7cfc00\">//\xC2\xA0\r\n\
      \xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 2</span>\xC2\xA0<span style=\"color: #7cfc00\">//\xC2\xA0\r\n\
      Copyright (c) Microsoft Corporation. All rights reserved.</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 3</span>\xC2\xA0<span style=\"color: #7cfc00\">//\xC2\xA0\r\n\
      This source code is made available under the terms of the Microsoft Public License\r\n\
      (Ms-PL)</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 4</span>\xC2\xA0<span style=\"color: #7cfc00\">//\xC2\xA0\r\n\
      http://www.codeplex.com/oxite/license</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 5</span>\xC2\xA0<span style=\"color: #7cfc00\">//\xC2\xA0\r\n\
      \xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94\xE2\x80\x94-</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 6</span>\xC2\xA0<span style=\"color: #40c4ff\">using</span><span style=\"color: #eddac0\">System</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 7</span>\xC2\xA0<span style=\"color: #40c4ff\">using</span><span style=\"color: #eddac0\">System</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Threading</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 8</span>\xC2\xA0<span style=\"color: #40c4ff\">using</span><span style=\"color: #eddac0\">Microsoft</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Practices</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Unity</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0\xC2\xA0 9</span>\xC2\xA0<span style=\"color: #40c4ff\">using</span><span style=\"color: #eddac0\">Oxite</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Services</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 10</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 11</span>\xC2\xA0<span style=\"color: #40c4ff\">namespace</span><span style=\"color: #eddac0\">Oxite</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Infrastructure</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 12</span> {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 13</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">public</span><span style=\"color: #40c4ff\">class</span><span style=\"color: aqua\">BackgroundServiceExecutor</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 14</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 15</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: #40c4ff\">readonly</span><span style=\"color: aqua\">Timer</span><span style=\"color: #eddac0\">timer</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 16</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: #40c4ff\">readonly</span><span style=\"color: #eddac0\">IUnityContainer</span><span style=\"color: #eddac0\">container</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 17</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: #40c4ff\">readonly</span><span style=\"color: aqua\">Guid</span><span style=\"color: #eddac0\">pluginID</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 18</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: #40c4ff\">readonly</span><span style=\"color: aqua\">Type</span><span style=\"color: #eddac0\">type</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 19</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 20</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">public</span><span style=\"color: #eddac0\">BackgroundServiceExecutor</span>(<span style=\"color: #eddac0\">IUnityContainer</span><span style=\"color: #eddac0\">container</span>, <span style=\"color: aqua\">Guid</span><span style=\"color: #eddac0\">pluginID</span>, <span style=\"color: aqua\">Type</span><span style=\"color: #eddac0\">type</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 21</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 22</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">this</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">timer</span><span style=\"color: silver\">=</span><span style=\"color: #40c4ff\">new</span><span style=\"color: aqua\">Timer</span>(<span style=\"color: #eddac0\">timerCallback</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 23</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">this</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">container</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">container</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 24</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">this</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">pluginID</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">pluginID</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 25</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">this</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">type</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">type</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 26</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 27</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 28</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">public</span><span style=\"color: #40c4ff\">void</span><span style=\"color: #eddac0\">Start</span>()\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 29</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 30</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IBackgroundService</span><span style=\"color: #eddac0\">backgroundService</span><span style=\"color: silver\">=</span> (<span style=\"color: aqua\">IBackgroundService</span>)<span style=\"color: #eddac0\">container</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Resolve</span>(<span style=\"color: #eddac0\">type</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 31</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IPlugin</span><span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">getPlugin</span>();\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 32</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">TimeSpan</span><span style=\"color: #eddac0\">interval</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">getInterval</span>(<span style=\"color: #eddac0\">plugin</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 33</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 34</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">if</span> (<span style=\"color: #eddac0\">interval</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">TotalSeconds</span><span style=\"color: silver\">&gt;</span><span style=\"color: #ff80ff\">10</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 35</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 36</span>\xC2\xA0<span style=\"color: #cb97ff\">#if</span> DEBUG\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 37</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">if</span> (<span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Enabled</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 38</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 39</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">backgroundService</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Run</span>(<span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Settings</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 40</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 41</span>\xC2\xA0<span style=\"color: #cb97ff\">#endif</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 42</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 43</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">timer</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Change</span>(<span style=\"color: #eddac0\">interval</span>, <span style=\"color: #40c4ff\">new</span><span style=\"color: aqua\">TimeSpan</span>(<span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: silver\">-</span><span style=\"color: #ff80ff\">1</span>));\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 44</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 45</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 46</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 47</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">public</span><span style=\"color: #40c4ff\">void</span><span style=\"color: #eddac0\">Stop</span>()\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 48</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 49</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">lock</span> (<span style=\"color: #eddac0\">timer</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 50</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 51</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">timer</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Change</span>(<span style=\"color: aqua\">Timeout</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Infinite</span>, <span style=\"color: aqua\">Timeout</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Infinite</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 52</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">timer</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Dispose</span>();\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 53</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 54</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 55</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 56</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: #40c4ff\">void</span><span style=\"color: #eddac0\">timerCallback</span>(<span style=\"color: #40c4ff\">object</span><span style=\"color: #eddac0\">state</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 57</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 58</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">lock</span> (<span style=\"color: #eddac0\">timer</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 59</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 60</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IBackgroundService</span><span style=\"color: #eddac0\">backgroundService</span><span style=\"color: silver\">=</span> (<span style=\"color: aqua\">IBackgroundService</span>)<span style=\"color: #eddac0\">container</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Resolve</span>(<span style=\"color: #eddac0\">type</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 61</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IPlugin</span><span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">getPlugin</span>();\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 62</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">TimeSpan</span><span style=\"color: #eddac0\">interval</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">getInterval</span>(<span style=\"color: #eddac0\">plugin</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 63</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 64</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">if</span> (<span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Enabled</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 65</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 66</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">try</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 67</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 68</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">backgroundService</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Run</span>(<span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Settings</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 69</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 70</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">catch</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 71</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 72</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 73</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 74</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 75</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #eddac0\">timer</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Change</span>(<span style=\"color: #eddac0\">interval</span>, <span style=\"color: #40c4ff\">new</span><span style=\"color: aqua\">TimeSpan</span>(<span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: #ff80ff\">0</span>, <span style=\"color: silver\">-</span><span style=\"color: #ff80ff\">1</span>));\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 76</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 77</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 78</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #7cfc00\">//TODO:\r\n\
      (erikpo) Once background services have a cancel state and timeout interval, check\r\n\
      their state and cancel if appropriate</span></p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 79</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 80</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 81</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: aqua\">IPlugin</span><span style=\"color: #eddac0\">getPlugin</span>()\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 82</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 83</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IPluginService</span><span style=\"color: #eddac0\">pluginService</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">container</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Resolve</span><span style=\"color: silver\">&lt;</span><span style=\"color: aqua\">IPluginService</span><span style=\"color: silver\">&gt;</span>();\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 84</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: aqua\">IPlugin</span><span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">=</span><span style=\"color: #eddac0\">pluginService</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">GetPlugin</span>(<span style=\"color: #eddac0\">pluginID</span>);\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 85</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 86</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">return</span><span style=\"color: #eddac0\">plugin</span>;\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 87</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 88</span>\xC2\xA0\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 89</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">private</span><span style=\"color: aqua\">TimeSpan</span><span style=\"color: #eddac0\">getInterval</span>(<span style=\"color: aqua\">IPlugin</span><span style=\"color: #eddac0\">plugin</span>)\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 90</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      {\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 91</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 <span style=\"color: #40c4ff\">return</span><span style=\"color: aqua\">TimeSpan</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">FromTicks</span>(<span style=\"color: #40c4ff\">long</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Parse</span>(<span style=\"color: #eddac0\">plugin</span><span style=\"color: silver\">.</span><span style=\"color: #eddac0\">Settings</span>[<span style=\"color: #ff80ff\">\"Interval\"</span>]));\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 92</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0\r\n\
      }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 93</span>\xC2\xA0\xC2\xA0\xC2\xA0\xC2\xA0 }\r\n\
      </p>\r\n          <p style=\"margin: 0px\">\r\n            <span style=\"color: #adadad\">\xC2\xA0\xC2\xA0 94</span> }\r\n\
      </p>\r\n        </div>\r\n      </div>\r\n    </content>\r\n  </entry>\r\n\
      </feed>\r\n"
    http_version: "1.1"
