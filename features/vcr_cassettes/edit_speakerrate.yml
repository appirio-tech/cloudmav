--- 
- !ruby/struct:VCR::HTTPInteraction 
  request: !ruby/struct:VCR::Request 
    method: :get
    uri: http://speakerrate.com:80/speakers/3274.json
    body: 
    headers: 
  response: !ruby/struct:VCR::Response 
    status: !ruby/struct:VCR::ResponseStatus 
      code: 200
      message: OK
    headers: 
      server: 
      - Apache/2.2.9 (Ubuntu) Phusion_Passenger/3.0.3
      x-powered-by: 
      - Phusion Passenger (mod_rails/mod_rack) 3.0.3
      etag: 
      - "\"22225617799cb6540db6e52154bdd9bd\""
      x-runtime: 
      - "72"
      cache-control: 
      - private, max-age=0, must-revalidate
      set-cookie: 
      - _spkr8_session=BAh7BzoPc2Vzc2lvbl9pZCIlNzgxOTVjZDA4YzZiNjc4ODFkNjBkNjJmM2Y1ZTE5OWU6DnJldHVybl90byIYL3NwZWFrZXJzLzMyNzQuanNvbg%3D%3D--c9d887aad07f7907ea7589861fb467c9ff803f82; domain=.speakerrate.com; path=/; expires=Sun, 10-Jul-2011 01:39:20 GMT; HttpOnly
      status: 
      - "200"
      content-type: 
      - application/json; charset=utf-8
      content-length: 
      - "29593"
      date: 
      - Sun, 26 Jun 2011 01:39:20 GMT
      x-varnish: 
      - "347957352"
      age: 
      - "0"
      via: 
      - 1.1 varnish
      x-varnish-cache: 
      - MISS
    body: "{\"name\":\"classala\",\"company\":\"EPS Software Corp\",\"cached_content_rating\":4.73,\"avatar_url\":\"http://uploads.speakerrate.com/avatars/3274/thumb/Claudio_Lassala.JPG?1299006601\",\"location\":\"Houston, TX\",\"created_at\":null,\"twitter_username\":\"claudiolassala\",\"title\":\"Software Developer\",\"cached_delivery_rating\":4.82,\"updated_at\":\"2011/04/15 13:06:35 +0000\",\"cached_rating\":4.78,\"id\":3274,\"company_website\":\"http://www.eps-cs.com\",\"avatar_processing\":false,\"rating\":4.78,\"linkedin_url\":\"http://www.linkedin.com/in/ClaudioLassala\",\"talks\":[{\"cached_content_rating\":4.53,\"location\":\"HP User Group in Houston\",\"created_at\":\"2011/04/08 19:02:19 +0000\",\"title\":\"Beyond the Core Concepts of OOP - Solid\",\"event_id\":null,\"cached_delivery_rating\":4.37,\"updated_at\":\"2011/04/15 13:06:34 +0000\",\"featured\":false,\"cached_rating\":4.45,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"You\\u2019ve been learning about the core concepts of Object-Oriented Programming (OOP) for quite some time now: Abstraction, Encapsulation, Inheritance, and Polymorphism. When you thought you knew it all, all of a sudden the cool kids are talking about all these principles such as \\u201cSingle Responsibility Principle\\u201d, \\u201cOpen/Closed Principle\\u201d, \\u201cDependency Inversion Principle\\u201d, as well as Inversion of Control containers, etc. This session presents those concepts so the attendees can understand what they are and start using right away.\",\"fold_lines\":null,\"filter_html\":null},\"id\":7108,\"rating\":4.45,\"slides_url\":\"\",\"when\":\"2011/04/11 13:30:00 +0000\",\"talk_url\":\"\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":4.67,\"location\":\"\",\"created_at\":\"2011/02/24 19:56:51 +0000\",\"title\":\"Beyond the Core Concepts of OOP \\u2013 SOLID\",\"event_id\":766,\"cached_delivery_rating\":4.7,\"updated_at\":\"2011/03/05 11:17:40 +0000\",\"featured\":false,\"cached_rating\":4.68,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"You\\u2019ve been learning about the core concepts of Object-Oriented Programming (OOP) for quite some time now: Abstraction, Encapsulation, Inheritance, and Polymorphism. When you thought you knew it all, all of a sudden the cool kids are talking about all these principles such as \\u201cSingle Responsibility Principle\\u201d, \\u201cOpen/Closed Principle\\u201d, \\u201cDependency Inversion Principle\\u201d, as well as Inversion of Control containers, etc. This session presents those concepts so the attendees can understand what they are and start using right away.\",\"fold_lines\":null,\"filter_html\":null},\"id\":5743,\"rating\":4.68,\"slides_url\":\"http://www.lassala.net/files/presentations/ClaudioLassala-AgileNetHouston2010-SOLID.zip\",\"when\":\"2011/02/25 11:00:00 +0000\",\"talk_url\":\"http://www.agiledotnet.com/2010/10/beyond-the-core-concepts-of-oop-solid/\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"Developer Track\"},{\"cached_content_rating\":4.4,\"location\":null,\"created_at\":\"2011/02/03 02:11:33 +0000\",\"title\":\"Intro to Test-Driven Development\",\"event_id\":736,\"cached_delivery_rating\":4.9,\"updated_at\":\"2011/02/23 19:46:54 +0000\",\"featured\":false,\"cached_rating\":4.65,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Even though the name suggests that Test-Driven Development (or\\r\\nTDD) is all about testing code, it is actually more about designing\\r\\nthe code. By following TDD, a developer writes code that is well\\r\\ndesigned, tested, and documented, and therefore, the quality\\r\\nof what is produced is much higher then that of a code-and-fix\\r\\napproach.\",\"fold_lines\":null,\"filter_html\":null},\"id\":5493,\"rating\":4.65,\"slides_url\":\"\",\"when\":\"2011/02/23 08:00:00 +0000\",\"talk_url\":\"\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":null,\"location\":\"\",\"created_at\":\"2011/02/03 02:14:03 +0000\",\"title\":\"Visual Studio 2010 Tips and Tricks\",\"event_id\":736,\"cached_delivery_rating\":null,\"updated_at\":\"2011/02/20 20:36:18 +0000\",\"featured\":true,\"cached_rating\":null,\"timezone\":\"\",\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Visual Studio is huge, and most developers only learn about the most\\r\\nbasic things that can be done with it. This session covers several tips\\r\\nand tricks to customize and work with Visual Studio and make the\\r\\nmost out of it.\",\"fold_lines\":null,\"filter_html\":null},\"id\":5494,\"rating\":null,\"slides_url\":\"\",\"when\":\"2011/02/23 08:00:00 +0000\",\"talk_url\":\"\",\"is_spam\":false,\"slideshare_key\":\"\",\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":4.6,\"location\":\"Microsoft Offices in Houston\",\"created_at\":\"2011/02/14 15:31:52 +0000\",\"title\":\"Improving My C#\",\"event_id\":null,\"cached_delivery_rating\":4.87,\"updated_at\":\"2011/02/23 17:59:33 +0000\",\"featured\":false,\"cached_rating\":4.73,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Claudio has been both learning and sharing several things at the Virtual Brown Bag (http://virtualbrownbag.com), and he has compiled a list of useful things that have improved his C#, including writing better tests with xUnit/SubSpec, using Mercurial as a source control system, using the dynamic features of C# 4, some refactorings, and a couple of other things.\",\"fold_lines\":null,\"filter_html\":null},\"id\":5624,\"rating\":4.73,\"slides_url\":\"http://www.lassala.net/files/presentations/claudiolassala-csharpughouston-feb2011.zip\",\"when\":\"2011/02/15 19:00:00 +0000\",\"talk_url\":\"http://houstoncsusergroup.wordpress.com/2011/02/09/february-advanced-c-sig/\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":null,\"location\":\"\",\"created_at\":\"2010/10/18 14:42:45 +0000\",\"title\":\"Exploring the Dynamic Features of C# 4\",\"event_id\":639,\"cached_delivery_rating\":null,\"updated_at\":\"2010/10/25 14:45:01 +0000\",\"featured\":false,\"cached_rating\":null,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"C# 4 brings dynamic features to the table, providing developers the ability to address certain scenarios that can't be easily implemented in a statically typed language. That doesn't mean C# is now a dynamic language, or that you should make everything dynamic; it means that we have a few additions to our toolbox that come in really handy when trying to nail some special cases that come our way. In this session we will take a look at how the dynamic features in C# 4 work, and scenarios where it makes sense to use them.\",\"fold_lines\":null,\"filter_html\":null},\"id\":4844,\"rating\":null,\"slides_url\":\"http://www.lassala.net/files/presentations/ClaudioLassala-NWACodeCamp2010.zip\",\"when\":\"2010/10/23 11:20:00 +0000\",\"talk_url\":\"http://nwacodecamp.org/Sessions/354/Exploring-the-Dynamic-Features-of-C-4\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":null,\"location\":\"\",\"created_at\":\"2010/10/18 14:46:14 +0000\",\"title\":\"Beyond the Core Concepts of OOP (SOLID)\",\"event_id\":639,\"cached_delivery_rating\":null,\"updated_at\":\"2010/10/25 14:45:24 +0000\",\"featured\":false,\"cached_rating\":null,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"You've been learning about the core concepts of Object-Oriented Programming (OOP) for quite some time now: Abstraction, Encapsulation, Inheritance, and Polymorphism. When you thought you knew it all, all of a sudden the cool kids are talking about all these principles such as \\\"Single Responsibility Principle\\\", \\\"Open/Closed Principle\\\", \\\"Dependency Inversion Principle\\\", as well as Inversion of Control containers, etc. This session presents those concepts so the attendees can understand what they are and start using right away.\",\"fold_lines\":null,\"filter_html\":null},\"id\":4845,\"rating\":null,\"slides_url\":\"http://www.lassala.net/files/presentations/ClaudioLassala-NWACodeCamp2010.zip\",\"when\":\"2010/10/23 09:00:00 +0000\",\"talk_url\":\"http://nwacodecamp.org/Sessions/350/Beyond-the-Core-Concepts-of-OOP-SOLID\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":null,\"location\":\"\",\"created_at\":\"2010/10/18 14:39:23 +0000\",\"title\":\"Tips \\u0026 Tricks to boost productivity\",\"event_id\":638,\"cached_delivery_rating\":null,\"updated_at\":\"2010/10/25 14:43:36 +0000\",\"featured\":false,\"cached_rating\":null,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Any serious developer must have settings, tools, habits, and anything that can boost productivity. This session goes through a list of things that can shave off precious seconds, minutes, or even hours, allowing one to devote more time to other important things. From shortcuts to tools, through best practices in writing and refactoring code and setting up your environment, we\\u2019ll cover as much as possible on the time allocated for the session. Attendees will learn how to get things done faster, shortcuts, tools, habits that can improve productivity, practices to improve your code so that both you and others spend less time maintaining it...\",\"fold_lines\":null,\"filter_html\":null},\"id\":4843,\"rating\":null,\"slides_url\":\"http://www.lassala.net/files/presentations/ClaudioLassala-TDC2010.zip\",\"when\":\"2010/10/22 15:50:00 +0000\",\"talk_url\":\"http://tysondevcon.com/2010/Sessions/347/Tips--Tricks-to-boost-productivity\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"126\"},{\"cached_content_rating\":null,\"location\":\"\",\"created_at\":\"2010/10/18 14:38:24 +0000\",\"title\":\"Refactoring, Patterns, new language features, code quality, and more! \",\"event_id\":638,\"cached_delivery_rating\":null,\"updated_at\":\"2010/10/25 14:43:52 +0000\",\"featured\":false,\"cached_rating\":null,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Command design pattern, Lambda Expressions, Extension Methods, fluent interfaces, refactoring, test-driven development, writing elegant code, and more. This session will cover a little bit of many things learned from projects I've been working on. We expect every attendee to learn a few tricks that can be applied immediately, and also to feel encouraged to go out and research more on whatever area appeals the most. Besides learning those things, we really hope attendees will start thinking and approaching their code in a different way.\",\"fold_lines\":null,\"filter_html\":null},\"id\":4842,\"rating\":null,\"slides_url\":\"http://www.lassala.net/files/presentations/ClaudioLassala-TDC2010.zip\",\"when\":\"2010/10/22 13:30:00 +0000\",\"talk_url\":\"http://tysondevcon.com/2010/Sessions/353/Refactoring-Patterns-new-language-features-code-quality-and-more-\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"119\"},{\"cached_content_rating\":null,\"location\":\"\",\"created_at\":\"2010/10/18 14:36:58 +0000\",\"title\":\"Be a Professional Developer and Write Clean Code!\",\"event_id\":638,\"cached_delivery_rating\":null,\"updated_at\":\"2010/10/25 14:44:05 +0000\",\"featured\":false,\"cached_rating\":null,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Poorly written code can be created quickly, but it comes at a cost of high maintenance. Most of the time, code can be improved easily by following some simple practices. Professional developers should know these practices and tools and apply it to their work every day. In this session we'll cover the importance of writing clean code, the kind of attitude all developers should have towards the code they produce, as well as the practices and tools that can be used to aid you become a better developer. \",\"fold_lines\":null,\"filter_html\":null},\"id\":4841,\"rating\":null,\"slides_url\":\"http://www.lassala.net/files/presentations/ClaudioLassala-TDC2010.zip\",\"when\":\"2010/10/22 11:10:00 +0000\",\"talk_url\":\"http://tysondevcon.com/2010/Sessions/348/Be-a-Professional-Developer-and-Write-Clean-Code\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"126\"},{\"cached_content_rating\":null,\"location\":\"\",\"created_at\":\"2010/10/18 14:35:33 +0000\",\"title\":\"Beyond the Core Concepts of OOP (SOLID)\",\"event_id\":638,\"cached_delivery_rating\":null,\"updated_at\":\"2010/10/25 14:44:18 +0000\",\"featured\":false,\"cached_rating\":null,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"You've been learning about the core concepts of Object-Oriented Programming (OOP) for quite some time now: Abstraction, Encapsulation, Inheritance, and Polymorphism. When you thought you knew it all, all of a sudden the cool kids are talking about all these principles such as \\\"Single Responsibility Principle\\\", \\\"Open/Closed Principle\\\", \\\"Dependency Inversion Principle\\\", as well as Inversion of Control containers, etc. This session presents those concepts so the attendees can understand what they are and start using right away.\",\"fold_lines\":null,\"filter_html\":null},\"id\":4840,\"rating\":null,\"slides_url\":\"http://www.lassala.net/files/presentations/ClaudioLassala-TDC2010.zip\",\"when\":\"2010/10/22 08:50:00 +0000\",\"talk_url\":\"http://tysondevcon.com/2010/Sessions/350/Beyond-the-Core-Concepts-of-OOP-SOLID\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"126\"},{\"cached_content_rating\":5.0,\"location\":\"\",\"created_at\":\"2010/10/08 05:04:24 +0000\",\"title\":\"Tips \\u0026 Tricks to boost productivity\",\"event_id\":612,\"cached_delivery_rating\":5.0,\"updated_at\":\"2010/12/23 22:56:00 +0000\",\"featured\":false,\"cached_rating\":5.0,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Description: Any serious developer must have settings, tools, habits, and anything that can boost productivity. This session goes through a list of things that can shave off precious seconds, minutes, or even hours, allowing one to devote more time to other important things. From shortcuts to tools, through best practices in writing and refactoring code and setting up your environment, we\\u2019ll cover as much as possible on the time allocated for the session.\\r\\n  Attendees will learn:\\r\\n    How to get things done faster\\r\\n    Shortcuts, tools, habits that can improve productivity\\r\\n    Practices to improve your code so that both you and others spend less time maintaining it\\r\\n    Life is short, so make the most out of it\",\"fold_lines\":null,\"filter_html\":null},\"id\":4760,\"rating\":5.0,\"slides_url\":\"http://www.lassala.net/files/presentations/claudiolassala-houstontechfest2010.zip\",\"when\":\"2010/10/09 17:00:00 +0000\",\"talk_url\":\"http://houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/222/Default.aspx\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":5.0,\"location\":\"\",\"created_at\":\"2010/10/08 05:01:30 +0000\",\"title\":\"Synchronized Development for Distributed Teams\",\"event_id\":612,\"cached_delivery_rating\":5.0,\"updated_at\":\"2010/12/23 22:56:00 +0000\",\"featured\":false,\"cached_rating\":5.0,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"EPS Software/CoDE Consulting has a highly distributed team with developers in Houston, New Orleans, Knoxville, and Sao Paulo all working on overlapping parts of the same project.  This talk, developed by George Mauer and Claudio Lassala for Houston Techfest 2010 will cover some of the tools and techniques used to keep the team synchronized and working together toward a common goal.\",\"fold_lines\":null,\"filter_html\":null},\"id\":4759,\"rating\":5.0,\"slides_url\":\"http://www.lassala.net/files/presentations/claudiolassala-houstontechfest2010.zip\",\"when\":\"2010/10/09 14:30:00 +0000\",\"talk_url\":\"http://houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/214/Default.aspx\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":null,\"location\":\"\",\"created_at\":\"2010/10/08 04:59:39 +0000\",\"title\":\"Virtual Brown Bag\",\"event_id\":612,\"cached_delivery_rating\":null,\"updated_at\":\"2010/10/09 21:17:48 +0000\",\"featured\":false,\"cached_rating\":null,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Introduction to the Virtual Brown bag online sessions.\",\"fold_lines\":null,\"filter_html\":null},\"id\":4758,\"rating\":null,\"slides_url\":\"http://www.lassala.net/files/presentations/claudiolassala-houstontechfest2010.zip\",\"when\":\"2010/10/09 12:00:00 +0000\",\"talk_url\":\"http://houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/278/Default.aspx\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":4.95,\"location\":\"\",\"created_at\":\"2010/10/08 04:58:07 +0000\",\"title\":\"Design Patterns\",\"event_id\":612,\"cached_delivery_rating\":4.8,\"updated_at\":\"2010/12/23 22:56:01 +0000\",\"featured\":false,\"cached_rating\":4.88,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Design Patterns are often used every day by every developer in one way or another. A basic understanding of patterns and how to implement them is very useful for all .NET developer, and this session tries to clarify design patterns in a way that everybody can understand and start thinking about patterns in a more natural way. Attendees will learn:   The definitions of some of the main patterns, how patterns improve code quality, how to implement and use the patterns. covered such as Command, Observer, Adapter, Strategy, Factory, etc.\",\"fold_lines\":null,\"filter_html\":null},\"id\":4757,\"rating\":4.88,\"slides_url\":\"http://www.lassala.net/files/presentations/claudiolassala-houstontechfest2010.zip\",\"when\":\"2010/10/09 10:30:00 +0000\",\"talk_url\":\"http://houstontechfest.com/dotnetnuke/HoustonTechFest/Sessions/tabid/56/CodecampId/3/SessionId/212/Default.aspx\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":4.77,\"location\":\"Microsoft Offices in Houston\",\"created_at\":\"2010/08/31 00:41:19 +0000\",\"title\":\"Exploring the Dynamic Features of C# 4.0\",\"event_id\":null,\"cached_delivery_rating\":4.87,\"updated_at\":\"2010/12/23 22:56:01 +0000\",\"featured\":false,\"cached_rating\":4.82,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"C# 4 brings dynamic features to the table, providing developers the ability to address certain scenarios that can't be easily implemented in a statically typed language. That doesn't mean C# is now a dynamic language, or that you should make everything dynamic; it means that we have a few additions to our toolbox that come in really handy when trying to nail some special cases that come our way. In this session we will take a look at how the dynamic features in C# 4 work, and scenarios where it makes sense to use them.\",\"fold_lines\":null,\"filter_html\":null},\"id\":4360,\"rating\":4.82,\"slides_url\":\"http://www.lassala.net/files/presentations/ClaudioLassala-HDL-Aug2010.zip\",\"when\":\"2010/08/31 06:30:00 +0000\",\"talk_url\":\"http://hdlug.heroku.com/news/2010/08/06/hdlug-meeting-tuesday-august-31-2010/\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":4.7,\"location\":\"Freeman Branch Library: 16616 Diana Lane, Houston, TX 77062\",\"created_at\":\"2010/08/25 15:43:24 +0000\",\"title\":\"Refactoring, Patterns, code quality, and more!\",\"event_id\":null,\"cached_delivery_rating\":4.65,\"updated_at\":\"2010/12/23 22:56:01 +0000\",\"featured\":false,\"cached_rating\":4.68,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Command design pattern, Lambda Expressions, Extension Methods, fluent interfaces, refactoring, test-driven development, writing elegant code, and more. This session will cover a little bit of many things learned from projects I've been working on. We expect every attendee to learn a few tricks that can be applied immediately, and also to feel encouraged to go out and research more on whatever area appeals the most.\",\"fold_lines\":null,\"filter_html\":null},\"id\":4334,\"rating\":4.68,\"slides_url\":\"\",\"when\":\"2010/08/25 18:30:00 +0000\",\"talk_url\":\"http://www.facebook.com/shdnug\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":null,\"location\":\"3200 College Park Drive The Woodlands, TX 77384\",\"created_at\":\"2010/05/20 13:38:56 +0000\",\"title\":\"Refactoring, Patterns, new language features, code quality, and more!\",\"event_id\":null,\"cached_delivery_rating\":null,\"updated_at\":\"2010/05/20 13:38:56 +0000\",\"featured\":false,\"cached_rating\":null,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Command design pattern, Lambda Expressions, Extension Methods, fluent interfaces, refactoring, test-driven development, writing elegant code, and more. This session will cover a little bit of many things learned from projects I've been working on. We expect every attendee to learn a few tricks that can be applied immediately, and also to feel encouraged to go out and research more on whatever area appeals the most.  \",\"fold_lines\":null,\"filter_html\":null},\"id\":3292,\"rating\":null,\"slides_url\":\"\",\"when\":\"2010/05/20 18:30:00 +0000\",\"talk_url\":\"http://nhdnug.org/\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":4.8,\"location\":\"Dallas .NET User Group (Visual Studio 2010 Launch Event)\",\"created_at\":\"2010/05/11 04:08:32 +0000\",\"title\":\"Exploring the Dynamic Features of C# 4\",\"event_id\":null,\"cached_delivery_rating\":4.53,\"updated_at\":\"2010/12/23 22:56:01 +0000\",\"featured\":false,\"cached_rating\":4.67,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"C# 4 brings dynamic features to the table, providing developers the ability to address certain scenarios that can't be easily implemented in a statically typed language. That doesn't mean C# is now a dynamic language, or that you should make everything dynamic; it means that we have a few additions to our toolbox that come in really handy when trying to nail some special cases that come our way. In this session we will take a look at how the dynamic features in C# 4 work, and scenarios where it makes sense to use them.\",\"fold_lines\":null,\"filter_html\":null},\"id\":3218,\"rating\":4.67,\"slides_url\":\"\",\"when\":\"2010/05/13 18:30:00 +0000\",\"talk_url\":\"http://www.ddnug.net/Meetings/UpcomingMeetingsEvents/tabid/101/ctl/Details/mid/421/ItemID/57/Default.aspx?selecteddate=5/13/2010\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":\"\"},{\"cached_content_rating\":null,\"location\":\"Ozark .NET User Group\",\"created_at\":\"2010/03/31 14:03:11 +0000\",\"title\":\"Be a Professional Developer and Write Clean Code!\",\"event_id\":null,\"cached_delivery_rating\":null,\"updated_at\":\"2010/03/31 14:03:11 +0000\",\"featured\":false,\"cached_rating\":null,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Poorly written code can be created quickly, but it comes at a cost of high maintenance. Most of the time, code can be improved easily by following some simple practices. Professional developers should know these practices and tools and apply it to their work every day. This session will cover the importance of writing clean code, the kind of attitude all developers should have towards the code they produce, as well as the practices and tools that can be used to aid you in becoming a better developer.\",\"fold_lines\":null,\"filter_html\":null},\"id\":2900,\"rating\":null,\"slides_url\":\"\",\"when\":\"2010/04/01 18:00:00 +0000\",\"talk_url\":\"http://odnug.org/\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":null},{\"cached_content_rating\":4.9,\"location\":\"Bay.NET (Microsoft Mountain View Center)\",\"created_at\":\"2009/12/08 05:45:33 +0000\",\"title\":\"Command design pattern, Lambda Expressions, Extension Methods, fluent interfaces, refactoring, test-driven development, writing elegant code, and more!\",\"event_id\":null,\"cached_delivery_rating\":4.6,\"updated_at\":\"2010/12/23 22:56:01 +0000\",\"featured\":false,\"cached_rating\":4.75,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Come hear Claudio Lassala speak on the Command design pattern, Lambda Expressions, Extension Methods, fluent interfaces, refactoring, test-driven development, writing elegant code, and more! This session will cover a little bit of many things learned from projects he's been working on.\\r\\n\\r\\nWe expect every attendee to learn a few tricks that can be applied immediately, and also to feel encouraged to go out and research more on whatever area appeals the most. Besides learning those things, we really hope attendees will start thinking and approaching their code in a different way. \",\"fold_lines\":null,\"filter_html\":null},\"id\":1883,\"rating\":4.75,\"slides_url\":\"\",\"when\":\"2009/12/08 19:00:00 +0000\",\"talk_url\":\"http://www.baynetug.org/DesktopModules/DetailXEvents.aspx?ItemID=403\\u0026mid=49\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":null},{\"cached_content_rating\":4.5,\"location\":\"Microsoft Houston Office: One Briar Lake Place, 2000 W. Sam Houston Pkwy. S. #350, Houston , TX 77042\",\"created_at\":\"2009/10/03 23:27:26 +0000\",\"title\":\"Be a Professional Developer and Write Clean Code!\",\"event_id\":null,\"cached_delivery_rating\":4.74,\"updated_at\":\"2010/12/23 22:56:02 +0000\",\"featured\":false,\"cached_rating\":4.62,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Poorly written code can be created quickly, but it comes at a cost of high maintenance. Most of the time, code can be improved easily by following some simple practices. Professional developers should know these practices and tools and apply it to their work every day. In this session we'll cover the importance of writing clean code, the kind of attitude all developers should have towards the code they produce, as well as the practices and tools that can be used to aid you become a better developer. \",\"fold_lines\":null,\"filter_html\":null},\"id\":1534,\"rating\":4.62,\"slides_url\":\"\",\"when\":\"2009/10/08 18:00:00 +0000\",\"talk_url\":\"http://claudiolassala.spaces.live.com/blog/cns!E2A4B22308B39CD2!2245.entry\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":null},{\"cached_content_rating\":4.5,\"location\":\"\",\"created_at\":\"2009/09/24 20:39:11 +0000\",\"title\":\"Building a Composite WPF Application\",\"event_id\":191,\"cached_delivery_rating\":4.9,\"updated_at\":\"2010/12/23 22:56:02 +0000\",\"featured\":false,\"cached_rating\":4.7,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"In this session we create a composite application in WPF, built following the Composite Application Guidance for WPF (codename Prism). The sample application is simple, but most of it is written during the session, covering both the main components of Prism, as well as the Model-View-ViewModel pattern and dependency injection.\",\"fold_lines\":null,\"filter_html\":null},\"id\":1480,\"rating\":4.7,\"slides_url\":\"\",\"when\":\"2009/09/26 20:00:00 +0000\",\"talk_url\":\"\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":null},{\"cached_content_rating\":5.0,\"location\":null,\"created_at\":\"2009/09/24 20:36:51 +0000\",\"title\":\"Beyond the Core Concepts of OOP\",\"event_id\":191,\"cached_delivery_rating\":5.0,\"updated_at\":\"2010/12/23 22:56:02 +0000\",\"featured\":false,\"cached_rating\":5.0,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"You've been learning about the core concepts of Object-Oriented Programming (OOP) for quite some time now: Abstraction, Encapsulation, Inheritance, and Polymorphism. When you thought you knew it all, all of a sudden the cool kids are talking about all these principles such as \\\"Single Responsibility Principle\\\", \\\"Open/Closed Principle\\\", \\\"Dependency Inversion Principle\\\", as well as Inversion of Control containers, etc. This session presents those concepts so the attendees can understand what they are and start using right away.\",\"fold_lines\":null,\"filter_html\":null},\"id\":1478,\"rating\":5.0,\"slides_url\":\"\",\"when\":\"2009/09/26 17:35:00 +0000\",\"talk_url\":\"\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":null},{\"cached_content_rating\":5.0,\"location\":null,\"created_at\":\"2009/09/24 20:37:57 +0000\",\"title\":\"Isolating Dependencies in Unit Tests Using Mocks and Stubs\",\"event_id\":191,\"cached_delivery_rating\":5.0,\"updated_at\":\"2010/12/23 22:56:02 +0000\",\"featured\":false,\"cached_rating\":5.0,\"timezone\":null,\"info\":{\"filter_styles\":null,\"smart\":null,\"text\":\"Soon after getting used to writing \\\"unit\\\" tests, developers tend to realize that those tests weren't really testing \\\"units\\\"; they were testing way more than that. In order to write real unit tests, it's necessary to use test doubles such as mocks and stubs. This session covers how to create and use those, and how to use Rhino Mocks to simplify things further. As we learn about those things, we'll also learn about the importance of thinking through how we write our code, putting thought into the dependencies that a class may have, and how things should be split up.\",\"fold_lines\":null,\"filter_html\":null},\"id\":1479,\"rating\":5.0,\"slides_url\":\"\",\"when\":\"2009/09/26 16:10:00 +0000\",\"talk_url\":\"\",\"is_spam\":false,\"slideshare_key\":null,\"series_id\":null,\"room\":null}],\"talk_count\":25,\"personal_website\":\"http://claudiolassala.wordpress.com\",\"is_spam\":false,\"avatar_updated_at\":\"2011/03/01 19:10:01 +0000\",\"biography\":{\"filter_styles\":null,\"smart\":null,\"text\":\" \\t\\r\\n\\r\\nClaudio Lassala is a Senior Developer at EPS Software Corp. He has presented several lectures at Microsoft events such as PDC Brazil and various other Microsoft seminars, as well as several conferences and user groups across North America and Brazil. He is a multiple winner of the Microsoft MVP Award since 2001 (for Visual FoxPro in 2001-2002, and for C# every since), an INETA speaker, and also holds the MCSD for .NET certification. He has articles published on several magazines, such as MSDN Brazil Magazine, CoDe Magazine, UTMag, Developers Magazine, and FoxPro Advisor. More detailed information regarding his presentations and articles can be found in his MVP Profile at https://mvp.support.microsoft.com/profile/Claudio.Lassala.\",\"fold_lines\":null,\"filter_html\":null}}"
    http_version: "1.1"
- !ruby/struct:VCR::HTTPInteraction 
  request: !ruby/struct:VCR::Request 
    method: :get
    uri: http://www.slideshare.net:80/api/2/get_slideshows_by_user?api_key=IUKyhLLC&ts=1315684395&hash=4b82321dfc33dc84df900b7e39dd1584a80b6252&format=json&username_for=
    body: 
    headers: 
  response: !ruby/struct:VCR::Response 
    status: !ruby/struct:VCR::ResponseStatus 
      code: 200
      message: OK
    headers: 
      server: 
      - nginx/0.6.39
      content-type: 
      - application/xml; charset=iso-8859-1
      status: 
      - 200 OK
      x-xss-protection: 
      - "0"
      x-bench-route: 
      - api2/get_slideshows_by_user
      x-runtime: 
      - "77"
      cache-control: 
      - private, no-cache, must-revalidate, must-revalidate
      content-length: 
      - "134"
      date: 
      - Sat, 10 Sep 2011 19:51:05 GMT
      x-varnish: 
      - "553452555"
      age: 
      - "0"
      via: 
      - 1.1 varnish
      set-cookie: 
      - SERVERID=w2; path=/
    body: |
      <?xml version="1.0" encoding="UTF-8"?>
      <SlideShareServiceError>
        <Message ID="10">User Not Found</Message>
      </SlideShareServiceError>

    http_version: "1.1"
